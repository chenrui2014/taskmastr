extends layout

block content
	#mask
	.modal#key-modal
		.modal-header
			h1#headline Taskmastr
		.modal-body#key-ask
			| Do you have a key? 
			br/
			br/
			| If so, input it below, and if not go ahead and create one!
			br/
			br/
			.prompt-line#key-line
				input.prompt#key(type="password", name="key", ng-model="user.key")
				i.fa.fa-arrow-right.submit#key-button(ng-click="lookup(user.key)")
			br/
			br/
			#tips-button.button
				| Tips:
			.fine-print
				br/
				| &rarr; Make your key unique and preferably nonsensical. This is how we store your tasks for the future!
				br/
				| &rarr; If you do not wish to save your data, simply don't input a key.
				br/
				| &rarr; Use the return key to save text fields.
				br/
				| &rarr; There is no undo if you delete a task.
				br/
				| &rarr; You can rename a task by double-clicking it.
				br/
				| &rarr; You can reorder todos by dragging and dropping.
				br/
				| &rarr; The plug icon toggles dark mode, which is also stored for future visits.
				br/
				| &rarr; &#8984;&darr; acts as a shortcut for saving your data.
	.container
		#todo-prompt What needs doing?
			input.check(type="checkbox", ng-model="user.darkmode", ng-checked="user.darkmode")
			i#dark-mode.fa.fa-plug(value="{{user.darkmode}}")
		.prompt-line#todo-line
			input.prompt#create-todo(type="text", ng-model="newTodo")
			i.fa.fa-arrow-down.submit#todo-button(ng-click="create(newTodo)")
		table#todo-list
			thead
				tr
					th checkbox
					th name
					th toggle
					th utils
			tbody(ui-sortable="sortableOptions", ng-model="user.todos")
				tr.todo(ng-repeat="todo in user.todos | orderBy: '+complete'", ng-class="{complete: todo.complete}", value="{{todo.item}}" name="todo{{$index + 1}}")
					th
						input.check(type="checkbox", ng-checked="todo.complete", ng-model="todo.complete", ng-click="complete($event)")
						i.fa(ng-class="todo.complete ? 'fa-check-circle-o' : 'fa-circle-o'")
					td.todo-cell
						input.rename(type="text", style="display:none", value="{{todo.item}}", ng-model="todo.item")
						span.name {{todo.item}}
					td.toggle
						i.fa.fa-bullseye
					td.utils
						i.fa.fa-bars
						i.fa.fa-pencil
						i.fa.fa-trash-o(ng-click="delete(todo)")
		#save-button.button(ng-click="write(user.key)", ng-class="{'toggled': saveButton}") Save