extends layout

block content
	#mask(ng-if="!user.todos")
	.modal#key-modal.animated(ng-if="!user.todos")
		.modal-header
			h1#headline Taskmastr
		.modal-body#key-ask
			| Do you have an account? 
			br/
			br/
			| Log in to your existing account, or create an account below!
			form(id="user-form", name="userForm", novalidate, login-form)
				.error-text
					label(for="user", ng-show="userForm.username.$invalid && formAttempt")
						| Username required
				.prompt-line#user-line
					input.prompt#user(type="text", name="username", ng-model="user.username", placeholder="Username", ng-required="true", ng-class="{tried: formAttempt}")
				.error-text
					label(for="key", ng-show="userForm.key.$invalid && formAttempt && !invalidPassword")
						| Password required
					label(for="key", ng-show="invalidPassword")
						| Invalid password
				.prompt-line#key-line
					input.prompt#key(type="password", name="key", ng-model="user.key", placeholder="Password", ng-required="true", ng-class="{tried: formAttempt, 'invalid-password': invalidPassword}")
					button.fa.fa-arrow-right.submit#key-button(type="submit", ng-hide="confirmPassword", ng-click="formAttempt = true")
				.error-text
					label(for="confirm", ng-show="confirmPassword && userForm.confirm.$error.required && !userForm.confirm.$error.pwmatch") 
						| No user found. Please confirm your password.
					label(ng-show="userForm.confirm.$error.pwmatch")
						| Passwords don't match.
				.prompt-line#confirm-line(ng-show="confirmPassword", confirm-password)
					input.prompt#confirm(type="password", name="confirm", ng-model="user.confirm", placeholder="Password", ng-required="confirmPassword", pw-check="key", ng-class="{tried: userForm.confirm.$error.pwmatch, 'invalid-password': userForm.confirm.$error.pwmatch}")
					button.fa.fa-arrow-right.submit#confirm-button(type="submit")
				#remember
					input.check#remember-me(type="checkbox", ng-model="rememberMe", ng-checked="rememberMe")
					i.fa(ng-class="rememberMe ? 'fa-check-square-o' : 'fa-square-o'", check-button)
					label(for="remember-me") Remember me
			#tips-button.button(tips-button)
				| Tips:
			ul.fine-print
				li &rarr; Your session is not stored unless you use the Remember Me toggle (which stores it for 30 days).
				li &rarr; When deleting, you have <span style="font-style: italic">five seconds</span> to undo.
				li &rarr; You <span style="font-style: italic">cannot</span> delete a list if it's your only list. Try renaming it or adding another list first.
				li &rarr; We do store which list is currently being viewed, so feel free to save on changing lists.
				li &rarr; You can rename a task or list by double-clicking it.
				li &rarr; The plug icon toggles dark mode, which is also stored for future visits.
				li &rarr; <span style="font-weight: bold; font-style: italic; text-decoration: underline">KEYBOARD SHORTCUTS:</span> Return (&#8617;) saves text fields; CMD+Down (&#8984;&darr;) saves your data; CMD+Right & CMD+Left (&#8984;&rarr; & &#8984;&larr;) toggle the Lists menu; CMD+Up (&#8984;&uarr;) toggles Night Mode.
	#menu
		#list-headline Lists
		.prompt-line#list-line
			input.prompt#create-list(type="text", ng-model="newList", create-todo)
			button.fa.fa-plus.submit#list-button(todo-button="user.todos", todo-model="newList")
		table#lists-list
			thead
				tr
					th name
					th utils
			tbody(ng-sortable="sortableOptions", ng-model="user.todos")
				tr.repeat-animation(ng-repeat="list in user.todos", ng-class="{current: user.current.list === list.list}", ng-click="setCurrent($index)")
					th
					td.list-cell
						input.rename(type="text", style="display:none", value="{{todo.item}}", ng-model="list.list")
						span.name {{list.list}}
					td.utils
						i.fa.fa-arrows-v.sort
						i.fa.fa-pencil
						i.fa.fa-trash-o(delete-button="user.todos", delete-index="$index")
	#content
		.container
			#icon-menu(menu-toggle)
				i.fa.fa-bars
			#todo-prompt What needs doing?
				input.check(type="checkbox", ng-model="user.darkmode", ng-checked="user.darkmode")
				i#dark-mode.fa(value="{{user.darkmode}}", check-button, ng-class="user.darkmode ? 'fa-sun-o' : 'fa-moon-o'")
			.prompt-line#todo-line
				input.prompt#create-todo(type="text", ng-model="newTodo", create-todo)
				button.fa.fa-arrow-down.submit#todo-button(todo-button="user.current.items", todo-model="newTodo")
			i#loading.fa.fa-cog.fa-spin(ng-class="{hidden: !user.key || user.todos}")
			table#todo-list(ng-class="{hidden: !user.todos}")
				thead
					tr
						th checkbox
						th name
						th toggle
						th utils
				tbody(ng-sortable="sortableOptions", ng-model="user.current.items")
					tr.todo.repeat-animation(ng-repeat="todo in user.current.items", ng-class="{complete: todo.complete}", value="{{todo.item}}" name="todo{{$index + 1}}")
						th
							input.check(type="checkbox", ng-checked="todo.complete", ng-model="todo.complete", complete="user.current.items", complete-index="$index")
							i.fa(ng-class="todo.complete ? 'fa-check-circle-o' : 'fa-circle-o'", check-button)
						td.todo-cell
							input.rename(type="text", style="display:none", value="{{todo.item}}", ng-model="todo.item")
							span.name {{todo.item}}
						td.utils
							i.fa.fa-arrows-v.sort
							i.fa.fa-pencil
							i.fa.fa-trash-o(delete-button="user.current.items", delete-index="$index")
			#logout-container
				#logout(ng-show="user.todos", ng-click="logout()")
					i.fa.fa-power-off#power-off
					label(for="power-off") Logout
			#save-button.button(ng-class="{'toggled': saveButton}", save) Save
