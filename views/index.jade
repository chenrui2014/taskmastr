extends layout

block content
	#mask
	.modal#key-modal.animated.active-modal
		.modal-header
			h1#headline Taskmastr
		.modal-body#key-ask
			| Do you have a key? 
			br/
			br/
			| If so, input it below, and if not go ahead and create one!
			form(id="user-form")
				.prompt-line#user-line
					input.prompt#user(type="text", name="user", ng-model="user.username", placeholder="Username", required)
				.prompt-line#key-line
					input.prompt#key(type="password", name="key", ng-model="user.key", placeholder="Password", required, input-key)
					button.fa.fa-arrow-right.submit#key-button(type="submit", ng-hide="confirmPassword", key-button)
				#confirm-text
					label(for="confirm", ng-show="confirmPassword") 
						| No user found. Please confirm your password.
				.prompt-line#confirm-line(ng-show="confirmPassword")
					input.prompt#confirm(type="password", name="confirm", ng-model="user.confirm", placeholder="Password", required, input-key)
					button.fa.fa-arrow-right.submit#confirm-button(type="submit")
				#remember
					input.check#remember-me(type="checkbox", ng-model="rememberMe", ng-checked="rememberMe")
					i.fa(ng-class="rememberMe ? 'fa-check-square-o' : 'fa-square-o'", check-button)
					label(for="remember-me") Remember me
			#tips-button.button
				| Tips:
			.fine-print
				br/
				| &rarr; Make your key unique and preferably nonsensical. This is how we store your tasks for the future!
				br/
				| &rarr; Use the return key (&#8617;) to save text fields.
				br/
				| &rarr; When deleting, you have five seconds to undo.
				br/
				| &rarr; You can rename a task by double-clicking it.
				br/
				| &rarr; The plug icon toggles dark mode, which is also stored for future visits.
				br/
				| &rarr; CMD+Down Arrow (&#8984;&darr;) acts as a shortcut for saving your data.
	.container
		#todo-prompt What needs doing?
			input.check(type="checkbox", ng-model="user.darkmode", ng-checked="user.darkmode")
			i#dark-mode.fa(value="{{user.darkmode}}", check-button, ng-class="user.darkmode ? 'fa-sun-o' : 'fa-moon-o'")
		.prompt-line#todo-line
			input.prompt#create-todo(type="text", ng-model="newTodo", create-todo)
			button.fa.fa-arrow-down.submit#todo-button(todo-button)
		i#loading.fa.fa-cog.fa-spin(ng-class="{hidden: !user.key || user.todos}")
		table#todo-list(ng-class="{hidden: !user.todos}")
			thead
				tr
					th checkbox
					th name
					th toggle
					th utils
			tbody(ng-sortable="sortableOptions", ng-model="user.todos")
				tr.todo.repeat-animation(ng-repeat="todo in user.todos", ng-class="{complete: todo.complete}", value="{{todo.item}}" name="todo{{$index + 1}}")
					th
						input.check(type="checkbox", ng-checked="todo.complete", ng-model="todo.complete", complete)
						i.fa(ng-class="todo.complete ? 'fa-check-circle-o' : 'fa-circle-o'", check-button)
					td.todo-cell
						input.rename(type="text", style="display:none", value="{{todo.item}}", ng-model="todo.item")
						span.name {{todo.item}}
					td.toggle
						i.fa.fa-bars(mobile-button)
					td.utils
						i.fa.fa-arrows-v.sort
						i.fa.fa-pencil
						i.fa.fa-trash-o(delete-button)
		#logout-container
			#logout(ng-show="user.todos")
				i.fa.fa-power-off#power-off(ng-click="logout()")
				label(for="power-off") Logout
		#save-button.button(ng-class="{'toggled': saveButton}", save) Save
