!function(e,t){"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(e,t){function n(e){var t="length"in e&&e.length,n=Z.type(e);return"function"===n||Z.isWindow(e)?!1:1===e.nodeType&&t?!0:"array"===n||0===t||"number"==typeof t&&t>0&&t-1 in e}function r(e,t,n){if(Z.isFunction(t))return Z.grep(e,function(e,r){return!!t.call(e,r,e)!==n});if(t.nodeType)return Z.grep(e,function(e){return e===t!==n});if("string"==typeof t){if(ae.test(t))return Z.filter(t,e,n);t=Z.filter(t,e)}return Z.grep(e,function(e){return U.call(t,e)>=0!==n})}function i(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}function o(e){var t=he[e]={};return Z.each(e.match(de)||[],function(e,n){t[n]=!0}),t}function s(){J.removeEventListener("DOMContentLoaded",s,!1),e.removeEventListener("load",s,!1),Z.ready()}function a(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=Z.expando+a.uid++}function u(e,t,n){var r;if(void 0===n&&1===e.nodeType)if(r="data-"+t.replace(be,"-$1").toLowerCase(),n=e.getAttribute(r),"string"==typeof n){try{n="true"===n?!0:"false"===n?!1:"null"===n?null:+n+""===n?+n:xe.test(n)?Z.parseJSON(n):n}catch(i){}ye.set(e,t,n)}else n=void 0;return n}function l(){return!0}function c(){return!1}function f(){try{return J.activeElement}catch(e){}}function p(e,t){return Z.nodeName(e,"table")&&Z.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e.appendChild(e.ownerDocument.createElement("tbody")):e}function d(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function h(e){var t=Pe.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function g(e,t){for(var n=0,r=e.length;r>n;n++)ve.set(e[n],"globalEval",!t||ve.get(t[n],"globalEval"))}function m(e,t){var n,r,i,o,s,a,u,l;if(1===t.nodeType){if(ve.hasData(e)&&(o=ve.access(e),s=ve.set(t,o),l=o.events)){delete s.handle,s.events={};for(i in l)for(n=0,r=l[i].length;r>n;n++)Z.event.add(t,i,l[i][n])}ye.hasData(e)&&(a=ye.access(e),u=Z.extend({},a),ye.set(t,u))}}function v(e,t){var n=e.getElementsByTagName?e.getElementsByTagName(t||"*"):e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&Z.nodeName(e,t)?Z.merge([e],n):n}function y(e,t){var n=t.nodeName.toLowerCase();"input"===n&&Ne.test(e.type)?t.checked=e.checked:("input"===n||"textarea"===n)&&(t.defaultValue=e.defaultValue)}function x(t,n){var r,i=Z(n.createElement(t)).appendTo(n.body),o=e.getDefaultComputedStyle&&(r=e.getDefaultComputedStyle(i[0]))?r.display:Z.css(i[0],"display");return i.detach(),o}function b(e){var t=J,n=$e[e];return n||(n=x(e,t),"none"!==n&&n||(We=(We||Z("<iframe frameborder='0' width='0' height='0'/>")).appendTo(t.documentElement),t=We[0].contentDocument,t.write(),t.close(),n=x(e,t),We.detach()),$e[e]=n),n}function w(e,t,n){var r,i,o,s,a=e.style;return n=n||_e(e),n&&(s=n.getPropertyValue(t)||n[t]),n&&(""!==s||Z.contains(e.ownerDocument,e)||(s=Z.style(e,t)),Be.test(s)&&Ie.test(t)&&(r=a.width,i=a.minWidth,o=a.maxWidth,a.minWidth=a.maxWidth=a.width=s,s=n.width,a.width=r,a.minWidth=i,a.maxWidth=o)),void 0!==s?s+"":s}function T(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}function C(e,t){if(t in e)return t;for(var n=t[0].toUpperCase()+t.slice(1),r=t,i=Ge.length;i--;)if(t=Ge[i]+n,t in e)return t;return r}function N(e,t,n){var r=Xe.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||"px"):t}function k(e,t,n,r,i){for(var o=n===(r?"border":"content")?4:"width"===t?1:0,s=0;4>o;o+=2)"margin"===n&&(s+=Z.css(e,n+Te[o],!0,i)),r?("content"===n&&(s-=Z.css(e,"padding"+Te[o],!0,i)),"margin"!==n&&(s-=Z.css(e,"border"+Te[o]+"Width",!0,i))):(s+=Z.css(e,"padding"+Te[o],!0,i),"padding"!==n&&(s+=Z.css(e,"border"+Te[o]+"Width",!0,i)));return s}function E(e,t,n){var r=!0,i="width"===t?e.offsetWidth:e.offsetHeight,o=_e(e),s="border-box"===Z.css(e,"boxSizing",!1,o);if(0>=i||null==i){if(i=w(e,t,o),(0>i||null==i)&&(i=e.style[t]),Be.test(i))return i;r=s&&(Q.boxSizingReliable()||i===e.style[t]),i=parseFloat(i)||0}return i+k(e,t,n||(s?"border":"content"),r,o)+"px"}function S(e,t){for(var n,r,i,o=[],s=0,a=e.length;a>s;s++)r=e[s],r.style&&(o[s]=ve.get(r,"olddisplay"),n=r.style.display,t?(o[s]||"none"!==n||(r.style.display=""),""===r.style.display&&Ce(r)&&(o[s]=ve.access(r,"olddisplay",b(r.nodeName)))):(i=Ce(r),"none"===n&&i||ve.set(r,"olddisplay",i?n:Z.css(r,"display"))));for(s=0;a>s;s++)r=e[s],r.style&&(t&&"none"!==r.style.display&&""!==r.style.display||(r.style.display=t?o[s]||"":"none"));return e}function D(e,t,n,r,i){return new D.prototype.init(e,t,n,r,i)}function j(){return setTimeout(function(){Qe=void 0}),Qe=Z.now()}function A(e,t){var n,r=0,i={height:e};for(t=t?1:0;4>r;r+=2-t)n=Te[r],i["margin"+n]=i["padding"+n]=e;return t&&(i.opacity=i.width=e),i}function L(e,t,n){for(var r,i=(nt[t]||[]).concat(nt["*"]),o=0,s=i.length;s>o;o++)if(r=i[o].call(n,t,e))return r}function q(e,t,n){var r,i,o,s,a,u,l,c,f=this,p={},d=e.style,h=e.nodeType&&Ce(e),g=ve.get(e,"fxshow");n.queue||(a=Z._queueHooks(e,"fx"),null==a.unqueued&&(a.unqueued=0,u=a.empty.fire,a.empty.fire=function(){a.unqueued||u()}),a.unqueued++,f.always(function(){f.always(function(){a.unqueued--,Z.queue(e,"fx").length||a.empty.fire()})})),1===e.nodeType&&("height"in t||"width"in t)&&(n.overflow=[d.overflow,d.overflowX,d.overflowY],l=Z.css(e,"display"),c="none"===l?ve.get(e,"olddisplay")||b(e.nodeName):l,"inline"===c&&"none"===Z.css(e,"float")&&(d.display="inline-block")),n.overflow&&(d.overflow="hidden",f.always(function(){d.overflow=n.overflow[0],d.overflowX=n.overflow[1],d.overflowY=n.overflow[2]}));for(r in t)if(i=t[r],Ke.exec(i)){if(delete t[r],o=o||"toggle"===i,i===(h?"hide":"show")){if("show"!==i||!g||void 0===g[r])continue;h=!0}p[r]=g&&g[r]||Z.style(e,r)}else l=void 0;if(Z.isEmptyObject(p))"inline"===("none"===l?b(e.nodeName):l)&&(d.display=l);else{g?"hidden"in g&&(h=g.hidden):g=ve.access(e,"fxshow",{}),o&&(g.hidden=!h),h?Z(e).show():f.done(function(){Z(e).hide()}),f.done(function(){var t;ve.remove(e,"fxshow");for(t in p)Z.style(e,t,p[t])});for(r in p)s=L(h?g[r]:0,r,f),r in g||(g[r]=s.start,h&&(s.end=s.start,s.start="width"===r||"height"===r?1:0))}}function H(e,t){var n,r,i,o,s;for(n in e)if(r=Z.camelCase(n),i=t[r],o=e[n],Z.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),s=Z.cssHooks[r],s&&"expand"in s){o=s.expand(o),delete e[r];for(n in o)n in e||(e[n]=o[n],t[n]=i)}else t[r]=i}function O(e,t,n){var r,i,o=0,s=tt.length,a=Z.Deferred().always(function(){delete u.elem}),u=function(){if(i)return!1;for(var t=Qe||j(),n=Math.max(0,l.startTime+l.duration-t),r=n/l.duration||0,o=1-r,s=0,u=l.tweens.length;u>s;s++)l.tweens[s].run(o);return a.notifyWith(e,[l,o,n]),1>o&&u?n:(a.resolveWith(e,[l]),!1)},l=a.promise({elem:e,props:Z.extend({},t),opts:Z.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:Qe||j(),duration:n.duration,tweens:[],createTween:function(t,n){var r=Z.Tween(e,l.opts,t,n,l.opts.specialEasing[t]||l.opts.easing);return l.tweens.push(r),r},stop:function(t){var n=0,r=t?l.tweens.length:0;if(i)return this;for(i=!0;r>n;n++)l.tweens[n].run(1);return t?a.resolveWith(e,[l,t]):a.rejectWith(e,[l,t]),this}}),c=l.props;for(H(c,l.opts.specialEasing);s>o;o++)if(r=tt[o].call(l,e,c,l.opts))return r;return Z.map(c,L,l),Z.isFunction(l.opts.start)&&l.opts.start.call(e,l),Z.fx.timer(Z.extend(u,{elem:e,anim:l,queue:l.opts.queue})),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always)}function F(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var r,i=0,o=t.toLowerCase().match(de)||[];if(Z.isFunction(n))for(;r=o[i++];)"+"===r[0]?(r=r.slice(1)||"*",(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function P(e,t,n,r){function i(a){var u;return o[a]=!0,Z.each(e[a]||[],function(e,a){var l=a(t,n,r);return"string"!=typeof l||s||o[l]?s?!(u=l):void 0:(t.dataTypes.unshift(l),i(l),!1)}),u}var o={},s=e===xt;return i(t.dataTypes[0])||!o["*"]&&i("*")}function R(e,t){var n,r,i=Z.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((i[n]?e:r||(r={}))[n]=t[n]);return r&&Z.extend(!0,e,r),e}function M(e,t,n){for(var r,i,o,s,a=e.contents,u=e.dataTypes;"*"===u[0];)u.shift(),void 0===r&&(r=e.mimeType||t.getResponseHeader("Content-Type"));if(r)for(i in a)if(a[i]&&a[i].test(r)){u.unshift(i);break}if(u[0]in n)o=u[0];else{for(i in n){if(!u[0]||e.converters[i+" "+u[0]]){o=i;break}s||(s=i)}o=o||s}return o?(o!==u[0]&&u.unshift(o),n[o]):void 0}function W(e,t,n,r){var i,o,s,a,u,l={},c=e.dataTypes.slice();if(c[1])for(s in e.converters)l[s.toLowerCase()]=e.converters[s];for(o=c.shift();o;)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!u&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u=o,o=c.shift())if("*"===o)o=u;else if("*"!==u&&u!==o){if(s=l[u+" "+o]||l["* "+o],!s)for(i in l)if(a=i.split(" "),a[1]===o&&(s=l[u+" "+a[0]]||l["* "+a[0]])){s===!0?s=l[i]:l[i]!==!0&&(o=a[0],c.unshift(a[1]));break}if(s!==!0)if(s&&e["throws"])t=s(t);else try{t=s(t)}catch(f){return{state:"parsererror",error:s?f:"No conversion from "+u+" to "+o}}}return{state:"success",data:t}}function $(e,t,n,r){var i;if(Z.isArray(t))Z.each(t,function(t,i){n||Nt.test(e)?r(e,i):$(e+"["+("object"==typeof i?t:"")+"]",i,n,r)});else if(n||"object"!==Z.type(t))r(e,t);else for(i in t)$(e+"["+i+"]",t[i],n,r)}function I(e){return Z.isWindow(e)?e:9===e.nodeType&&e.defaultView}var B=[],_=B.slice,z=B.concat,X=B.push,U=B.indexOf,V={},Y=V.toString,G=V.hasOwnProperty,Q={},J=e.document,K="2.1.4",Z=function(e,t){return new Z.fn.init(e,t)},ee=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,te=/^-ms-/,ne=/-([\da-z])/gi,re=function(e,t){return t.toUpperCase()};Z.fn=Z.prototype={jquery:K,constructor:Z,selector:"",length:0,toArray:function(){return _.call(this)},get:function(e){return null!=e?0>e?this[e+this.length]:this[e]:_.call(this)},pushStack:function(e){var t=Z.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return Z.each(this,e,t)},map:function(e){return this.pushStack(Z.map(this,function(t,n){return e.call(t,n,t)}))},slice:function(){return this.pushStack(_.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:X,sort:B.sort,splice:B.splice},Z.extend=Z.fn.extend=function(){var e,t,n,r,i,o,s=arguments[0]||{},a=1,u=arguments.length,l=!1;for("boolean"==typeof s&&(l=s,s=arguments[a]||{},a++),"object"==typeof s||Z.isFunction(s)||(s={}),a===u&&(s=this,a--);u>a;a++)if(null!=(e=arguments[a]))for(t in e)n=s[t],r=e[t],s!==r&&(l&&r&&(Z.isPlainObject(r)||(i=Z.isArray(r)))?(i?(i=!1,o=n&&Z.isArray(n)?n:[]):o=n&&Z.isPlainObject(n)?n:{},s[t]=Z.extend(l,o,r)):void 0!==r&&(s[t]=r));return s},Z.extend({expando:"jQuery"+(K+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===Z.type(e)},isArray:Array.isArray,isWindow:function(e){return null!=e&&e===e.window},isNumeric:function(e){return!Z.isArray(e)&&e-parseFloat(e)+1>=0},isPlainObject:function(e){return"object"!==Z.type(e)||e.nodeType||Z.isWindow(e)?!1:e.constructor&&!G.call(e.constructor.prototype,"isPrototypeOf")?!1:!0},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?V[Y.call(e)]||"object":typeof e},globalEval:function(e){var t,n=eval;e=Z.trim(e),e&&(1===e.indexOf("use strict")?(t=J.createElement("script"),t.text=e,J.head.appendChild(t).parentNode.removeChild(t)):n(e))},camelCase:function(e){return e.replace(te,"ms-").replace(ne,re)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,r){var i,o=0,s=e.length,a=n(e);if(r){if(a)for(;s>o&&(i=t.apply(e[o],r),i!==!1);o++);else for(o in e)if(i=t.apply(e[o],r),i===!1)break}else if(a)for(;s>o&&(i=t.call(e[o],o,e[o]),i!==!1);o++);else for(o in e)if(i=t.call(e[o],o,e[o]),i===!1)break;return e},trim:function(e){return null==e?"":(e+"").replace(ee,"")},makeArray:function(e,t){var r=t||[];return null!=e&&(n(Object(e))?Z.merge(r,"string"==typeof e?[e]:e):X.call(r,e)),r},inArray:function(e,t,n){return null==t?-1:U.call(t,e,n)},merge:function(e,t){for(var n=+t.length,r=0,i=e.length;n>r;r++)e[i++]=t[r];return e.length=i,e},grep:function(e,t,n){for(var r,i=[],o=0,s=e.length,a=!n;s>o;o++)r=!t(e[o],o),r!==a&&i.push(e[o]);return i},map:function(e,t,r){var i,o=0,s=e.length,a=n(e),u=[];if(a)for(;s>o;o++)i=t(e[o],o,r),null!=i&&u.push(i);else for(o in e)i=t(e[o],o,r),null!=i&&u.push(i);return z.apply([],u)},guid:1,proxy:function(e,t){var n,r,i;return"string"==typeof t&&(n=e[t],t=e,e=n),Z.isFunction(e)?(r=_.call(arguments,2),i=function(){return e.apply(t||this,r.concat(_.call(arguments)))},i.guid=e.guid=e.guid||Z.guid++,i):void 0},now:Date.now,support:Q}),Z.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(e,t){V["[object "+t+"]"]=t.toLowerCase()});var ie=function(e){function t(e,t,n,r){var i,o,s,a,u,l,f,d,h,g;if((t?t.ownerDocument||t:$)!==q&&L(t),t=t||q,n=n||[],a=t.nodeType,"string"!=typeof e||!e||1!==a&&9!==a&&11!==a)return n;if(!r&&O){if(11!==a&&(i=ye.exec(e)))if(s=i[1]){if(9===a){if(o=t.getElementById(s),!o||!o.parentNode)return n;if(o.id===s)return n.push(o),n}else if(t.ownerDocument&&(o=t.ownerDocument.getElementById(s))&&M(t,o)&&o.id===s)return n.push(o),n}else{if(i[2])return K.apply(n,t.getElementsByTagName(e)),n;if((s=i[3])&&w.getElementsByClassName)return K.apply(n,t.getElementsByClassName(s)),n}if(w.qsa&&(!F||!F.test(e))){if(d=f=W,h=t,g=1!==a&&e,1===a&&"object"!==t.nodeName.toLowerCase()){for(l=k(e),(f=t.getAttribute("id"))?d=f.replace(be,"\\$&"):t.setAttribute("id",d),d="[id='"+d+"'] ",u=l.length;u--;)l[u]=d+p(l[u]);h=xe.test(e)&&c(t.parentNode)||t,g=l.join(",")}if(g)try{return K.apply(n,h.querySelectorAll(g)),n}catch(m){}finally{f||t.removeAttribute("id")}}}return S(e.replace(ue,"$1"),t,n,r)}function n(){function e(n,r){return t.push(n+" ")>T.cacheLength&&delete e[t.shift()],e[n+" "]=r}var t=[];return e}function r(e){return e[W]=!0,e}function i(e){var t=q.createElement("div");try{return!!e(t)}catch(n){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function o(e,t){for(var n=e.split("|"),r=e.length;r--;)T.attrHandle[n[r]]=t}function s(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||V)-(~e.sourceIndex||V);if(r)return r;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function a(e){return function(t){var n=t.nodeName.toLowerCase();return"input"===n&&t.type===e}}function u(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function l(e){return r(function(t){return t=+t,r(function(n,r){for(var i,o=e([],n.length,t),s=o.length;s--;)n[i=o[s]]&&(n[i]=!(r[i]=n[i]))})})}function c(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}function f(){}function p(e){for(var t=0,n=e.length,r="";n>t;t++)r+=e[t].value;return r}function d(e,t,n){var r=t.dir,i=n&&"parentNode"===r,o=B++;return t.first?function(t,n,o){for(;t=t[r];)if(1===t.nodeType||i)return e(t,n,o)}:function(t,n,s){var a,u,l=[I,o];if(s){for(;t=t[r];)if((1===t.nodeType||i)&&e(t,n,s))return!0}else for(;t=t[r];)if(1===t.nodeType||i){if(u=t[W]||(t[W]={}),(a=u[r])&&a[0]===I&&a[1]===o)return l[2]=a[2];if(u[r]=l,l[2]=e(t,n,s))return!0}}}function h(e){return e.length>1?function(t,n,r){for(var i=e.length;i--;)if(!e[i](t,n,r))return!1;return!0}:e[0]}function g(e,n,r){for(var i=0,o=n.length;o>i;i++)t(e,n[i],r);return r}function m(e,t,n,r,i){for(var o,s=[],a=0,u=e.length,l=null!=t;u>a;a++)(o=e[a])&&(!n||n(o,r,i))&&(s.push(o),l&&t.push(a));return s}function v(e,t,n,i,o,s){return i&&!i[W]&&(i=v(i)),o&&!o[W]&&(o=v(o,s)),r(function(r,s,a,u){var l,c,f,p=[],d=[],h=s.length,v=r||g(t||"*",a.nodeType?[a]:a,[]),y=!e||!r&&t?v:m(v,p,e,a,u),x=n?o||(r?e:h||i)?[]:s:y;if(n&&n(y,x,a,u),i)for(l=m(x,d),i(l,[],a,u),c=l.length;c--;)(f=l[c])&&(x[d[c]]=!(y[d[c]]=f));if(r){if(o||e){if(o){for(l=[],c=x.length;c--;)(f=x[c])&&l.push(y[c]=f);o(null,x=[],l,u)}for(c=x.length;c--;)(f=x[c])&&(l=o?ee(r,f):p[c])>-1&&(r[l]=!(s[l]=f))}}else x=m(x===s?x.splice(h,x.length):x),o?o(null,s,x,u):K.apply(s,x)})}function y(e){for(var t,n,r,i=e.length,o=T.relative[e[0].type],s=o||T.relative[" "],a=o?1:0,u=d(function(e){return e===t},s,!0),l=d(function(e){return ee(t,e)>-1},s,!0),c=[function(e,n,r){var i=!o&&(r||n!==D)||((t=n).nodeType?u(e,n,r):l(e,n,r));return t=null,i}];i>a;a++)if(n=T.relative[e[a].type])c=[d(h(c),n)];else{if(n=T.filter[e[a].type].apply(null,e[a].matches),n[W]){for(r=++a;i>r&&!T.relative[e[r].type];r++);return v(a>1&&h(c),a>1&&p(e.slice(0,a-1).concat({value:" "===e[a-2].type?"*":""})).replace(ue,"$1"),n,r>a&&y(e.slice(a,r)),i>r&&y(e=e.slice(r)),i>r&&p(e))}c.push(n)}return h(c)}function x(e,n){var i=n.length>0,o=e.length>0,s=function(r,s,a,u,l){var c,f,p,d=0,h="0",g=r&&[],v=[],y=D,x=r||o&&T.find.TAG("*",l),b=I+=null==y?1:Math.random()||.1,w=x.length;for(l&&(D=s!==q&&s);h!==w&&null!=(c=x[h]);h++){if(o&&c){for(f=0;p=e[f++];)if(p(c,s,a)){u.push(c);break}l&&(I=b)}i&&((c=!p&&c)&&d--,r&&g.push(c))}if(d+=h,i&&h!==d){for(f=0;p=n[f++];)p(g,v,s,a);if(r){if(d>0)for(;h--;)g[h]||v[h]||(v[h]=Q.call(u));v=m(v)}K.apply(u,v),l&&!r&&v.length>0&&d+n.length>1&&t.uniqueSort(u)}return l&&(I=b,D=y),g};return i?r(s):s}var b,w,T,C,N,k,E,S,D,j,A,L,q,H,O,F,P,R,M,W="sizzle"+1*new Date,$=e.document,I=0,B=0,_=n(),z=n(),X=n(),U=function(e,t){return e===t&&(A=!0),0},V=1<<31,Y={}.hasOwnProperty,G=[],Q=G.pop,J=G.push,K=G.push,Z=G.slice,ee=function(e,t){for(var n=0,r=e.length;r>n;n++)if(e[n]===t)return n;return-1},te="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",ne="[\\x20\\t\\r\\n\\f]",re="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",ie=re.replace("w","w#"),oe="\\["+ne+"*("+re+")(?:"+ne+"*([*^$|!~]?=)"+ne+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+ie+"))|)"+ne+"*\\]",se=":("+re+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+oe+")*)|.*)\\)|)",ae=new RegExp(ne+"+","g"),ue=new RegExp("^"+ne+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ne+"+$","g"),le=new RegExp("^"+ne+"*,"+ne+"*"),ce=new RegExp("^"+ne+"*([>+~]|"+ne+")"+ne+"*"),fe=new RegExp("="+ne+"*([^\\]'\"]*?)"+ne+"*\\]","g"),pe=new RegExp(se),de=new RegExp("^"+ie+"$"),he={ID:new RegExp("^#("+re+")"),CLASS:new RegExp("^\\.("+re+")"),TAG:new RegExp("^("+re.replace("w","w*")+")"),ATTR:new RegExp("^"+oe),PSEUDO:new RegExp("^"+se),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ne+"*(even|odd|(([+-]|)(\\d*)n|)"+ne+"*(?:([+-]|)"+ne+"*(\\d+)|))"+ne+"*\\)|)","i"),bool:new RegExp("^(?:"+te+")$","i"),needsContext:new RegExp("^"+ne+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ne+"*((?:-\\d)?\\d*)"+ne+"*\\)|)(?=[^-]|$)","i")},ge=/^(?:input|select|textarea|button)$/i,me=/^h\d$/i,ve=/^[^{]+\{\s*\[native \w/,ye=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,xe=/[+~]/,be=/'|\\/g,we=new RegExp("\\\\([\\da-f]{1,6}"+ne+"?|("+ne+")|.)","ig"),Te=function(e,t,n){var r="0x"+t-65536;return r!==r||n?t:0>r?String.fromCharCode(r+65536):String.fromCharCode(r>>10|55296,1023&r|56320)},Ce=function(){L()};try{K.apply(G=Z.call($.childNodes),$.childNodes),G[$.childNodes.length].nodeType}catch(Ne){K={apply:G.length?function(e,t){J.apply(e,Z.call(t))}:function(e,t){for(var n=e.length,r=0;e[n++]=t[r++];);e.length=n-1}}}w=t.support={},N=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?"HTML"!==t.nodeName:!1},L=t.setDocument=function(e){var t,n,r=e?e.ownerDocument||e:$;return r!==q&&9===r.nodeType&&r.documentElement?(q=r,H=r.documentElement,n=r.defaultView,n&&n!==n.top&&(n.addEventListener?n.addEventListener("unload",Ce,!1):n.attachEvent&&n.attachEvent("onunload",Ce)),O=!N(r),w.attributes=i(function(e){return e.className="i",!e.getAttribute("className")}),w.getElementsByTagName=i(function(e){return e.appendChild(r.createComment("")),!e.getElementsByTagName("*").length}),w.getElementsByClassName=ve.test(r.getElementsByClassName),w.getById=i(function(e){return H.appendChild(e).id=W,!r.getElementsByName||!r.getElementsByName(W).length}),w.getById?(T.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&O){var n=t.getElementById(e);return n&&n.parentNode?[n]:[]}},T.filter.ID=function(e){var t=e.replace(we,Te);return function(e){return e.getAttribute("id")===t}}):(delete T.find.ID,T.filter.ID=function(e){var t=e.replace(we,Te);return function(e){var n="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return n&&n.value===t}}),T.find.TAG=w.getElementsByTagName?function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):w.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if("*"===e){for(;n=o[i++];)1===n.nodeType&&r.push(n);return r}return o},T.find.CLASS=w.getElementsByClassName&&function(e,t){return O?t.getElementsByClassName(e):void 0},P=[],F=[],(w.qsa=ve.test(r.querySelectorAll))&&(i(function(e){H.appendChild(e).innerHTML="<a id='"+W+"'></a><select id='"+W+"-\f]' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&F.push("[*^$]="+ne+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||F.push("\\["+ne+"*(?:value|"+te+")"),e.querySelectorAll("[id~="+W+"-]").length||F.push("~="),e.querySelectorAll(":checked").length||F.push(":checked"),e.querySelectorAll("a#"+W+"+*").length||F.push(".#.+[+~]")}),i(function(e){var t=r.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&F.push("name"+ne+"*[*^$|!~]?="),e.querySelectorAll(":enabled").length||F.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),F.push(",.*:")})),(w.matchesSelector=ve.test(R=H.matches||H.webkitMatchesSelector||H.mozMatchesSelector||H.oMatchesSelector||H.msMatchesSelector))&&i(function(e){w.disconnectedMatch=R.call(e,"div"),R.call(e,"[s!='']:x"),P.push("!=",se)}),F=F.length&&new RegExp(F.join("|")),P=P.length&&new RegExp(P.join("|")),t=ve.test(H.compareDocumentPosition),M=t||ve.test(H.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},U=t?function(e,t){if(e===t)return A=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n?n:(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&n||!w.sortDetached&&t.compareDocumentPosition(e)===n?e===r||e.ownerDocument===$&&M($,e)?-1:t===r||t.ownerDocument===$&&M($,t)?1:j?ee(j,e)-ee(j,t):0:4&n?-1:1)}:function(e,t){if(e===t)return A=!0,0;var n,i=0,o=e.parentNode,a=t.parentNode,u=[e],l=[t];if(!o||!a)return e===r?-1:t===r?1:o?-1:a?1:j?ee(j,e)-ee(j,t):0;if(o===a)return s(e,t);for(n=e;n=n.parentNode;)u.unshift(n);for(n=t;n=n.parentNode;)l.unshift(n);for(;u[i]===l[i];)i++;return i?s(u[i],l[i]):u[i]===$?-1:l[i]===$?1:0},r):q},t.matches=function(e,n){return t(e,null,null,n)},t.matchesSelector=function(e,n){if((e.ownerDocument||e)!==q&&L(e),n=n.replace(fe,"='$1']"),!(!w.matchesSelector||!O||P&&P.test(n)||F&&F.test(n)))try{var r=R.call(e,n);if(r||w.disconnectedMatch||e.document&&11!==e.document.nodeType)return r}catch(i){}return t(n,q,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==q&&L(e),M(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==q&&L(e);var n=T.attrHandle[t.toLowerCase()],r=n&&Y.call(T.attrHandle,t.toLowerCase())?n(e,t,!O):void 0;return void 0!==r?r:w.attributes||!O?e.getAttribute(t):(r=e.getAttributeNode(t))&&r.specified?r.value:null},t.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},t.uniqueSort=function(e){var t,n=[],r=0,i=0;if(A=!w.detectDuplicates,j=!w.sortStable&&e.slice(0),e.sort(U),A){for(;t=e[i++];)t===e[i]&&(r=n.push(i));for(;r--;)e.splice(n[r],1)}return j=null,e},C=t.getText=function(e){var t,n="",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=C(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[r++];)n+=C(t);return n},T=t.selectors={cacheLength:50,createPseudo:r,match:he,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(we,Te),e[3]=(e[3]||e[4]||e[5]||"").replace(we,Te),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return he.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&pe.test(n)&&(t=k(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(we,Te).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=_[e+" "];return t||(t=new RegExp("(^|"+ne+")"+e+"("+ne+"|$)"))&&_(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,n,r){return function(i){var o=t.attr(i,e);return null==o?"!="===n:n?(o+="","="===n?o===r:"!="===n?o!==r:"^="===n?r&&0===o.indexOf(r):"*="===n?r&&o.indexOf(r)>-1:"$="===n?r&&o.slice(-r.length)===r:"~="===n?(" "+o.replace(ae," ")+" ").indexOf(r)>-1:"|="===n?o===r||o.slice(0,r.length+1)===r+"-":!1):!0}},CHILD:function(e,t,n,r,i){var o="nth"!==e.slice(0,3),s="last"!==e.slice(-4),a="of-type"===t;return 1===r&&0===i?function(e){return!!e.parentNode}:function(t,n,u){var l,c,f,p,d,h,g=o!==s?"nextSibling":"previousSibling",m=t.parentNode,v=a&&t.nodeName.toLowerCase(),y=!u&&!a;if(m){if(o){for(;g;){for(f=t;f=f[g];)if(a?f.nodeName.toLowerCase()===v:1===f.nodeType)return!1;h=g="only"===e&&!h&&"nextSibling"}return!0}if(h=[s?m.firstChild:m.lastChild],s&&y){for(c=m[W]||(m[W]={}),l=c[e]||[],d=l[0]===I&&l[1],p=l[0]===I&&l[2],f=d&&m.childNodes[d];f=++d&&f&&f[g]||(p=d=0)||h.pop();)if(1===f.nodeType&&++p&&f===t){c[e]=[I,d,p];break}}else if(y&&(l=(t[W]||(t[W]={}))[e])&&l[0]===I)p=l[1];else for(;(f=++d&&f&&f[g]||(p=d=0)||h.pop())&&((a?f.nodeName.toLowerCase()!==v:1!==f.nodeType)||!++p||(y&&((f[W]||(f[W]={}))[e]=[I,p]),f!==t)););return p-=i,p===r||p%r===0&&p/r>=0}}},PSEUDO:function(e,n){var i,o=T.pseudos[e]||T.setFilters[e.toLowerCase()]||t.error("unsupported pseudo: "+e);return o[W]?o(n):o.length>1?(i=[e,e,"",n],T.setFilters.hasOwnProperty(e.toLowerCase())?r(function(e,t){for(var r,i=o(e,n),s=i.length;s--;)r=ee(e,i[s]),e[r]=!(t[r]=i[s])}):function(e){return o(e,0,i)}):o}},pseudos:{not:r(function(e){var t=[],n=[],i=E(e.replace(ue,"$1"));return i[W]?r(function(e,t,n,r){for(var o,s=i(e,null,r,[]),a=e.length;a--;)(o=s[a])&&(e[a]=!(t[a]=o))}):function(e,r,o){return t[0]=e,i(t,null,o,n),t[0]=null,!n.pop()}}),has:r(function(e){return function(n){return t(e,n).length>0}}),contains:r(function(e){return e=e.replace(we,Te),function(t){return(t.textContent||t.innerText||C(t)).indexOf(e)>-1}}),lang:r(function(e){return de.test(e||"")||t.error("unsupported lang: "+e),e=e.replace(we,Te).toLowerCase(),function(t){var n;do if(n=O?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===H},focus:function(e){return e===q.activeElement&&(!q.hasFocus||q.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!T.pseudos.empty(e)},header:function(e){return me.test(e.nodeName)},input:function(e){return ge.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:l(function(){return[0]}),last:l(function(e,t){return[t-1]}),eq:l(function(e,t,n){return[0>n?n+t:n]}),even:l(function(e,t){for(var n=0;t>n;n+=2)e.push(n);return e}),odd:l(function(e,t){for(var n=1;t>n;n+=2)e.push(n);return e}),lt:l(function(e,t,n){for(var r=0>n?n+t:n;--r>=0;)e.push(r);return e}),gt:l(function(e,t,n){for(var r=0>n?n+t:n;++r<t;)e.push(r);return e})}},T.pseudos.nth=T.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})T.pseudos[b]=a(b);for(b in{submit:!0,reset:!0})T.pseudos[b]=u(b);return f.prototype=T.filters=T.pseudos,T.setFilters=new f,k=t.tokenize=function(e,n){var r,i,o,s,a,u,l,c=z[e+" "];if(c)return n?0:c.slice(0);for(a=e,u=[],l=T.preFilter;a;){(!r||(i=le.exec(a)))&&(i&&(a=a.slice(i[0].length)||a),u.push(o=[])),r=!1,(i=ce.exec(a))&&(r=i.shift(),o.push({value:r,type:i[0].replace(ue," ")}),a=a.slice(r.length));for(s in T.filter)!(i=he[s].exec(a))||l[s]&&!(i=l[s](i))||(r=i.shift(),o.push({value:r,type:s,matches:i}),a=a.slice(r.length));if(!r)break}return n?a.length:a?t.error(e):z(e,u).slice(0)},E=t.compile=function(e,t){var n,r=[],i=[],o=X[e+" "];if(!o){for(t||(t=k(e)),n=t.length;n--;)o=y(t[n]),o[W]?r.push(o):i.push(o);o=X(e,x(i,r)),o.selector=e}return o},S=t.select=function(e,t,n,r){var i,o,s,a,u,l="function"==typeof e&&e,f=!r&&k(e=l.selector||e);if(n=n||[],1===f.length){if(o=f[0]=f[0].slice(0),o.length>2&&"ID"===(s=o[0]).type&&w.getById&&9===t.nodeType&&O&&T.relative[o[1].type]){if(t=(T.find.ID(s.matches[0].replace(we,Te),t)||[])[0],!t)return n;l&&(t=t.parentNode),e=e.slice(o.shift().value.length)}for(i=he.needsContext.test(e)?0:o.length;i--&&(s=o[i],!T.relative[a=s.type]);)if((u=T.find[a])&&(r=u(s.matches[0].replace(we,Te),xe.test(o[0].type)&&c(t.parentNode)||t))){if(o.splice(i,1),e=r.length&&p(o),!e)return K.apply(n,r),n;break}}return(l||E(e,f))(r,t,!O,n,xe.test(e)&&c(t.parentNode)||t),n},w.sortStable=W.split("").sort(U).join("")===W,w.detectDuplicates=!!A,L(),w.sortDetached=i(function(e){return 1&e.compareDocumentPosition(q.createElement("div"))}),i(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||o("type|href|height|width",function(e,t,n){return n?void 0:e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),w.attributes&&i(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||o("value",function(e,t,n){return n||"input"!==e.nodeName.toLowerCase()?void 0:e.defaultValue}),i(function(e){return null==e.getAttribute("disabled")})||o(te,function(e,t,n){var r;return n?void 0:e[t]===!0?t.toLowerCase():(r=e.getAttributeNode(t))&&r.specified?r.value:null}),t}(e);Z.find=ie,Z.expr=ie.selectors,Z.expr[":"]=Z.expr.pseudos,Z.unique=ie.uniqueSort,Z.text=ie.getText,Z.isXMLDoc=ie.isXML,Z.contains=ie.contains;var oe=Z.expr.match.needsContext,se=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,ae=/^.[^:#\[\.,]*$/;Z.filter=function(e,t,n){var r=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===r.nodeType?Z.find.matchesSelector(r,e)?[r]:[]:Z.find.matches(e,Z.grep(t,function(e){return 1===e.nodeType}))},Z.fn.extend({find:function(e){var t,n=this.length,r=[],i=this;

if("string"!=typeof e)return this.pushStack(Z(e).filter(function(){for(t=0;n>t;t++)if(Z.contains(i[t],this))return!0}));for(t=0;n>t;t++)Z.find(e,i[t],r);return r=this.pushStack(n>1?Z.unique(r):r),r.selector=this.selector?this.selector+" "+e:e,r},filter:function(e){return this.pushStack(r(this,e||[],!1))},not:function(e){return this.pushStack(r(this,e||[],!0))},is:function(e){return!!r(this,"string"==typeof e&&oe.test(e)?Z(e):e||[],!1).length}});var ue,le=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,ce=Z.fn.init=function(e,t){var n,r;if(!e)return this;if("string"==typeof e){if(n="<"===e[0]&&">"===e[e.length-1]&&e.length>=3?[null,e,null]:le.exec(e),!n||!n[1]&&t)return!t||t.jquery?(t||ue).find(e):this.constructor(t).find(e);if(n[1]){if(t=t instanceof Z?t[0]:t,Z.merge(this,Z.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:J,!0)),se.test(n[1])&&Z.isPlainObject(t))for(n in t)Z.isFunction(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}return r=J.getElementById(n[2]),r&&r.parentNode&&(this.length=1,this[0]=r),this.context=J,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):Z.isFunction(e)?"undefined"!=typeof ue.ready?ue.ready(e):e(Z):(void 0!==e.selector&&(this.selector=e.selector,this.context=e.context),Z.makeArray(e,this))};ce.prototype=Z.fn,ue=Z(J);var fe=/^(?:parents|prev(?:Until|All))/,pe={children:!0,contents:!0,next:!0,prev:!0};Z.extend({dir:function(e,t,n){for(var r=[],i=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(i&&Z(e).is(n))break;r.push(e)}return r},sibling:function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}}),Z.fn.extend({has:function(e){var t=Z(e,this),n=t.length;return this.filter(function(){for(var e=0;n>e;e++)if(Z.contains(this,t[e]))return!0})},closest:function(e,t){for(var n,r=0,i=this.length,o=[],s=oe.test(e)||"string"!=typeof e?Z(e,t||this.context):0;i>r;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(s?s.index(n)>-1:1===n.nodeType&&Z.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(o.length>1?Z.unique(o):o)},index:function(e){return e?"string"==typeof e?U.call(Z(e),this[0]):U.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(Z.unique(Z.merge(this.get(),Z(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),Z.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return Z.dir(e,"parentNode")},parentsUntil:function(e,t,n){return Z.dir(e,"parentNode",n)},next:function(e){return i(e,"nextSibling")},prev:function(e){return i(e,"previousSibling")},nextAll:function(e){return Z.dir(e,"nextSibling")},prevAll:function(e){return Z.dir(e,"previousSibling")},nextUntil:function(e,t,n){return Z.dir(e,"nextSibling",n)},prevUntil:function(e,t,n){return Z.dir(e,"previousSibling",n)},siblings:function(e){return Z.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return Z.sibling(e.firstChild)},contents:function(e){return e.contentDocument||Z.merge([],e.childNodes)}},function(e,t){Z.fn[e]=function(n,r){var i=Z.map(this,t,n);return"Until"!==e.slice(-5)&&(r=n),r&&"string"==typeof r&&(i=Z.filter(r,i)),this.length>1&&(pe[e]||Z.unique(i),fe.test(e)&&i.reverse()),this.pushStack(i)}});var de=/\S+/g,he={};Z.Callbacks=function(e){e="string"==typeof e?he[e]||o(e):Z.extend({},e);var t,n,r,i,s,a,u=[],l=!e.once&&[],c=function(o){for(t=e.memory&&o,n=!0,a=i||0,i=0,s=u.length,r=!0;u&&s>a;a++)if(u[a].apply(o[0],o[1])===!1&&e.stopOnFalse){t=!1;break}r=!1,u&&(l?l.length&&c(l.shift()):t?u=[]:f.disable())},f={add:function(){if(u){var n=u.length;!function o(t){Z.each(t,function(t,n){var r=Z.type(n);"function"===r?e.unique&&f.has(n)||u.push(n):n&&n.length&&"string"!==r&&o(n)})}(arguments),r?s=u.length:t&&(i=n,c(t))}return this},remove:function(){return u&&Z.each(arguments,function(e,t){for(var n;(n=Z.inArray(t,u,n))>-1;)u.splice(n,1),r&&(s>=n&&s--,a>=n&&a--)}),this},has:function(e){return e?Z.inArray(e,u)>-1:!(!u||!u.length)},empty:function(){return u=[],s=0,this},disable:function(){return u=l=t=void 0,this},disabled:function(){return!u},lock:function(){return l=void 0,t||f.disable(),this},locked:function(){return!l},fireWith:function(e,t){return!u||n&&!l||(t=t||[],t=[e,t.slice?t.slice():t],r?l.push(t):c(t)),this},fire:function(){return f.fireWith(this,arguments),this},fired:function(){return!!n}};return f},Z.extend({Deferred:function(e){var t=[["resolve","done",Z.Callbacks("once memory"),"resolved"],["reject","fail",Z.Callbacks("once memory"),"rejected"],["notify","progress",Z.Callbacks("memory")]],n="pending",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return Z.Deferred(function(n){Z.each(t,function(t,o){var s=Z.isFunction(e[t])&&e[t];i[o[1]](function(){var e=s&&s.apply(this,arguments);e&&Z.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[o[0]+"With"](this===r?n.promise():this,s?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?Z.extend(e,r):r}},i={};return r.pipe=r.then,Z.each(t,function(e,o){var s=o[2],a=o[3];r[o[1]]=s.add,a&&s.add(function(){n=a},t[1^e][2].disable,t[2][2].lock),i[o[0]]=function(){return i[o[0]+"With"](this===i?r:this,arguments),this},i[o[0]+"With"]=s.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t,n,r,i=0,o=_.call(arguments),s=o.length,a=1!==s||e&&Z.isFunction(e.promise)?s:0,u=1===a?e:Z.Deferred(),l=function(e,n,r){return function(i){n[e]=this,r[e]=arguments.length>1?_.call(arguments):i,r===t?u.notifyWith(n,r):--a||u.resolveWith(n,r)}};if(s>1)for(t=new Array(s),n=new Array(s),r=new Array(s);s>i;i++)o[i]&&Z.isFunction(o[i].promise)?o[i].promise().done(l(i,r,o)).fail(u.reject).progress(l(i,n,t)):--a;return a||u.resolveWith(r,o),u.promise()}});var ge;Z.fn.ready=function(e){return Z.ready.promise().done(e),this},Z.extend({isReady:!1,readyWait:1,holdReady:function(e){e?Z.readyWait++:Z.ready(!0)},ready:function(e){(e===!0?--Z.readyWait:Z.isReady)||(Z.isReady=!0,e!==!0&&--Z.readyWait>0||(ge.resolveWith(J,[Z]),Z.fn.triggerHandler&&(Z(J).triggerHandler("ready"),Z(J).off("ready"))))}}),Z.ready.promise=function(t){return ge||(ge=Z.Deferred(),"complete"===J.readyState?setTimeout(Z.ready):(J.addEventListener("DOMContentLoaded",s,!1),e.addEventListener("load",s,!1))),ge.promise(t)},Z.ready.promise();var me=Z.access=function(e,t,n,r,i,o,s){var a=0,u=e.length,l=null==n;if("object"===Z.type(n)){i=!0;for(a in n)Z.access(e,t,a,n[a],!0,o,s)}else if(void 0!==r&&(i=!0,Z.isFunction(r)||(s=!0),l&&(s?(t.call(e,r),t=null):(l=t,t=function(e,t,n){return l.call(Z(e),n)})),t))for(;u>a;a++)t(e[a],n,s?r:r.call(e[a],a,t(e[a],n)));return i?e:l?t.call(e):u?t(e[0],n):o};Z.acceptData=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType},a.uid=1,a.accepts=Z.acceptData,a.prototype={key:function(e){if(!a.accepts(e))return 0;var t={},n=e[this.expando];if(!n){n=a.uid++;try{t[this.expando]={value:n},Object.defineProperties(e,t)}catch(r){t[this.expando]=n,Z.extend(e,t)}}return this.cache[n]||(this.cache[n]={}),n},set:function(e,t,n){var r,i=this.key(e),o=this.cache[i];if("string"==typeof t)o[t]=n;else if(Z.isEmptyObject(o))Z.extend(this.cache[i],t);else for(r in t)o[r]=t[r];return o},get:function(e,t){var n=this.cache[this.key(e)];return void 0===t?n:n[t]},access:function(e,t,n){var r;return void 0===t||t&&"string"==typeof t&&void 0===n?(r=this.get(e,t),void 0!==r?r:this.get(e,Z.camelCase(t))):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r,i,o=this.key(e),s=this.cache[o];if(void 0===t)this.cache[o]={};else{Z.isArray(t)?r=t.concat(t.map(Z.camelCase)):(i=Z.camelCase(t),t in s?r=[t,i]:(r=i,r=r in s?[r]:r.match(de)||[])),n=r.length;for(;n--;)delete s[r[n]]}},hasData:function(e){return!Z.isEmptyObject(this.cache[e[this.expando]]||{})},discard:function(e){e[this.expando]&&delete this.cache[e[this.expando]]}};var ve=new a,ye=new a,xe=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,be=/([A-Z])/g;Z.extend({hasData:function(e){return ye.hasData(e)||ve.hasData(e)},data:function(e,t,n){return ye.access(e,t,n)},removeData:function(e,t){ye.remove(e,t)},_data:function(e,t,n){return ve.access(e,t,n)},_removeData:function(e,t){ve.remove(e,t)}}),Z.fn.extend({data:function(e,t){var n,r,i,o=this[0],s=o&&o.attributes;if(void 0===e){if(this.length&&(i=ye.get(o),1===o.nodeType&&!ve.get(o,"hasDataAttrs"))){for(n=s.length;n--;)s[n]&&(r=s[n].name,0===r.indexOf("data-")&&(r=Z.camelCase(r.slice(5)),u(o,r,i[r])));ve.set(o,"hasDataAttrs",!0)}return i}return"object"==typeof e?this.each(function(){ye.set(this,e)}):me(this,function(t){var n,r=Z.camelCase(e);if(o&&void 0===t){if(n=ye.get(o,e),void 0!==n)return n;if(n=ye.get(o,r),void 0!==n)return n;if(n=u(o,r,void 0),void 0!==n)return n}else this.each(function(){var n=ye.get(this,r);ye.set(this,r,t),-1!==e.indexOf("-")&&void 0!==n&&ye.set(this,e,t)})},null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){ye.remove(this,e)})}}),Z.extend({queue:function(e,t,n){var r;return e?(t=(t||"fx")+"queue",r=ve.get(e,t),n&&(!r||Z.isArray(n)?r=ve.access(e,t,Z.makeArray(n)):r.push(n)),r||[]):void 0},dequeue:function(e,t){t=t||"fx";var n=Z.queue(e,t),r=n.length,i=n.shift(),o=Z._queueHooks(e,t),s=function(){Z.dequeue(e,t)};"inprogress"===i&&(i=n.shift(),r--),i&&("fx"===t&&n.unshift("inprogress"),delete o.stop,i.call(e,s,o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return ve.get(e,n)||ve.access(e,n,{empty:Z.Callbacks("once memory").add(function(){ve.remove(e,[t+"queue",n])})})}}),Z.fn.extend({queue:function(e,t){var n=2;return"string"!=typeof e&&(t=e,e="fx",n--),arguments.length<n?Z.queue(this[0],e):void 0===t?this:this.each(function(){var n=Z.queue(this,e,t);Z._queueHooks(this,e),"fx"===e&&"inprogress"!==n[0]&&Z.dequeue(this,e)})},dequeue:function(e){return this.each(function(){Z.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,r=1,i=Z.Deferred(),o=this,s=this.length,a=function(){--r||i.resolveWith(o,[o])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";s--;)n=ve.get(o[s],e+"queueHooks"),n&&n.empty&&(r++,n.empty.add(a));return a(),i.promise(t)}});var we=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Te=["Top","Right","Bottom","Left"],Ce=function(e,t){return e=t||e,"none"===Z.css(e,"display")||!Z.contains(e.ownerDocument,e)},Ne=/^(?:checkbox|radio)$/i;!function(){var e=J.createDocumentFragment(),t=e.appendChild(J.createElement("div")),n=J.createElement("input");n.setAttribute("type","radio"),n.setAttribute("checked","checked"),n.setAttribute("name","t"),t.appendChild(n),Q.checkClone=t.cloneNode(!0).cloneNode(!0).lastChild.checked,t.innerHTML="<textarea>x</textarea>",Q.noCloneChecked=!!t.cloneNode(!0).lastChild.defaultValue}();var ke="undefined";Q.focusinBubbles="onfocusin"in e;var Ee=/^key/,Se=/^(?:mouse|pointer|contextmenu)|click/,De=/^(?:focusinfocus|focusoutblur)$/,je=/^([^.]*)(?:\.(.+)|)$/;Z.event={global:{},add:function(e,t,n,r,i){var o,s,a,u,l,c,f,p,d,h,g,m=ve.get(e);if(m)for(n.handler&&(o=n,n=o.handler,i=o.selector),n.guid||(n.guid=Z.guid++),(u=m.events)||(u=m.events={}),(s=m.handle)||(s=m.handle=function(t){return typeof Z!==ke&&Z.event.triggered!==t.type?Z.event.dispatch.apply(e,arguments):void 0}),t=(t||"").match(de)||[""],l=t.length;l--;)a=je.exec(t[l])||[],d=g=a[1],h=(a[2]||"").split(".").sort(),d&&(f=Z.event.special[d]||{},d=(i?f.delegateType:f.bindType)||d,f=Z.event.special[d]||{},c=Z.extend({type:d,origType:g,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&Z.expr.match.needsContext.test(i),namespace:h.join(".")},o),(p=u[d])||(p=u[d]=[],p.delegateCount=0,f.setup&&f.setup.call(e,r,h,s)!==!1||e.addEventListener&&e.addEventListener(d,s,!1)),f.add&&(f.add.call(e,c),c.handler.guid||(c.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,c):p.push(c),Z.event.global[d]=!0)},remove:function(e,t,n,r,i){var o,s,a,u,l,c,f,p,d,h,g,m=ve.hasData(e)&&ve.get(e);if(m&&(u=m.events)){for(t=(t||"").match(de)||[""],l=t.length;l--;)if(a=je.exec(t[l])||[],d=g=a[1],h=(a[2]||"").split(".").sort(),d){for(f=Z.event.special[d]||{},d=(r?f.delegateType:f.bindType)||d,p=u[d]||[],a=a[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),s=o=p.length;o--;)c=p[o],!i&&g!==c.origType||n&&n.guid!==c.guid||a&&!a.test(c.namespace)||r&&r!==c.selector&&("**"!==r||!c.selector)||(p.splice(o,1),c.selector&&p.delegateCount--,f.remove&&f.remove.call(e,c));s&&!p.length&&(f.teardown&&f.teardown.call(e,h,m.handle)!==!1||Z.removeEvent(e,d,m.handle),delete u[d])}else for(d in u)Z.event.remove(e,d+t[l],n,r,!0);Z.isEmptyObject(u)&&(delete m.handle,ve.remove(e,"events"))}},trigger:function(t,n,r,i){var o,s,a,u,l,c,f,p=[r||J],d=G.call(t,"type")?t.type:t,h=G.call(t,"namespace")?t.namespace.split("."):[];if(s=a=r=r||J,3!==r.nodeType&&8!==r.nodeType&&!De.test(d+Z.event.triggered)&&(d.indexOf(".")>=0&&(h=d.split("."),d=h.shift(),h.sort()),l=d.indexOf(":")<0&&"on"+d,t=t[Z.expando]?t:new Z.Event(d,"object"==typeof t&&t),t.isTrigger=i?2:3,t.namespace=h.join("."),t.namespace_re=t.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=r),n=null==n?[t]:Z.makeArray(n,[t]),f=Z.event.special[d]||{},i||!f.trigger||f.trigger.apply(r,n)!==!1)){if(!i&&!f.noBubble&&!Z.isWindow(r)){for(u=f.delegateType||d,De.test(u+d)||(s=s.parentNode);s;s=s.parentNode)p.push(s),a=s;a===(r.ownerDocument||J)&&p.push(a.defaultView||a.parentWindow||e)}for(o=0;(s=p[o++])&&!t.isPropagationStopped();)t.type=o>1?u:f.bindType||d,c=(ve.get(s,"events")||{})[t.type]&&ve.get(s,"handle"),c&&c.apply(s,n),c=l&&s[l],c&&c.apply&&Z.acceptData(s)&&(t.result=c.apply(s,n),t.result===!1&&t.preventDefault());return t.type=d,i||t.isDefaultPrevented()||f._default&&f._default.apply(p.pop(),n)!==!1||!Z.acceptData(r)||l&&Z.isFunction(r[d])&&!Z.isWindow(r)&&(a=r[l],a&&(r[l]=null),Z.event.triggered=d,r[d](),Z.event.triggered=void 0,a&&(r[l]=a)),t.result}},dispatch:function(e){e=Z.event.fix(e);var t,n,r,i,o,s=[],a=_.call(arguments),u=(ve.get(this,"events")||{})[e.type]||[],l=Z.event.special[e.type]||{};if(a[0]=e,e.delegateTarget=this,!l.preDispatch||l.preDispatch.call(this,e)!==!1){for(s=Z.event.handlers.call(this,e,u),t=0;(i=s[t++])&&!e.isPropagationStopped();)for(e.currentTarget=i.elem,n=0;(o=i.handlers[n++])&&!e.isImmediatePropagationStopped();)(!e.namespace_re||e.namespace_re.test(o.namespace))&&(e.handleObj=o,e.data=o.data,r=((Z.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,a),void 0!==r&&(e.result=r)===!1&&(e.preventDefault(),e.stopPropagation()));return l.postDispatch&&l.postDispatch.call(this,e),e.result}},handlers:function(e,t){var n,r,i,o,s=[],a=t.delegateCount,u=e.target;if(a&&u.nodeType&&(!e.button||"click"!==e.type))for(;u!==this;u=u.parentNode||this)if(u.disabled!==!0||"click"!==e.type){for(r=[],n=0;a>n;n++)o=t[n],i=o.selector+" ",void 0===r[i]&&(r[i]=o.needsContext?Z(i,this).index(u)>=0:Z.find(i,this,null,[u]).length),r[i]&&r.push(o);r.length&&s.push({elem:u,handlers:r})}return a<t.length&&s.push({elem:this,handlers:t.slice(a)}),s},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,t){var n,r,i,o=t.button;return null==e.pageX&&null!=t.clientX&&(n=e.target.ownerDocument||J,r=n.documentElement,i=n.body,e.pageX=t.clientX+(r&&r.scrollLeft||i&&i.scrollLeft||0)-(r&&r.clientLeft||i&&i.clientLeft||0),e.pageY=t.clientY+(r&&r.scrollTop||i&&i.scrollTop||0)-(r&&r.clientTop||i&&i.clientTop||0)),e.which||void 0===o||(e.which=1&o?1:2&o?3:4&o?2:0),e}},fix:function(e){if(e[Z.expando])return e;var t,n,r,i=e.type,o=e,s=this.fixHooks[i];for(s||(this.fixHooks[i]=s=Se.test(i)?this.mouseHooks:Ee.test(i)?this.keyHooks:{}),r=s.props?this.props.concat(s.props):this.props,e=new Z.Event(o),t=r.length;t--;)n=r[t],e[n]=o[n];return e.target||(e.target=J),3===e.target.nodeType&&(e.target=e.target.parentNode),s.filter?s.filter(e,o):e},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==f()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===f()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&Z.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(e){return Z.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,n,r){var i=Z.extend(new Z.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?Z.event.trigger(i,null,t):Z.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},Z.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)},Z.Event=function(e,t){return this instanceof Z.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&e.returnValue===!1?l:c):this.type=e,t&&Z.extend(this,t),this.timeStamp=e&&e.timeStamp||Z.now(),void(this[Z.expando]=!0)):new Z.Event(e,t)},Z.Event.prototype={isDefaultPrevented:c,isPropagationStopped:c,isImmediatePropagationStopped:c,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=l,e&&e.preventDefault&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=l,e&&e.stopPropagation&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=l,e&&e.stopImmediatePropagation&&e.stopImmediatePropagation(),this.stopPropagation()}},Z.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,t){Z.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,o=e.handleObj;return(!i||i!==r&&!Z.contains(r,i))&&(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),Q.focusinBubbles||Z.each({focus:"focusin",blur:"focusout"},function(e,t){var n=function(e){Z.event.simulate(t,e.target,Z.event.fix(e),!0)};Z.event.special[t]={setup:function(){var r=this.ownerDocument||this,i=ve.access(r,t);i||r.addEventListener(e,n,!0),ve.access(r,t,(i||0)+1)},teardown:function(){var r=this.ownerDocument||this,i=ve.access(r,t)-1;i?ve.access(r,t,i):(r.removeEventListener(e,n,!0),ve.remove(r,t))}}}),Z.fn.extend({on:function(e,t,n,r,i){var o,s;if("object"==typeof e){"string"!=typeof t&&(n=n||t,t=void 0);for(s in e)this.on(s,t,n,e[s],i);return this}if(null==n&&null==r?(r=t,n=t=void 0):null==r&&("string"==typeof t?(r=n,n=void 0):(r=n,n=t,t=void 0)),r===!1)r=c;else if(!r)return this;return 1===i&&(o=r,r=function(e){return Z().off(e),o.apply(this,arguments)},r.guid=o.guid||(o.guid=Z.guid++)),this.each(function(){Z.event.add(this,e,r,n,t)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,Z(e.delegateTarget).off(r.namespace?r.origType+"."+r.namespace:r.origType,r.selector,r.handler),this;if("object"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return(t===!1||"function"==typeof t)&&(n=t,t=void 0),n===!1&&(n=c),this.each(function(){Z.event.remove(this,e,n,t)})},trigger:function(e,t){return this.each(function(){Z.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];return n?Z.event.trigger(e,t,n,!0):void 0}});var Ae=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,Le=/<([\w:]+)/,qe=/<|&#?\w+;/,He=/<(?:script|style|link)/i,Oe=/checked\s*(?:[^=]|=\s*.checked.)/i,Fe=/^$|\/(?:java|ecma)script/i,Pe=/^true\/(.*)/,Re=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,Me={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Me.optgroup=Me.option,Me.tbody=Me.tfoot=Me.colgroup=Me.caption=Me.thead,Me.th=Me.td,Z.extend({clone:function(e,t,n){var r,i,o,s,a=e.cloneNode(!0),u=Z.contains(e.ownerDocument,e);if(!(Q.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||Z.isXMLDoc(e)))for(s=v(a),o=v(e),r=0,i=o.length;i>r;r++)y(o[r],s[r]);if(t)if(n)for(o=o||v(e),s=s||v(a),r=0,i=o.length;i>r;r++)m(o[r],s[r]);else m(e,a);return s=v(a,"script"),s.length>0&&g(s,!u&&v(e,"script")),a},buildFragment:function(e,t,n,r){for(var i,o,s,a,u,l,c=t.createDocumentFragment(),f=[],p=0,d=e.length;d>p;p++)if(i=e[p],i||0===i)if("object"===Z.type(i))Z.merge(f,i.nodeType?[i]:i);else if(qe.test(i)){for(o=o||c.appendChild(t.createElement("div")),s=(Le.exec(i)||["",""])[1].toLowerCase(),a=Me[s]||Me._default,o.innerHTML=a[1]+i.replace(Ae,"<$1></$2>")+a[2],l=a[0];l--;)o=o.lastChild;Z.merge(f,o.childNodes),o=c.firstChild,o.textContent=""}else f.push(t.createTextNode(i));for(c.textContent="",p=0;i=f[p++];)if((!r||-1===Z.inArray(i,r))&&(u=Z.contains(i.ownerDocument,i),o=v(c.appendChild(i),"script"),u&&g(o),n))for(l=0;i=o[l++];)Fe.test(i.type||"")&&n.push(i);return c},cleanData:function(e){for(var t,n,r,i,o=Z.event.special,s=0;void 0!==(n=e[s]);s++){if(Z.acceptData(n)&&(i=n[ve.expando],i&&(t=ve.cache[i]))){if(t.events)for(r in t.events)o[r]?Z.event.remove(n,r):Z.removeEvent(n,r,t.handle);ve.cache[i]&&delete ve.cache[i]}delete ye.cache[n[ye.expando]]}}}),Z.fn.extend({text:function(e){return me(this,function(e){return void 0===e?Z.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=e)})},null,e,arguments.length)},append:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=p(this,e);t.appendChild(e)}})},prepend:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=p(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){for(var n,r=e?Z.filter(e,this):this,i=0;null!=(n=r[i]);i++)t||1!==n.nodeType||Z.cleanData(v(n)),n.parentNode&&(t&&Z.contains(n.ownerDocument,n)&&g(v(n,"script")),n.parentNode.removeChild(n));return this},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(Z.cleanData(v(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return Z.clone(this,e,t)})},html:function(e){return me(this,function(e){var t=this[0]||{},n=0,r=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!He.test(e)&&!Me[(Le.exec(e)||["",""])[1].toLowerCase()]){e=e.replace(Ae,"<$1></$2>");try{for(;r>n;n++)t=this[n]||{},1===t.nodeType&&(Z.cleanData(v(t,!1)),t.innerHTML=e);t=0}catch(i){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=arguments[0];return this.domManip(arguments,function(t){e=this.parentNode,Z.cleanData(v(this)),e&&e.replaceChild(t,this)}),e&&(e.length||e.nodeType)?this:this.remove()},detach:function(e){return this.remove(e,!0)},domManip:function(e,t){e=z.apply([],e);var n,r,i,o,s,a,u=0,l=this.length,c=this,f=l-1,p=e[0],g=Z.isFunction(p);if(g||l>1&&"string"==typeof p&&!Q.checkClone&&Oe.test(p))return this.each(function(n){var r=c.eq(n);g&&(e[0]=p.call(this,n,r.html())),r.domManip(e,t)});if(l&&(n=Z.buildFragment(e,this[0].ownerDocument,!1,this),r=n.firstChild,1===n.childNodes.length&&(n=r),r)){for(i=Z.map(v(n,"script"),d),o=i.length;l>u;u++)s=n,u!==f&&(s=Z.clone(s,!0,!0),o&&Z.merge(i,v(s,"script"))),t.call(this[u],s,u);if(o)for(a=i[i.length-1].ownerDocument,Z.map(i,h),u=0;o>u;u++)s=i[u],Fe.test(s.type||"")&&!ve.access(s,"globalEval")&&Z.contains(a,s)&&(s.src?Z._evalUrl&&Z._evalUrl(s.src):Z.globalEval(s.textContent.replace(Re,"")))}return this}}),Z.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){Z.fn[e]=function(e){for(var n,r=[],i=Z(e),o=i.length-1,s=0;o>=s;s++)n=s===o?this:this.clone(!0),Z(i[s])[t](n),X.apply(r,n.get());return this.pushStack(r)}});var We,$e={},Ie=/^margin/,Be=new RegExp("^("+we+")(?!px)[a-z%]+$","i"),_e=function(t){return t.ownerDocument.defaultView.opener?t.ownerDocument.defaultView.getComputedStyle(t,null):e.getComputedStyle(t,null)};!function(){function t(){s.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",s.innerHTML="",i.appendChild(o);var t=e.getComputedStyle(s,null);n="1%"!==t.top,r="4px"===t.width,i.removeChild(o)}var n,r,i=J.documentElement,o=J.createElement("div"),s=J.createElement("div");s.style&&(s.style.backgroundClip="content-box",s.cloneNode(!0).style.backgroundClip="",Q.clearCloneStyle="content-box"===s.style.backgroundClip,o.style.cssText="border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute",o.appendChild(s),e.getComputedStyle&&Z.extend(Q,{pixelPosition:function(){return t(),n},boxSizingReliable:function(){return null==r&&t(),r},reliableMarginRight:function(){var t,n=s.appendChild(J.createElement("div"));return n.style.cssText=s.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",n.style.marginRight=n.style.width="0",s.style.width="1px",i.appendChild(o),t=!parseFloat(e.getComputedStyle(n,null).marginRight),i.removeChild(o),s.removeChild(n),t}}))}(),Z.swap=function(e,t,n,r){var i,o,s={};for(o in t)s[o]=e.style[o],e.style[o]=t[o];i=n.apply(e,r||[]);for(o in t)e.style[o]=s[o];return i};var ze=/^(none|table(?!-c[ea]).+)/,Xe=new RegExp("^("+we+")(.*)$","i"),Ue=new RegExp("^([+-])=("+we+")","i"),Ve={position:"absolute",visibility:"hidden",display:"block"},Ye={letterSpacing:"0",fontWeight:"400"},Ge=["Webkit","O","Moz","ms"];Z.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=w(e,"opacity");return""===n?"1":n}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,s,a=Z.camelCase(t),u=e.style;return t=Z.cssProps[a]||(Z.cssProps[a]=C(u,a)),s=Z.cssHooks[t]||Z.cssHooks[a],void 0===n?s&&"get"in s&&void 0!==(i=s.get(e,!1,r))?i:u[t]:(o=typeof n,"string"===o&&(i=Ue.exec(n))&&(n=(i[1]+1)*i[2]+parseFloat(Z.css(e,t)),o="number"),void(null!=n&&n===n&&("number"!==o||Z.cssNumber[a]||(n+="px"),Q.clearCloneStyle||""!==n||0!==t.indexOf("background")||(u[t]="inherit"),s&&"set"in s&&void 0===(n=s.set(e,n,r))||(u[t]=n))))}},css:function(e,t,n,r){var i,o,s,a=Z.camelCase(t);return t=Z.cssProps[a]||(Z.cssProps[a]=C(e.style,a)),s=Z.cssHooks[t]||Z.cssHooks[a],s&&"get"in s&&(i=s.get(e,!0,n)),void 0===i&&(i=w(e,t,r)),"normal"===i&&t in Ye&&(i=Ye[t]),""===n||n?(o=parseFloat(i),n===!0||Z.isNumeric(o)?o||0:i):i}}),Z.each(["height","width"],function(e,t){Z.cssHooks[t]={get:function(e,n,r){return n?ze.test(Z.css(e,"display"))&&0===e.offsetWidth?Z.swap(e,Ve,function(){return E(e,t,r)}):E(e,t,r):void 0},set:function(e,n,r){var i=r&&_e(e);return N(e,n,r?k(e,t,r,"border-box"===Z.css(e,"boxSizing",!1,i),i):0)}}}),Z.cssHooks.marginRight=T(Q.reliableMarginRight,function(e,t){return t?Z.swap(e,{display:"inline-block"},w,[e,"marginRight"]):void 0}),Z.each({margin:"",padding:"",border:"Width"},function(e,t){Z.cssHooks[e+t]={expand:function(n){for(var r=0,i={},o="string"==typeof n?n.split(" "):[n];4>r;r++)i[e+Te[r]+t]=o[r]||o[r-2]||o[0];return i}},Ie.test(e)||(Z.cssHooks[e+t].set=N)}),Z.fn.extend({css:function(e,t){return me(this,function(e,t,n){var r,i,o={},s=0;if(Z.isArray(t)){for(r=_e(e),i=t.length;i>s;s++)o[t[s]]=Z.css(e,t[s],!1,r);return o}return void 0!==n?Z.style(e,t,n):Z.css(e,t)},e,t,arguments.length>1)},show:function(){return S(this,!0)},hide:function(){return S(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){Ce(this)?Z(this).show():Z(this).hide()})}}),Z.Tween=D,D.prototype={constructor:D,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||"swing",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(Z.cssNumber[n]?"":"px")},cur:function(){var e=D.propHooks[this.prop];return e&&e.get?e.get(this):D.propHooks._default.get(this)},run:function(e){var t,n=D.propHooks[this.prop];return this.pos=t=this.options.duration?Z.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):D.propHooks._default.set(this),this}},D.prototype.init.prototype=D.prototype,D.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=Z.css(e.elem,e.prop,""),t&&"auto"!==t?t:0):e.elem[e.prop]},set:function(e){Z.fx.step[e.prop]?Z.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[Z.cssProps[e.prop]]||Z.cssHooks[e.prop])?Z.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},D.propHooks.scrollTop=D.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},Z.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},Z.fx=D.prototype.init,Z.fx.step={};var Qe,Je,Ke=/^(?:toggle|show|hide)$/,Ze=new RegExp("^(?:([+-])=|)("+we+")([a-z%]*)$","i"),et=/queueHooks$/,tt=[q],nt={"*":[function(e,t){var n=this.createTween(e,t),r=n.cur(),i=Ze.exec(t),o=i&&i[3]||(Z.cssNumber[e]?"":"px"),s=(Z.cssNumber[e]||"px"!==o&&+r)&&Ze.exec(Z.css(n.elem,e)),a=1,u=20;if(s&&s[3]!==o){o=o||s[3],i=i||[],s=+r||1;do a=a||".5",s/=a,Z.style(n.elem,e,s+o);while(a!==(a=n.cur()/r)&&1!==a&&--u)}return i&&(s=n.start=+s||+r||0,n.unit=o,n.end=i[1]?s+(i[1]+1)*i[2]:+i[2]),n}]};Z.Animation=Z.extend(O,{tweener:function(e,t){Z.isFunction(e)?(t=e,e=["*"]):e=e.split(" ");for(var n,r=0,i=e.length;i>r;r++)n=e[r],nt[n]=nt[n]||[],nt[n].unshift(t)},prefilter:function(e,t){t?tt.unshift(e):tt.push(e)}}),Z.speed=function(e,t,n){var r=e&&"object"==typeof e?Z.extend({},e):{complete:n||!n&&t||Z.isFunction(e)&&e,duration:e,easing:n&&t||t&&!Z.isFunction(t)&&t};return r.duration=Z.fx.off?0:"number"==typeof r.duration?r.duration:r.duration in Z.fx.speeds?Z.fx.speeds[r.duration]:Z.fx.speeds._default,(null==r.queue||r.queue===!0)&&(r.queue="fx"),r.old=r.complete,r.complete=function(){Z.isFunction(r.old)&&r.old.call(this),r.queue&&Z.dequeue(this,r.queue)},r},Z.fn.extend({fadeTo:function(e,t,n,r){return this.filter(Ce).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=Z.isEmptyObject(e),o=Z.speed(t,n,r),s=function(){var t=O(this,Z.extend({},e),o);(i||ve.get(this,"finish"))&&t.stop(!0)};return s.finish=s,i||o.queue===!1?this.each(s):this.queue(o.queue,s)},stop:function(e,t,n){var r=function(e){var t=e.stop;delete e.stop,t(n)};return"string"!=typeof e&&(n=t,t=e,e=void 0),t&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,i=null!=e&&e+"queueHooks",o=Z.timers,s=ve.get(this);if(i)s[i]&&s[i].stop&&r(s[i]);else for(i in s)s[i]&&s[i].stop&&et.test(i)&&r(s[i]);for(i=o.length;i--;)o[i].elem!==this||null!=e&&o[i].queue!==e||(o[i].anim.stop(n),t=!1,o.splice(i,1));(t||!n)&&Z.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,n=ve.get(this),r=n[e+"queue"],i=n[e+"queueHooks"],o=Z.timers,s=r?r.length:0;for(n.finish=!0,Z.queue(this,e,[]),i&&i.stop&&i.stop.call(this,!0),
t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;s>t;t++)r[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish})}}),Z.each(["toggle","show","hide"],function(e,t){var n=Z.fn[t];Z.fn[t]=function(e,r,i){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(A(t,!0),e,r,i)}}),Z.each({slideDown:A("show"),slideUp:A("hide"),slideToggle:A("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){Z.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),Z.timers=[],Z.fx.tick=function(){var e,t=0,n=Z.timers;for(Qe=Z.now();t<n.length;t++)e=n[t],e()||n[t]!==e||n.splice(t--,1);n.length||Z.fx.stop(),Qe=void 0},Z.fx.timer=function(e){Z.timers.push(e),e()?Z.fx.start():Z.timers.pop()},Z.fx.interval=13,Z.fx.start=function(){Je||(Je=setInterval(Z.fx.tick,Z.fx.interval))},Z.fx.stop=function(){clearInterval(Je),Je=null},Z.fx.speeds={slow:600,fast:200,_default:400},Z.fn.delay=function(e,t){return e=Z.fx?Z.fx.speeds[e]||e:e,t=t||"fx",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},function(){var e=J.createElement("input"),t=J.createElement("select"),n=t.appendChild(J.createElement("option"));e.type="checkbox",Q.checkOn=""!==e.value,Q.optSelected=n.selected,t.disabled=!0,Q.optDisabled=!n.disabled,e=J.createElement("input"),e.value="t",e.type="radio",Q.radioValue="t"===e.value}();var rt,it,ot=Z.expr.attrHandle;Z.fn.extend({attr:function(e,t){return me(this,Z.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){Z.removeAttr(this,e)})}}),Z.extend({attr:function(e,t,n){var r,i,o=e.nodeType;return e&&3!==o&&8!==o&&2!==o?typeof e.getAttribute===ke?Z.prop(e,t,n):(1===o&&Z.isXMLDoc(e)||(t=t.toLowerCase(),r=Z.attrHooks[t]||(Z.expr.match.bool.test(t)?it:rt)),void 0===n?r&&"get"in r&&null!==(i=r.get(e,t))?i:(i=Z.find.attr(e,t),null==i?void 0:i):null!==n?r&&"set"in r&&void 0!==(i=r.set(e,n,t))?i:(e.setAttribute(t,n+""),n):void Z.removeAttr(e,t)):void 0},removeAttr:function(e,t){var n,r,i=0,o=t&&t.match(de);if(o&&1===e.nodeType)for(;n=o[i++];)r=Z.propFix[n]||n,Z.expr.match.bool.test(n)&&(e[r]=!1),e.removeAttribute(n)},attrHooks:{type:{set:function(e,t){if(!Q.radioValue&&"radio"===t&&Z.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}}}),it={set:function(e,t,n){return t===!1?Z.removeAttr(e,n):e.setAttribute(n,n),n}},Z.each(Z.expr.match.bool.source.match(/\w+/g),function(e,t){var n=ot[t]||Z.find.attr;ot[t]=function(e,t,r){var i,o;return r||(o=ot[t],ot[t]=i,i=null!=n(e,t,r)?t.toLowerCase():null,ot[t]=o),i}});var st=/^(?:input|select|textarea|button)$/i;Z.fn.extend({prop:function(e,t){return me(this,Z.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each(function(){delete this[Z.propFix[e]||e]})}}),Z.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(e,t,n){var r,i,o,s=e.nodeType;return e&&3!==s&&8!==s&&2!==s?(o=1!==s||!Z.isXMLDoc(e),o&&(t=Z.propFix[t]||t,i=Z.propHooks[t]),void 0!==n?i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&"get"in i&&null!==(r=i.get(e,t))?r:e[t]):void 0},propHooks:{tabIndex:{get:function(e){return e.hasAttribute("tabindex")||st.test(e.nodeName)||e.href?e.tabIndex:-1}}}}),Q.optSelected||(Z.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null}}),Z.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){Z.propFix[this.toLowerCase()]=this});var at=/[\t\r\n\f]/g;Z.fn.extend({addClass:function(e){var t,n,r,i,o,s,a="string"==typeof e&&e,u=0,l=this.length;if(Z.isFunction(e))return this.each(function(t){Z(this).addClass(e.call(this,t,this.className))});if(a)for(t=(e||"").match(de)||[];l>u;u++)if(n=this[u],r=1===n.nodeType&&(n.className?(" "+n.className+" ").replace(at," "):" ")){for(o=0;i=t[o++];)r.indexOf(" "+i+" ")<0&&(r+=i+" ");s=Z.trim(r),n.className!==s&&(n.className=s)}return this},removeClass:function(e){var t,n,r,i,o,s,a=0===arguments.length||"string"==typeof e&&e,u=0,l=this.length;if(Z.isFunction(e))return this.each(function(t){Z(this).removeClass(e.call(this,t,this.className))});if(a)for(t=(e||"").match(de)||[];l>u;u++)if(n=this[u],r=1===n.nodeType&&(n.className?(" "+n.className+" ").replace(at," "):"")){for(o=0;i=t[o++];)for(;r.indexOf(" "+i+" ")>=0;)r=r.replace(" "+i+" "," ");s=e?Z.trim(r):"",n.className!==s&&(n.className=s)}return this},toggleClass:function(e,t){var n=typeof e;return"boolean"==typeof t&&"string"===n?t?this.addClass(e):this.removeClass(e):this.each(Z.isFunction(e)?function(n){Z(this).toggleClass(e.call(this,n,this.className,t),t)}:function(){if("string"===n)for(var t,r=0,i=Z(this),o=e.match(de)||[];t=o[r++];)i.hasClass(t)?i.removeClass(t):i.addClass(t);else(n===ke||"boolean"===n)&&(this.className&&ve.set(this,"__className__",this.className),this.className=this.className||e===!1?"":ve.get(this,"__className__")||"")})},hasClass:function(e){for(var t=" "+e+" ",n=0,r=this.length;r>n;n++)if(1===this[n].nodeType&&(" "+this[n].className+" ").replace(at," ").indexOf(t)>=0)return!0;return!1}});var ut=/\r/g;Z.fn.extend({val:function(e){var t,n,r,i=this[0];return arguments.length?(r=Z.isFunction(e),this.each(function(n){var i;1===this.nodeType&&(i=r?e.call(this,n,Z(this).val()):e,null==i?i="":"number"==typeof i?i+="":Z.isArray(i)&&(i=Z.map(i,function(e){return null==e?"":e+""})),t=Z.valHooks[this.type]||Z.valHooks[this.nodeName.toLowerCase()],t&&"set"in t&&void 0!==t.set(this,i,"value")||(this.value=i))})):i?(t=Z.valHooks[i.type]||Z.valHooks[i.nodeName.toLowerCase()],t&&"get"in t&&void 0!==(n=t.get(i,"value"))?n:(n=i.value,"string"==typeof n?n.replace(ut,""):null==n?"":n)):void 0}}),Z.extend({valHooks:{option:{get:function(e){var t=Z.find.attr(e,"value");return null!=t?t:Z.trim(Z.text(e))}},select:{get:function(e){for(var t,n,r=e.options,i=e.selectedIndex,o="select-one"===e.type||0>i,s=o?null:[],a=o?i+1:r.length,u=0>i?a:o?i:0;a>u;u++)if(n=r[u],!(!n.selected&&u!==i||(Q.optDisabled?n.disabled:null!==n.getAttribute("disabled"))||n.parentNode.disabled&&Z.nodeName(n.parentNode,"optgroup"))){if(t=Z(n).val(),o)return t;s.push(t)}return s},set:function(e,t){for(var n,r,i=e.options,o=Z.makeArray(t),s=i.length;s--;)r=i[s],(r.selected=Z.inArray(r.value,o)>=0)&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),Z.each(["radio","checkbox"],function(){Z.valHooks[this]={set:function(e,t){return Z.isArray(t)?e.checked=Z.inArray(Z(e).val(),t)>=0:void 0}},Q.checkOn||(Z.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),Z.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){Z.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),Z.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)}});var lt=Z.now(),ct=/\?/;Z.parseJSON=function(e){return JSON.parse(e+"")},Z.parseXML=function(e){var t,n;if(!e||"string"!=typeof e)return null;try{n=new DOMParser,t=n.parseFromString(e,"text/xml")}catch(r){t=void 0}return(!t||t.getElementsByTagName("parsererror").length)&&Z.error("Invalid XML: "+e),t};var ft=/#.*$/,pt=/([?&])_=[^&]*/,dt=/^(.*?):[ \t]*([^\r\n]*)$/gm,ht=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,gt=/^(?:GET|HEAD)$/,mt=/^\/\//,vt=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,yt={},xt={},bt="*/".concat("*"),wt=e.location.href,Tt=vt.exec(wt.toLowerCase())||[];Z.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:wt,type:"GET",isLocal:ht.test(Tt[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":bt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":Z.parseJSON,"text xml":Z.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?R(R(e,Z.ajaxSettings),t):R(Z.ajaxSettings,e)},ajaxPrefilter:F(yt),ajaxTransport:F(xt),ajax:function(e,t){function n(e,t,n,s){var u,c,v,y,b,T=t;2!==x&&(x=2,a&&clearTimeout(a),r=void 0,o=s||"",w.readyState=e>0?4:0,u=e>=200&&300>e||304===e,n&&(y=M(f,w,n)),y=W(f,y,w,u),u?(f.ifModified&&(b=w.getResponseHeader("Last-Modified"),b&&(Z.lastModified[i]=b),b=w.getResponseHeader("etag"),b&&(Z.etag[i]=b)),204===e||"HEAD"===f.type?T="nocontent":304===e?T="notmodified":(T=y.state,c=y.data,v=y.error,u=!v)):(v=T,(e||!T)&&(T="error",0>e&&(e=0))),w.status=e,w.statusText=(t||T)+"",u?h.resolveWith(p,[c,T,w]):h.rejectWith(p,[w,T,v]),w.statusCode(m),m=void 0,l&&d.trigger(u?"ajaxSuccess":"ajaxError",[w,f,u?c:v]),g.fireWith(p,[w,T]),l&&(d.trigger("ajaxComplete",[w,f]),--Z.active||Z.event.trigger("ajaxStop")))}"object"==typeof e&&(t=e,e=void 0),t=t||{};var r,i,o,s,a,u,l,c,f=Z.ajaxSetup({},t),p=f.context||f,d=f.context&&(p.nodeType||p.jquery)?Z(p):Z.event,h=Z.Deferred(),g=Z.Callbacks("once memory"),m=f.statusCode||{},v={},y={},x=0,b="canceled",w={readyState:0,getResponseHeader:function(e){var t;if(2===x){if(!s)for(s={};t=dt.exec(o);)s[t[1].toLowerCase()]=t[2];t=s[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===x?o:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return x||(e=y[n]=y[n]||e,v[e]=t),this},overrideMimeType:function(e){return x||(f.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>x)for(t in e)m[t]=[m[t],e[t]];else w.always(e[w.status]);return this},abort:function(e){var t=e||b;return r&&r.abort(t),n(0,t),this}};if(h.promise(w).complete=g.add,w.success=w.done,w.error=w.fail,f.url=((e||f.url||wt)+"").replace(ft,"").replace(mt,Tt[1]+"//"),f.type=t.method||t.type||f.method||f.type,f.dataTypes=Z.trim(f.dataType||"*").toLowerCase().match(de)||[""],null==f.crossDomain&&(u=vt.exec(f.url.toLowerCase()),f.crossDomain=!(!u||u[1]===Tt[1]&&u[2]===Tt[2]&&(u[3]||("http:"===u[1]?"80":"443"))===(Tt[3]||("http:"===Tt[1]?"80":"443")))),f.data&&f.processData&&"string"!=typeof f.data&&(f.data=Z.param(f.data,f.traditional)),P(yt,f,t,w),2===x)return w;l=Z.event&&f.global,l&&0===Z.active++&&Z.event.trigger("ajaxStart"),f.type=f.type.toUpperCase(),f.hasContent=!gt.test(f.type),i=f.url,f.hasContent||(f.data&&(i=f.url+=(ct.test(i)?"&":"?")+f.data,delete f.data),f.cache===!1&&(f.url=pt.test(i)?i.replace(pt,"$1_="+lt++):i+(ct.test(i)?"&":"?")+"_="+lt++)),f.ifModified&&(Z.lastModified[i]&&w.setRequestHeader("If-Modified-Since",Z.lastModified[i]),Z.etag[i]&&w.setRequestHeader("If-None-Match",Z.etag[i])),(f.data&&f.hasContent&&f.contentType!==!1||t.contentType)&&w.setRequestHeader("Content-Type",f.contentType),w.setRequestHeader("Accept",f.dataTypes[0]&&f.accepts[f.dataTypes[0]]?f.accepts[f.dataTypes[0]]+("*"!==f.dataTypes[0]?", "+bt+"; q=0.01":""):f.accepts["*"]);for(c in f.headers)w.setRequestHeader(c,f.headers[c]);if(f.beforeSend&&(f.beforeSend.call(p,w,f)===!1||2===x))return w.abort();b="abort";for(c in{success:1,error:1,complete:1})w[c](f[c]);if(r=P(xt,f,t,w)){w.readyState=1,l&&d.trigger("ajaxSend",[w,f]),f.async&&f.timeout>0&&(a=setTimeout(function(){w.abort("timeout")},f.timeout));try{x=1,r.send(v,n)}catch(T){if(!(2>x))throw T;n(-1,T)}}else n(-1,"No Transport");return w},getJSON:function(e,t,n){return Z.get(e,t,n,"json")},getScript:function(e,t){return Z.get(e,void 0,t,"script")}}),Z.each(["get","post"],function(e,t){Z[t]=function(e,n,r,i){return Z.isFunction(n)&&(i=i||r,r=n,n=void 0),Z.ajax({url:e,type:t,dataType:i,data:n,success:r})}}),Z._evalUrl=function(e){return Z.ajax({url:e,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},Z.fn.extend({wrapAll:function(e){var t;return Z.isFunction(e)?this.each(function(t){Z(this).wrapAll(e.call(this,t))}):(this[0]&&(t=Z(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this)},wrapInner:function(e){return this.each(Z.isFunction(e)?function(t){Z(this).wrapInner(e.call(this,t))}:function(){var t=Z(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=Z.isFunction(e);return this.each(function(n){Z(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){Z.nodeName(this,"body")||Z(this).replaceWith(this.childNodes)}).end()}}),Z.expr.filters.hidden=function(e){return e.offsetWidth<=0&&e.offsetHeight<=0},Z.expr.filters.visible=function(e){return!Z.expr.filters.hidden(e)};var Ct=/%20/g,Nt=/\[\]$/,kt=/\r?\n/g,Et=/^(?:submit|button|image|reset|file)$/i,St=/^(?:input|select|textarea|keygen)/i;Z.param=function(e,t){var n,r=[],i=function(e,t){t=Z.isFunction(t)?t():null==t?"":t,r[r.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};if(void 0===t&&(t=Z.ajaxSettings&&Z.ajaxSettings.traditional),Z.isArray(e)||e.jquery&&!Z.isPlainObject(e))Z.each(e,function(){i(this.name,this.value)});else for(n in e)$(n,e[n],t,i);return r.join("&").replace(Ct,"+")},Z.fn.extend({serialize:function(){return Z.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=Z.prop(this,"elements");return e?Z.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!Z(this).is(":disabled")&&St.test(this.nodeName)&&!Et.test(e)&&(this.checked||!Ne.test(e))}).map(function(e,t){var n=Z(this).val();return null==n?null:Z.isArray(n)?Z.map(n,function(e){return{name:t.name,value:e.replace(kt,"\r\n")}}):{name:t.name,value:n.replace(kt,"\r\n")}}).get()}}),Z.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(e){}};var Dt=0,jt={},At={0:200,1223:204},Lt=Z.ajaxSettings.xhr();e.attachEvent&&e.attachEvent("onunload",function(){for(var e in jt)jt[e]()}),Q.cors=!!Lt&&"withCredentials"in Lt,Q.ajax=Lt=!!Lt,Z.ajaxTransport(function(e){var t;return Q.cors||Lt&&!e.crossDomain?{send:function(n,r){var i,o=e.xhr(),s=++Dt;if(o.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(i in e.xhrFields)o[i]=e.xhrFields[i];e.mimeType&&o.overrideMimeType&&o.overrideMimeType(e.mimeType),e.crossDomain||n["X-Requested-With"]||(n["X-Requested-With"]="XMLHttpRequest");for(i in n)o.setRequestHeader(i,n[i]);t=function(e){return function(){t&&(delete jt[s],t=o.onload=o.onerror=null,"abort"===e?o.abort():"error"===e?r(o.status,o.statusText):r(At[o.status]||o.status,o.statusText,"string"==typeof o.responseText?{text:o.responseText}:void 0,o.getAllResponseHeaders()))}},o.onload=t(),o.onerror=t("error"),t=jt[s]=t("abort");try{o.send(e.hasContent&&e.data||null)}catch(a){if(t)throw a}},abort:function(){t&&t()}}:void 0}),Z.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(e){return Z.globalEval(e),e}}}),Z.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),Z.ajaxTransport("script",function(e){if(e.crossDomain){var t,n;return{send:function(r,i){t=Z("<script>").prop({async:!0,charset:e.scriptCharset,src:e.url}).on("load error",n=function(e){t.remove(),n=null,e&&i("error"===e.type?404:200,e.type)}),J.head.appendChild(t[0])},abort:function(){n&&n()}}}});var qt=[],Ht=/(=)\?(?=&|$)|\?\?/;Z.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=qt.pop()||Z.expando+"_"+lt++;return this[e]=!0,e}}),Z.ajaxPrefilter("json jsonp",function(t,n,r){var i,o,s,a=t.jsonp!==!1&&(Ht.test(t.url)?"url":"string"==typeof t.data&&!(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Ht.test(t.data)&&"data");return a||"jsonp"===t.dataTypes[0]?(i=t.jsonpCallback=Z.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,a?t[a]=t[a].replace(Ht,"$1"+i):t.jsonp!==!1&&(t.url+=(ct.test(t.url)?"&":"?")+t.jsonp+"="+i),t.converters["script json"]=function(){return s||Z.error(i+" was not called"),s[0]},t.dataTypes[0]="json",o=e[i],e[i]=function(){s=arguments},r.always(function(){e[i]=o,t[i]&&(t.jsonpCallback=n.jsonpCallback,qt.push(i)),s&&Z.isFunction(o)&&o(s[0]),s=o=void 0}),"script"):void 0}),Z.parseHTML=function(e,t,n){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(n=t,t=!1),t=t||J;var r=se.exec(e),i=!n&&[];return r?[t.createElement(r[1])]:(r=Z.buildFragment([e],t,i),i&&i.length&&Z(i).remove(),Z.merge([],r.childNodes))};var Ot=Z.fn.load;Z.fn.load=function(e,t,n){if("string"!=typeof e&&Ot)return Ot.apply(this,arguments);var r,i,o,s=this,a=e.indexOf(" ");return a>=0&&(r=Z.trim(e.slice(a)),e=e.slice(0,a)),Z.isFunction(t)?(n=t,t=void 0):t&&"object"==typeof t&&(i="POST"),s.length>0&&Z.ajax({url:e,type:i,dataType:"html",data:t}).done(function(e){o=arguments,s.html(r?Z("<div>").append(Z.parseHTML(e)).find(r):e)}).complete(n&&function(e,t){s.each(n,o||[e.responseText,t,e])}),this},Z.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){Z.fn[t]=function(e){return this.on(t,e)}}),Z.expr.filters.animated=function(e){return Z.grep(Z.timers,function(t){return e===t.elem}).length};var Ft=e.document.documentElement;Z.offset={setOffset:function(e,t,n){var r,i,o,s,a,u,l,c=Z.css(e,"position"),f=Z(e),p={};"static"===c&&(e.style.position="relative"),a=f.offset(),o=Z.css(e,"top"),u=Z.css(e,"left"),l=("absolute"===c||"fixed"===c)&&(o+u).indexOf("auto")>-1,l?(r=f.position(),s=r.top,i=r.left):(s=parseFloat(o)||0,i=parseFloat(u)||0),Z.isFunction(t)&&(t=t.call(e,n,a)),null!=t.top&&(p.top=t.top-a.top+s),null!=t.left&&(p.left=t.left-a.left+i),"using"in t?t.using.call(e,p):f.css(p)}},Z.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){Z.offset.setOffset(this,e,t)});var t,n,r=this[0],i={top:0,left:0},o=r&&r.ownerDocument;return o?(t=o.documentElement,Z.contains(t,r)?(typeof r.getBoundingClientRect!==ke&&(i=r.getBoundingClientRect()),n=I(o),{top:i.top+n.pageYOffset-t.clientTop,left:i.left+n.pageXOffset-t.clientLeft}):i):void 0},position:function(){if(this[0]){var e,t,n=this[0],r={top:0,left:0};return"fixed"===Z.css(n,"position")?t=n.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),Z.nodeName(e[0],"html")||(r=e.offset()),r.top+=Z.css(e[0],"borderTopWidth",!0),r.left+=Z.css(e[0],"borderLeftWidth",!0)),{top:t.top-r.top-Z.css(n,"marginTop",!0),left:t.left-r.left-Z.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent||Ft;e&&!Z.nodeName(e,"html")&&"static"===Z.css(e,"position");)e=e.offsetParent;return e||Ft})}}),Z.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,n){var r="pageYOffset"===n;Z.fn[t]=function(i){return me(this,function(t,i,o){var s=I(t);return void 0===o?s?s[n]:t[i]:void(s?s.scrollTo(r?e.pageXOffset:o,r?o:e.pageYOffset):t[i]=o)},t,i,arguments.length,null)}}),Z.each(["top","left"],function(e,t){Z.cssHooks[t]=T(Q.pixelPosition,function(e,n){return n?(n=w(e,t),Be.test(n)?Z(e).position()[t]+"px":n):void 0})}),Z.each({Height:"height",Width:"width"},function(e,t){Z.each({padding:"inner"+e,content:t,"":"outer"+e},function(n,r){Z.fn[r]=function(r,i){var o=arguments.length&&(n||"boolean"!=typeof r),s=n||(r===!0||i===!0?"margin":"border");return me(this,function(t,n,r){var i;return Z.isWindow(t)?t.document.documentElement["client"+e]:9===t.nodeType?(i=t.documentElement,Math.max(t.body["scroll"+e],i["scroll"+e],t.body["offset"+e],i["offset"+e],i["client"+e])):void 0===r?Z.css(t,n,s):Z.style(t,n,r,s)},t,o?r:void 0,o,null)}})}),Z.fn.size=function(){return this.length},Z.fn.andSelf=Z.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return Z});var Pt=e.jQuery,Rt=e.$;return Z.noConflict=function(t){return e.$===Z&&(e.$=Rt),t&&e.jQuery===Z&&(e.jQuery=Pt),Z},typeof t===ke&&(e.jQuery=e.$=Z),Z});
(function(){function n(n,t){if(n!==t){var r=null===n,e=n===m,u=n===n,i=null===t,o=t===m,f=t===t;if(n>t&&!i||!u||r&&!o&&f||e&&f)return 1;if(t>n&&!r||!f||i&&!e&&u||o&&u)return-1}return 0}function t(n,t,r){for(var e=n.length,u=r?e:-1;r?u--:++u<e;)if(t(n[u],u,n))return u;return-1}function r(n,t,r){if(t!==t)return s(n,r);r-=1;for(var e=n.length;++r<e;)if(n[r]===t)return r;return-1}function e(n){return"function"==typeof n||!1}function u(n){return"string"==typeof n?n:null==n?"":n+""}function i(n,t){for(var r=-1,e=n.length;++r<e&&-1<t.indexOf(n.charAt(r)););return r}function o(n,t){for(var r=n.length;r--&&-1<t.indexOf(n.charAt(r)););return r}function f(t,r){return n(t.a,r.a)||t.b-r.b}function l(n){return Nn[n]}function a(n){return Ln[n]}function c(n){return"\\"+Mn[n]}function s(n,t,r){var e=n.length;for(t+=r?0:-1;r?t--:++t<e;){var u=n[t];if(u!==u)return t}return-1}function p(n){return!!n&&"object"==typeof n}function h(n){return 160>=n&&n>=9&&13>=n||32==n||160==n||5760==n||6158==n||n>=8192&&(8202>=n||8232==n||8233==n||8239==n||8287==n||12288==n||65279==n)}function _(n,t){for(var r=-1,e=n.length,u=-1,i=[];++r<e;)n[r]===t&&(n[r]=L,i[++u]=r);return i}function v(n){for(var t=-1,r=n.length;++t<r&&h(n.charCodeAt(t)););return t}function g(n){for(var t=n.length;t--&&h(n.charCodeAt(t)););return t}function y(n){return zn[n]}function d(h){function Nn(n){if(p(n)&&!(Ti(n)||n instanceof Bn)){if(n instanceof zn)return n;if(ru.call(n,"__chain__")&&ru.call(n,"__wrapped__"))return Mr(n)}return new zn(n)}function Ln(){}function zn(n,t,r){this.__wrapped__=n,this.__actions__=r||[],this.__chain__=!!t}function Bn(n){this.__wrapped__=n,this.__actions__=null,this.__dir__=1,this.__filtered__=!1,this.__iteratees__=null,this.__takeCount__=Su,this.__views__=null}function Mn(){this.__data__={}}function Pn(n){var t=n?n.length:0;for(this.data={hash:bu(null),set:new vu};t--;)this.push(n[t])}function qn(n,t){var r=n.data;return("string"==typeof t||ve(t)?r.set.has(t):r.hash[t])?0:-1}function Dn(n,t){var r=-1,e=n.length;for(t||(t=Me(e));++r<e;)t[r]=n[r];return t}function Kn(n,t){for(var r=-1,e=n.length;++r<e&&!1!==t(n[r],r,n););return n}function Vn(n,t){for(var r=-1,e=n.length;++r<e;)if(!t(n[r],r,n))return!1;return!0}function Gn(n,t){for(var r=-1,e=n.length,u=-1,i=[];++r<e;){var o=n[r];t(o,r,n)&&(i[++u]=o)}return i}function Jn(n,t){for(var r=-1,e=n.length,u=Me(e);++r<e;)u[r]=t(n[r],r,n);return u}function Xn(n,t,r,e){var u=-1,i=n.length;for(e&&i&&(r=n[++u]);++u<i;)r=t(r,n[u],u,n);return r}function Hn(n,t){for(var r=-1,e=n.length;++r<e;)if(t(n[r],r,n))return!0;return!1}function Qn(n,t){return n===m?t:n}function nt(n,t,r,e){return n!==m&&ru.call(e,r)?n:t}function tt(n,t,r){for(var e=-1,u=Ki(t),i=u.length;++e<i;){var o=u[e],f=n[o],l=r(f,t[o],o,n,t);(l===l?l===f:f!==f)&&(f!==m||o in n)||(n[o]=l)}return n}function rt(n,t){return null==t?n:ut(t,Ki(t),n)}function et(n,t){for(var r=-1,e=null==n,u=!e&&Ir(n),i=u?n.length:0,o=t.length,f=Me(o);++r<o;){var l=t[r];f[r]=u?Er(l,i)?n[l]:m:e?m:n[l]}return f}function ut(n,t,r){r||(r={});for(var e=-1,u=t.length;++e<u;){var i=t[e];r[i]=n[i]}return r}function it(n,t,r){var e=typeof n;return"function"==e?t===m?n:Mt(n,t,r):null==n?Fe:"object"==e?xt(n):t===m?Be(n):At(n,t)}function ot(n,t,r,e,u,i,o){var f;if(r&&(f=u?r(n,e,u):r(n)),f!==m)return f;if(!ve(n))return n;if(e=Ti(n)){if(f=jr(n),!t)return Dn(n,f)}else{var l=uu.call(n),a=l==D;if(l!=V&&l!=z&&(!a||u))return $n[l]?Or(n,l,t):u?n:{};if(f=kr(a?{}:n),!t)return rt(f,n)}for(i||(i=[]),o||(o=[]),u=i.length;u--;)if(i[u]==n)return o[u];return i.push(n),o.push(f),(e?Kn:vt)(n,function(e,u){f[u]=ot(e,t,r,u,n,i,o)}),f}function ft(n,t,r){if("function"!=typeof n)throw new Je(N);return gu(function(){n.apply(m,r)},t)}function lt(n,t){var e=n?n.length:0,u=[];if(!e)return u;var i=-1,o=br(),f=o==r,l=f&&200<=t.length?Vu(t):null,a=t.length;l&&(o=qn,f=!1,t=l);n:for(;++i<e;)if(l=n[i],f&&l===l){for(var c=a;c--;)if(t[c]===l)continue n;u.push(l)}else 0>o(t,l,0)&&u.push(l);return u}function at(n,t){var r=!0;return Mu(n,function(n,e,u){return r=!!t(n,e,u)}),r}function ct(n,t,r,e){var u=e,i=u;return Mu(n,function(n,o,f){o=+t(n,o,f),(r(o,u)||o===e&&o===i)&&(u=o,i=n)}),i}function st(n,t){var r=[];return Mu(n,function(n,e,u){t(n,e,u)&&r.push(n)}),r}function pt(n,t,r,e){var u;return r(n,function(n,r,i){return t(n,r,i)?(u=e?r:n,!1):void 0}),u}function ht(n,t,r){for(var e=-1,u=n.length,i=-1,o=[];++e<u;){var f=n[e];if(p(f)&&Ir(f)&&(r||Ti(f)||se(f))){t&&(f=ht(f,t,r));for(var l=-1,a=f.length;++l<a;)o[++i]=f[l]}else r||(o[++i]=f)}return o}function _t(n,t){qu(n,t,ke)}function vt(n,t){return qu(n,t,Ki)}function gt(n,t){return Du(n,t,Ki)}function yt(n,t){for(var r=-1,e=t.length,u=-1,i=[];++r<e;){var o=t[r];$i(n[o])&&(i[++u]=o)}return i}function dt(n,t,r){if(null!=n){r!==m&&r in zr(n)&&(t=[r]),r=0;for(var e=t.length;null!=n&&e>r;)n=n[t[r++]];return r&&r==e?n:m}}function mt(n,t,r,e,u,i){if(n===t)n=!0;else if(null==n||null==t||!ve(n)&&!p(t))n=n!==n&&t!==t;else n:{var o=mt,f=Ti(n),l=Ti(t),a=B,c=B;f||(a=uu.call(n),a==z?a=V:a!=V&&(f=we(n))),l||(c=uu.call(t),c==z?c=V:c!=V&&we(t));var s=a==V,l=c==V,c=a==c;if(!c||f||s){if(!e&&(a=s&&ru.call(n,"__wrapped__"),l=l&&ru.call(t,"__wrapped__"),a||l)){n=o(a?n.value():n,l?t.value():t,r,e,u,i);break n}if(c){for(u||(u=[]),i||(i=[]),a=u.length;a--;)if(u[a]==n){n=i[a]==t;break n}u.push(n),i.push(t),n=(f?gr:dr)(n,t,o,r,e,u,i),u.pop(),i.pop()}else n=!1}else n=yr(n,t,a)}return n}function wt(n,t,r){var e=t.length,u=e,i=!r;if(null==n)return!u;for(n=zr(n);e--;){var o=t[e];if(i&&o[2]?o[1]!==n[o[0]]:!(o[0]in n))return!1}for(;++e<u;){var o=t[e],f=o[0],l=n[f],a=o[1];if(i&&o[2]){if(l===m&&!(f in n))return!1}else if(o=r?r(l,a,f):m,o===m?!mt(a,l,r,!0):!o)return!1}return!0}function bt(n,t){var r=-1,e=Ir(n)?Me(n.length):[];return Mu(n,function(n,u,i){e[++r]=t(n,u,i)}),e}function xt(n){var t=xr(n);if(1==t.length&&t[0][2]){var r=t[0][0],e=t[0][1];return function(n){return null==n?!1:n[r]===e&&(e!==m||r in zr(n))}}return function(n){return wt(n,t)}}function At(n,t){var r=Ti(n),e=Wr(n)&&t===t&&!ve(t),u=n+"";return n=Br(n),function(i){if(null==i)return!1;var o=u;if(i=zr(i),!(!r&&e||o in i)){if(i=1==n.length?i:dt(i,Ct(n,0,-1)),null==i)return!1;o=Vr(n),i=zr(i)}return i[o]===t?t!==m||o in i:mt(t,i[o],m,!0)}}function jt(n,t,r,e,u){if(!ve(n))return n;var i=Ir(t)&&(Ti(t)||we(t)),o=i?null:Ki(t);return Kn(o||t,function(f,l){if(o&&(l=f,f=t[l]),p(f)){e||(e=[]),u||(u=[]);n:{for(var a=l,c=e,s=u,h=c.length,_=t[a];h--;)if(c[h]==_){n[a]=s[h];break n}var h=n[a],v=r?r(h,_,a,n,t):m,g=v===m;g&&(v=_,Ir(_)&&(Ti(_)||we(_))?v=Ti(h)?h:Ir(h)?Dn(h):[]:Fi(_)||se(_)?v=se(h)?Ae(h):Fi(h)?h:{}:g=!1),c.push(_),s.push(v),g?n[a]=jt(v,_,r,c,s):(v===v?v!==h:h===h)&&(n[a]=v)}}else a=n[l],c=r?r(a,f,l,n,t):m,(s=c===m)&&(c=f),c===m&&(!i||l in n)||!s&&(c===c?c===a:a!==a)||(n[l]=c)}),n}function kt(n){return function(t){return null==t?m:t[n]}}function Ot(n){var t=n+"";return n=Br(n),function(r){return dt(r,n,t)}}function Rt(n,t){for(var r=n?t.length:0;r--;){var e=t[r];if(e!=u&&Er(e)){var u=e;yu.call(n,e,1)}}}function It(n,t){return n+su(Cu()*(t-n+1))}function Et(n,t,r,e,u){return u(n,function(n,u,i){r=e?(e=!1,n):t(r,n,u,i)}),r}function Ct(n,t,r){var e=-1,u=n.length;for(t=null==t?0:+t||0,0>t&&(t=-t>u?0:u+t),r=r===m||r>u?u:+r||0,0>r&&(r+=u),u=t>r?0:r-t>>>0,t>>>=0,r=Me(u);++e<u;)r[e]=n[e+t];return r}function Wt(n,t){var r;return Mu(n,function(n,e,u){return r=t(n,e,u),!r}),!!r}function St(n,t){var r=n.length;for(n.sort(t);r--;)n[r]=n[r].c;return n}function Tt(t,r,e){var u=mr(),i=-1;return r=Jn(r,function(n){return u(n)}),t=bt(t,function(n){return{a:Jn(r,function(t){return t(n)}),b:++i,c:n}}),St(t,function(t,r){var u;n:{u=-1;for(var i=t.a,o=r.a,f=i.length,l=e.length;++u<f;){var a=n(i[u],o[u]);if(a){u=l>u?a*(e[u]?1:-1):a;break n}}u=t.b-r.b}return u})}function Ut(n,t){var r=0;return Mu(n,function(n,e,u){r+=+t(n,e,u)||0}),r}function $t(n,t){var e=-1,u=br(),i=n.length,o=u==r,f=o&&i>=200,l=f?Vu():null,a=[];l?(u=qn,o=!1):(f=!1,l=t?[]:a);n:for(;++e<i;){var c=n[e],s=t?t(c,e,n):c;if(o&&c===c){for(var p=l.length;p--;)if(l[p]===s)continue n;t&&l.push(s),a.push(c)}else 0>u(l,s,0)&&((t||f)&&l.push(s),a.push(c))}return a}function Ft(n,t){for(var r=-1,e=t.length,u=Me(e);++r<e;)u[r]=n[t[r]];return u}function Nt(n,t,r,e){for(var u=n.length,i=e?u:-1;(e?i--:++i<u)&&t(n[i],i,n););return r?Ct(n,e?0:i,e?i+1:u):Ct(n,e?i+1:0,e?u:i)}function Lt(n,t){var r=n;r instanceof Bn&&(r=r.value());for(var e=-1,u=t.length;++e<u;){var r=[r],i=t[e];_u.apply(r,i.args),r=i.func.apply(i.thisArg,r)}return r}function zt(n,t,r){var e=0,u=n?n.length:e;if("number"==typeof t&&t===t&&Uu>=u){for(;u>e;){var i=e+u>>>1,o=n[i];(r?t>=o:t>o)&&null!==o?e=i+1:u=i}return u}return Bt(n,t,Fe,r)}function Bt(n,t,r,e){t=r(t);for(var u=0,i=n?n.length:0,o=t!==t,f=null===t,l=t===m;i>u;){var a=su((u+i)/2),c=r(n[a]),s=c!==m,p=c===c;(o?p||e:f?p&&s&&(e||null!=c):l?p&&(e||s):null==c?0:e?t>=c:t>c)?u=a+1:i=a}return Ou(i,Tu)}function Mt(n,t,r){if("function"!=typeof n)return Fe;if(t===m)return n;switch(r){case 1:return function(r){return n.call(t,r)};case 3:return function(r,e,u){return n.call(t,r,e,u)};case 4:return function(r,e,u,i){return n.call(t,r,e,u,i)};case 5:return function(r,e,u,i,o){return n.call(t,r,e,u,i,o)}}return function(){return n.apply(t,arguments)}}function Pt(n){return lu.call(n,0)}function qt(n,t,r){for(var e=r.length,u=-1,i=ku(n.length-e,0),o=-1,f=t.length,l=Me(i+f);++o<f;)l[o]=t[o];for(;++u<e;)l[r[u]]=n[u];for(;i--;)l[o++]=n[u++];return l}function Dt(n,t,r){for(var e=-1,u=r.length,i=-1,o=ku(n.length-u,0),f=-1,l=t.length,a=Me(o+l);++i<o;)a[i]=n[i];for(o=i;++f<l;)a[o+f]=t[f];for(;++e<u;)a[o+r[e]]=n[i++];return a}function Kt(n,t){return function(r,e,u){var i=t?t():{};if(e=mr(e,u,3),Ti(r)){u=-1;for(var o=r.length;++u<o;){var f=r[u];n(i,f,e(f,u,r),r)}}else Mu(r,function(t,r,u){n(i,t,e(t,r,u),u)});return i}}function Vt(n){return ae(function(t,r){var e=-1,u=null==t?0:r.length,i=u>2?r[u-2]:m,o=u>2?r[2]:m,f=u>1?r[u-1]:m;for("function"==typeof i?(i=Mt(i,f,5),u-=2):(i="function"==typeof f?f:m,u-=i?1:0),o&&Cr(r[0],r[1],o)&&(i=3>u?m:i,u=1);++e<u;)(o=r[e])&&n(t,o,i);return t})}function Yt(n,t){return function(r,e){var u=r?Zu(r):0;if(!Tr(u))return n(r,e);for(var i=t?u:-1,o=zr(r);(t?i--:++i<u)&&!1!==e(o[i],i,o););return r}}function Zt(n){return function(t,r,e){var u=zr(t);e=e(t);for(var i=e.length,o=n?i:-1;n?o--:++o<i;){var f=e[o];if(!1===r(u[f],f,u))break}return t}}function Gt(n,t){function r(){return(this&&this!==Yn&&this instanceof r?e:n).apply(t,arguments)}var e=Xt(n);return r}function Jt(n){return function(t){var r=-1;t=Te(Ie(t));for(var e=t.length,u="";++r<e;)u=n(u,t[r],r);return u}}function Xt(n){return function(){var t=arguments;switch(t.length){case 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:return new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3]);case 5:return new n(t[0],t[1],t[2],t[3],t[4])}var r=Bu(n.prototype),t=n.apply(r,t);return ve(t)?t:r}}function Ht(n){function t(r,e,u){return u&&Cr(r,e,u)&&(e=null),r=vr(r,n,null,null,null,null,null,e),r.placeholder=t.placeholder,r}return t}function Qt(n,t){return function(r,e,u){if(u&&Cr(r,e,u)&&(e=null),e=mr(e,u,3),1==e.length){u=r=Lr(r);for(var i=e,o=-1,f=u.length,l=t,a=l;++o<f;){var c=u[o],s=+i(c);n(s,l)&&(l=s,a=c)}if(u=a,!r.length||u!==t)return u}return ct(r,e,n,t)}}function nr(n,r){return function(e,u,i){return u=mr(u,i,3),Ti(e)?(u=t(e,u,r),u>-1?e[u]:m):pt(e,u,n)}}function tr(n){return function(r,e,u){return r&&r.length?(e=mr(e,u,3),t(r,e,n)):-1}}function rr(n){return function(t,r,e){return r=mr(r,e,3),pt(t,r,n,!0)}}function er(n){return function(){for(var t,r=arguments.length,e=n?r:-1,u=0,i=Me(r);n?e--:++e<r;){var o=i[u++]=arguments[e];if("function"!=typeof o)throw new Je(N);!t&&zn.prototype.thru&&"wrapper"==wr(o)&&(t=new zn([]))}for(e=t?-1:r;++e<r;){var o=i[e],u=wr(o),f="wrapper"==u?Yu(o):null;t=f&&Sr(f[0])&&f[1]==(I|j|O|E)&&!f[4].length&&1==f[9]?t[wr(f[0])].apply(t,f[3]):1==o.length&&Sr(o)?t[u]():t.thru(o)}return function(){var n=arguments;if(t&&1==n.length&&Ti(n[0]))return t.plant(n[0]).value();for(var e=0,n=r?i[e].apply(this,n):n[0];++e<r;)n=i[e].call(this,n);return n}}}function ur(n,t){return function(r,e,u){return"function"==typeof e&&u===m&&Ti(r)?n(r,e):t(r,Mt(e,u,3))}}function ir(n){return function(t,r,e){return("function"!=typeof r||e!==m)&&(r=Mt(r,e,3)),n(t,r,ke)}}function or(n){return function(t,r,e){return("function"!=typeof r||e!==m)&&(r=Mt(r,e,3)),n(t,r)}}function fr(n){return function(t,r,e){var u={};return r=mr(r,e,3),vt(t,function(t,e,i){i=r(t,e,i),e=n?i:e,t=n?t:i,u[e]=t}),u}}function lr(n){return function(t,r,e){return t=u(t),(n?t:"")+pr(t,r,e)+(n?"":t)}}function ar(n){var t=ae(function(r,e){var u=_(e,t.placeholder);return vr(r,n,null,e,u)});return t}function cr(n,t){return function(r,e,u,i){var o=3>arguments.length;return"function"==typeof e&&i===m&&Ti(r)?n(r,e,u,o):Et(r,mr(e,i,4),u,o,t)}}function sr(n,t,r,e,u,i,o,f,l,a){function c(){for(var w=arguments.length,A=w,j=Me(w);A--;)j[A]=arguments[A];if(e&&(j=qt(j,e,u)),i&&(j=Dt(j,i,o)),v||y){var A=c.placeholder,k=_(j,A),w=w-k.length;if(a>w){var I=f?Dn(f):null,w=ku(a-w,0),E=v?k:null,k=v?null:k,C=v?j:null,j=v?null:j;return t|=v?O:R,t&=~(v?R:O),g||(t&=~(b|x)),j=[n,t,r,C,E,j,k,I,l,w],I=sr.apply(m,j),Sr(n)&&Gu(I,j),I.placeholder=A,I}}if(A=p?r:this,I=h?A[n]:n,f)for(w=j.length,E=Ou(f.length,w),k=Dn(j);E--;)C=f[E],j[E]=Er(C,w)?k[C]:m;return s&&l<j.length&&(j.length=l),this&&this!==Yn&&this instanceof c&&(I=d||Xt(n)),I.apply(A,j)}var s=t&I,p=t&b,h=t&x,v=t&j,g=t&A,y=t&k,d=h?null:Xt(n);return c}function pr(n,t,r){return n=n.length,t=+t,t>n&&Au(t)?(t-=n,r=null==r?" ":r+"",We(r,au(t/r.length)).slice(0,t)):""}function hr(n,t,r,e){function u(){for(var t=-1,f=arguments.length,l=-1,a=e.length,c=Me(f+a);++l<a;)c[l]=e[l];for(;f--;)c[l++]=arguments[++t];return(this&&this!==Yn&&this instanceof u?o:n).apply(i?r:this,c)}var i=t&b,o=Xt(n);return u}function _r(n){return function(t,r,e,u){var i=mr(e);return null==e&&i===it?zt(t,r,n):Bt(t,r,i(e,u,1),n)}}function vr(n,t,r,e,u,i,o,f){var l=t&x;if(!l&&"function"!=typeof n)throw new Je(N);var a=e?e.length:0;if(a||(t&=~(O|R),e=u=null),a-=u?u.length:0,t&R){var c=e,s=u;e=u=null}var p=l?null:Yu(n);return r=[n,t,r,e,u,c,s,i,o,f],p&&(e=r[1],t=p[1],f=e|t,u=t==I&&e==j||t==I&&e==E&&r[7].length<=p[8]||t==(I|E)&&e==j,(I>f||u)&&(t&b&&(r[2]=p[2],f|=e&b?0:A),(e=p[3])&&(u=r[3],r[3]=u?qt(u,e,p[4]):Dn(e),r[4]=u?_(r[3],L):Dn(p[4])),(e=p[5])&&(u=r[5],r[5]=u?Dt(u,e,p[6]):Dn(e),r[6]=u?_(r[5],L):Dn(p[6])),(e=p[7])&&(r[7]=Dn(e)),t&I&&(r[8]=null==r[8]?p[8]:Ou(r[8],p[8])),null==r[9]&&(r[9]=p[9]),r[0]=p[0],r[1]=f),t=r[1],f=r[9]),r[9]=null==f?l?0:n.length:ku(f-a,0)||0,(p?Ku:Gu)(t==b?Gt(r[0],r[2]):t!=O&&t!=(b|O)||r[4].length?sr.apply(m,r):hr.apply(m,r),r)}function gr(n,t,r,e,u,i,o){var f=-1,l=n.length,a=t.length;if(l!=a&&(!u||l>=a))return!1;for(;++f<l;){var c=n[f],a=t[f],s=e?e(u?a:c,u?c:a,f):m;if(s!==m){if(s)continue;return!1}if(u){if(!Hn(t,function(n){return c===n||r(c,n,e,u,i,o)}))return!1}else if(c!==a&&!r(c,a,e,u,i,o))return!1}return!0}function yr(n,t,r){switch(r){case M:case P:return+n==+t;case q:return n.name==t.name&&n.message==t.message;case K:return n!=+n?t!=+t:n==+t;case Y:case Z:return n==t+""}return!1}function dr(n,t,r,e,u,i,o){var f=Ki(n),l=f.length,a=Ki(t).length;if(l!=a&&!u)return!1;for(a=l;a--;){var c=f[a];if(!(u?c in t:ru.call(t,c)))return!1}for(var s=u;++a<l;){var c=f[a],p=n[c],h=t[c],_=e?e(u?h:p,u?p:h,c):m;if(_===m?!r(p,h,e,u,i,o):!_)return!1;s||(s="constructor"==c)}return s||(r=n.constructor,e=t.constructor,!(r!=e&&"constructor"in n&&"constructor"in t)||"function"==typeof r&&r instanceof r&&"function"==typeof e&&e instanceof e)?!0:!1}function mr(n,t,r){var e=Nn.callback||Ue,e=e===Ue?it:e;return r?e(n,t,r):e}function wr(n){for(var t=n.name,r=Lu[t],e=r?r.length:0;e--;){var u=r[e],i=u.func;if(null==i||i==n)return u.name}return t}function br(n,t,e){var u=Nn.indexOf||Kr,u=u===Kr?r:u;return n?u(n,t,e):u}function xr(n){n=Oe(n);for(var t=n.length;t--;){var r=n[t][1];n[t][2]=r===r&&!ve(r)}return n}function Ar(n,t){var r=null==n?m:n[t];return ge(r)?r:m}function jr(n){var t=n.length,r=new n.constructor(t);return t&&"string"==typeof n[0]&&ru.call(n,"index")&&(r.index=n.index,r.input=n.input),r}function kr(n){return n=n.constructor,"function"==typeof n&&n instanceof n||(n=Ye),new n}function Or(n,t,r){var e=n.constructor;switch(t){case G:return Pt(n);case M:case P:return new e(+n);case J:case X:case H:case Q:case nn:case tn:case rn:case en:case un:return t=n.buffer,new e(r?Pt(t):t,n.byteOffset,n.length);case K:case Z:return new e(n);case Y:var u=new e(n.source,jn.exec(n));u.lastIndex=n.lastIndex}return u}function Rr(n,t,r){return null==n||Wr(t,n)||(t=Br(t),n=1==t.length?n:dt(n,Ct(t,0,-1)),t=Vr(t)),t=null==n?n:n[t],null==t?m:t.apply(n,r)}function Ir(n){return null!=n&&Tr(Zu(n))}function Er(n,t){return n="number"==typeof n||Rn.test(n)?+n:-1,t=null==t?Fu:t,n>-1&&0==n%1&&t>n}function Cr(n,t,r){if(!ve(r))return!1;var e=typeof t;return("number"==e?Ir(r)&&Er(t,r.length):"string"==e&&t in r)?(t=r[t],n===n?n===t:t!==t):!1}function Wr(n,t){var r=typeof n;return"string"==r&&yn.test(n)||"number"==r?!0:Ti(n)?!1:!gn.test(n)||null!=t&&n in zr(t)}function Sr(n){var t=wr(n);return t in Bn.prototype?(t=Nn[t],n===t?!0:(t=Yu(t),!!t&&n===t[0])):!1}function Tr(n){return"number"==typeof n&&n>-1&&0==n%1&&Fu>=n}function Ur(n,t){n=zr(n);for(var r=-1,e=t.length,u={};++r<e;){var i=t[r];i in n&&(u[i]=n[i])}return u}function $r(n,t){var r={};return _t(n,function(n,e,u){t(n,e,u)&&(r[e]=n)}),r}function Fr(n){var t;if(!p(n)||uu.call(n)!=V||!(ru.call(n,"constructor")||(t=n.constructor,"function"!=typeof t||t instanceof t)))return!1;var r;return _t(n,function(n,t){r=t}),r===m||ru.call(n,r)}function Nr(n){for(var t=ke(n),r=t.length,e=r&&n.length,u=!!e&&Tr(e)&&(Ti(n)||se(n)),i=-1,o=[];++i<r;){var f=t[i];(u&&Er(f,e)||ru.call(n,f))&&o.push(f)}return o}function Lr(n){return null==n?[]:Ir(n)?ve(n)?n:Ye(n):Re(n)}function zr(n){return ve(n)?n:Ye(n)}function Br(n){if(Ti(n))return n;var t=[];return u(n).replace(dn,function(n,r,e,u){t.push(e?u.replace(xn,"$1"):r||n)}),t}function Mr(n){return n instanceof Bn?n.clone():new zn(n.__wrapped__,n.__chain__,Dn(n.__actions__))}function Pr(n,t,r){return n&&n.length?((r?Cr(n,t,r):null==t)&&(t=1),Ct(n,0>t?0:t)):[]}function qr(n,t,r){var e=n?n.length:0;return e?((r?Cr(n,t,r):null==t)&&(t=1),t=e-(+t||0),Ct(n,0,0>t?0:t)):[]}function Dr(n){return n?n[0]:m}function Kr(n,t,e){var u=n?n.length:0;if(!u)return-1;if("number"==typeof e)e=0>e?ku(u+e,0):e;else if(e)return e=zt(n,t),n=n[e],(t===t?t===n:n!==n)?e:-1;return r(n,t,e||0)}function Vr(n){var t=n?n.length:0;return t?n[t-1]:m}function Yr(n){return Pr(n,1)}function Zr(n,t,e,u){if(!n||!n.length)return[];null!=t&&"boolean"!=typeof t&&(u=e,e=Cr(n,t,u)?null:t,t=!1);var i=mr();if((null!=e||i!==it)&&(e=i(e,u,3)),t&&br()==r){t=e;var o;e=-1,u=n.length;for(var i=-1,f=[];++e<u;){var l=n[e],a=t?t(l,e,n):l;e&&o===a||(o=a,f[++i]=l)}n=f}else n=$t(n,e);return n}function Gr(n){if(!n||!n.length)return[];var t=-1,r=0;n=Gn(n,function(n){return Ir(n)?(r=ku(n.length,r),!0):void 0});for(var e=Me(r);++t<r;)e[t]=Jn(n,kt(t));return e}function Jr(n,t,r){return n&&n.length?(n=Gr(n),null==t?n:(t=Mt(t,r,4),Jn(n,function(n){return Xn(n,t,m,!0)}))):[]}function Xr(n,t){var r=-1,e=n?n.length:0,u={};for(!e||t||Ti(n[0])||(t=[]);++r<e;){var i=n[r];t?u[i]=t[r]:i&&(u[i[0]]=i[1])}return u}function Hr(n){return n=Nn(n),n.__chain__=!0,n}function Qr(n,t,r){return t.call(r,n)}function ne(n,t,r){var e=Ti(n)?Vn:at;return r&&Cr(n,t,r)&&(t=null),("function"!=typeof t||r!==m)&&(t=mr(t,r,3)),e(n,t)}function te(n,t,r){var e=Ti(n)?Gn:st;return t=mr(t,r,3),e(n,t)}function re(n,t,r,e){var u=n?Zu(n):0;return Tr(u)||(n=Re(n),u=n.length),u?(r="number"!=typeof r||e&&Cr(t,r,e)?0:0>r?ku(u+r,0):r||0,"string"==typeof n||!Ti(n)&&me(n)?u>r&&-1<n.indexOf(t,r):-1<br(n,t,r)):!1}function ee(n,t,r){var e=Ti(n)?Jn:bt;return t=mr(t,r,3),e(n,t)}function ue(n,t,r){if(r?Cr(n,t,r):null==t){n=Lr(n);var e=n.length;return e>0?n[It(0,e-1)]:m}r=-1,n=xe(n);var e=n.length,u=e-1;for(t=Ou(0>t?0:+t||0,e);++r<t;){var e=It(r,u),i=n[e];n[e]=n[r],n[r]=i}return n.length=t,n}function ie(n,t,r){var e=Ti(n)?Hn:Wt;return r&&Cr(n,t,r)&&(t=null),("function"!=typeof t||r!==m)&&(t=mr(t,r,3)),e(n,t)}function oe(n,t){var r;if("function"!=typeof t){if("function"!=typeof n)throw new Je(N);var e=n;n=t,t=e}return function(){return 0<--n&&(r=t.apply(this,arguments)),1>=n&&(t=null),r}}function fe(n,t,r){function e(){var r=t-(wi()-a);0>=r||r>t?(f&&cu(f),r=p,f=s=p=m,r&&(h=wi(),l=n.apply(c,o),s||f||(o=c=null))):s=gu(e,r)}function u(){s&&cu(s),f=s=p=m,(v||_!==t)&&(h=wi(),l=n.apply(c,o),s||f||(o=c=null))}function i(){if(o=arguments,a=wi(),c=this,p=v&&(s||!g),!1===_)var r=g&&!s;else{f||g||(h=a);var i=_-(a-h),y=0>=i||i>_;y?(f&&(f=cu(f)),h=a,l=n.apply(c,o)):f||(f=gu(u,i))}return y&&s?s=cu(s):s||t===_||(s=gu(e,t)),r&&(y=!0,l=n.apply(c,o)),!y||s||f||(o=c=null),l}var o,f,l,a,c,s,p,h=0,_=!1,v=!0;if("function"!=typeof n)throw new Je(N);if(t=0>t?0:+t||0,!0===r)var g=!0,v=!1;else ve(r)&&(g=r.leading,_="maxWait"in r&&ku(+r.maxWait||0,t),v="trailing"in r?r.trailing:v);return i.cancel=function(){s&&cu(s),f&&cu(f),f=s=p=m},i}function le(n,t){function r(){var e=arguments,u=t?t.apply(this,e):e[0],i=r.cache;return i.has(u)?i.get(u):(e=n.apply(this,e),r.cache=i.set(u,e),e)}if("function"!=typeof n||t&&"function"!=typeof t)throw new Je(N);return r.cache=new le.Cache,r}function ae(n,t){if("function"!=typeof n)throw new Je(N);return t=ku(t===m?n.length-1:+t||0,0),function(){for(var r=arguments,e=-1,u=ku(r.length-t,0),i=Me(u);++e<u;)i[e]=r[t+e];switch(t){case 0:return n.call(this,i);case 1:return n.call(this,r[0],i);case 2:return n.call(this,r[0],r[1],i)}for(u=Me(t+1),e=-1;++e<t;)u[e]=r[e];return u[t]=i,n.apply(this,u)}}function ce(n,t){return n>t}function se(n){return p(n)&&Ir(n)&&uu.call(n)==z}function pe(n){return!!n&&1===n.nodeType&&p(n)&&-1<uu.call(n).indexOf("Element")}function he(n,t,r,e){return e=(r="function"==typeof r?Mt(r,e,3):m)?r(n,t):m,e===m?mt(n,t,r):!!e}function _e(n){return p(n)&&"string"==typeof n.message&&uu.call(n)==q}function ve(n){var t=typeof n;return!!n&&("object"==t||"function"==t)}function ge(n){return null==n?!1:uu.call(n)==D?ou.test(tu.call(n)):p(n)&&On.test(n)}function ye(n){return"number"==typeof n||p(n)&&uu.call(n)==K}function de(n){return p(n)&&uu.call(n)==Y}function me(n){return"string"==typeof n||p(n)&&uu.call(n)==Z}function we(n){return p(n)&&Tr(n.length)&&!!Un[uu.call(n)]}function be(n,t){return t>n}function xe(n){var t=n?Zu(n):0;return Tr(t)?t?Dn(n):[]:Re(n)}function Ae(n){return ut(n,ke(n))}function je(n){return yt(n,ke(n))}function ke(n){if(null==n)return[];ve(n)||(n=Ye(n));for(var t=n.length,t=t&&Tr(t)&&(Ti(n)||se(n))&&t||0,r=n.constructor,e=-1,r="function"==typeof r&&r.prototype===n,u=Me(t),i=t>0;++e<t;)u[e]=e+"";for(var o in n)i&&Er(o,t)||"constructor"==o&&(r||!ru.call(n,o))||u.push(o);return u}function Oe(n){n=zr(n);for(var t=-1,r=Ki(n),e=r.length,u=Me(e);++t<e;){var i=r[t];u[t]=[i,n[i]]}return u}function Re(n){return Ft(n,Ki(n))}function Ie(n){return(n=u(n))&&n.replace(In,l).replace(bn,"")}function Ee(n){return(n=u(n))&&wn.test(n)?n.replace(mn,"\\$&"):n}function Ce(n,t,r){return r&&Cr(n,t,r)&&(t=0),Eu(n,t)}function We(n,t){var r="";if(n=u(n),t=+t,1>t||!n||!Au(t))return r;do t%2&&(r+=n),t=su(t/2),n+=n;while(t);return r}function Se(n,t,r){var e=n;return(n=u(n))?(r?Cr(e,t,r):null==t)?n.slice(v(n),g(n)+1):(t+="",n.slice(i(n,t),o(n,t)+1)):n}function Te(n,t,r){return r&&Cr(n,t,r)&&(t=null),n=u(n),n.match(t||Wn)||[]}function Ue(n,t,r){return r&&Cr(n,t,r)&&(t=null),p(n)?Ne(n):it(n,t)}function $e(n){return function(){return n}}function Fe(n){return n}function Ne(n){return xt(ot(n,!0))}function Le(n,t,r){if(null==r){var e=ve(t),u=e?Ki(t):null;((u=u&&u.length?yt(t,u):null)?u.length:e)||(u=!1,r=t,t=n,n=this)}u||(u=yt(t,Ki(t)));var i=!0,e=-1,o=$i(n),f=u.length;!1===r?i=!1:ve(r)&&"chain"in r&&(i=r.chain);for(;++e<f;){r=u[e];var l=t[r];n[r]=l,o&&(n.prototype[r]=function(t){return function(){var r=this.__chain__;if(i||r){var e=n(this.__wrapped__);return(e.__actions__=Dn(this.__actions__)).push({func:t,args:arguments,thisArg:n}),e.__chain__=r,e}return r=[this.value()],_u.apply(r,arguments),t.apply(n,r)}}(l))}return n}function ze(){}function Be(n){return Wr(n)?kt(n):Ot(n)}h=h?Zn.defaults(Yn.Object(),h,Zn.pick(Yn,Tn)):Yn;var Me=h.Array,Pe=h.Date,qe=h.Error,De=h.Function,Ke=h.Math,Ve=h.Number,Ye=h.Object,Ze=h.RegExp,Ge=h.String,Je=h.TypeError,Xe=Me.prototype,He=Ye.prototype,Qe=Ge.prototype,nu=(nu=h.window)?nu.document:null,tu=De.prototype.toString,ru=He.hasOwnProperty,eu=0,uu=He.toString,iu=h._,ou=Ze("^"+Ee(tu.call(ru)).replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),fu=Ar(h,"ArrayBuffer"),lu=Ar(fu&&new fu(0),"slice"),au=Ke.ceil,cu=h.clearTimeout,su=Ke.floor,pu=Ar(Ye,"getPrototypeOf"),hu=h.parseFloat,_u=Xe.push,vu=Ar(h,"Set"),gu=h.setTimeout,yu=Xe.splice,du=Ar(h,"Uint8Array"),mu=Ar(h,"WeakMap"),wu=function(){try{var n=Ar(h,"Float64Array"),t=new n(new fu(10),0,1)&&n}catch(r){}return t||null}(),bu=Ar(Ye,"create"),xu=Ar(Me,"isArray"),Au=h.isFinite,ju=Ar(Ye,"keys"),ku=Ke.max,Ou=Ke.min,Ru=Ar(Pe,"now"),Iu=Ar(Ve,"isFinite"),Eu=h.parseInt,Cu=Ke.random,Wu=Ve.NEGATIVE_INFINITY,Su=Ve.POSITIVE_INFINITY,Tu=4294967294,Uu=2147483647,$u=wu?wu.BYTES_PER_ELEMENT:0,Fu=9007199254740991,Nu=mu&&new mu,Lu={},zu=Nn.support={};!function(n){function t(){this.x=n}var r=[];t.prototype={valueOf:n,y:n};for(var e in new t)r.push(e);try{zu.dom=11===nu.createDocumentFragment().nodeType}catch(u){zu.dom=!1}}(1,0),Nn.templateSettings={escape:hn,evaluate:_n,interpolate:vn,variable:"",imports:{_:Nn}};var Bu=function(){function n(){}return function(t){if(ve(t)){n.prototype=t;var r=new n;n.prototype=null}return r||{}}}(),Mu=Yt(vt),Pu=Yt(gt,!0),qu=Zt(),Du=Zt(!0),Ku=Nu?function(n,t){return Nu.set(n,t),n}:Fe;lu||(Pt=fu&&du?function(n){var t=n.byteLength,r=wu?su(t/$u):0,e=r*$u,u=new fu(t);if(r){var i=new wu(u,0,r);i.set(new wu(n,0,r))}return t!=e&&(i=new du(u,e),i.set(new du(n,e))),u}:$e(null));var Vu=bu&&vu?function(n){return new Pn(n)}:$e(null),Yu=Nu?function(n){return Nu.get(n)}:ze,Zu=kt("length"),Gu=function(){var n=0,t=0;return function(r,e){var u=wi(),i=T-(u-t);if(t=u,i>0){if(++n>=S)return r}else n=0;return Ku(r,e)}}(),Ju=ae(function(n,t){return Ir(n)?lt(n,ht(t,!1,!0)):[]}),Xu=tr(),Hu=tr(!0),Qu=ae(function(n){for(var t=n.length,e=t,u=Me(c),i=br(),o=i==r,f=[];e--;){var l=n[e]=Ir(l=n[e])?l:[];u[e]=o&&120<=l.length?Vu(e&&l):null}var o=n[0],a=-1,c=o?o.length:0,s=u[0];n:for(;++a<c;)if(l=o[a],0>(s?qn(s,l):i(f,l,0))){for(e=t;--e;){var p=u[e];if(0>(p?qn(p,l):i(n[e],l,0)))continue n}s&&s.push(l),f.push(l)}return f}),ni=ae(function(t,r){r=ht(r);var e=et(t,r);return Rt(t,r.sort(n)),e}),ti=_r(),ri=_r(!0),ei=ae(function(n){return $t(ht(n,!1,!0))}),ui=ae(function(n,t){return Ir(n)?lt(n,t):[]}),ii=ae(Gr),oi=ae(function(n){var t=n.length,r=t>2?n[t-2]:m,e=t>1?n[t-1]:m;return t>2&&"function"==typeof r?t-=2:(r=t>1&&"function"==typeof e?(--t,e):m,e=m),n.length=t,Jr(n,r,e)}),fi=ae(function(n,t){return et(n,ht(t))}),li=Kt(function(n,t,r){ru.call(n,r)?++n[r]:n[r]=1}),ai=nr(Mu),ci=nr(Pu,!0),si=ur(Kn,Mu),pi=ur(function(n,t){for(var r=n.length;r--&&!1!==t(n[r],r,n););return n},Pu),hi=Kt(function(n,t,r){ru.call(n,r)?n[r].push(t):n[r]=[t]}),_i=Kt(function(n,t,r){n[r]=t}),vi=ae(function(n,t,r){var e=-1,u="function"==typeof t,i=Wr(t),o=Ir(n)?Me(n.length):[];return Mu(n,function(n){var f=u?t:i&&null!=n?n[t]:null;o[++e]=f?f.apply(n,r):Rr(n,t,r)}),o}),gi=Kt(function(n,t,r){n[r?0:1].push(t)},function(){return[[],[]]}),yi=cr(Xn,Mu),di=cr(function(n,t,r,e){var u=n.length;for(e&&u&&(r=n[--u]);u--;)r=t(r,n[u],u,n);return r},Pu),mi=ae(function(n,t){if(null==n)return[];var r=t[2];return r&&Cr(t[0],t[1],r)&&(t.length=1),Tt(n,ht(t),[])}),wi=Ru||function(){return(new Pe).getTime()},bi=ae(function(n,t,r){var e=b;if(r.length)var u=_(r,bi.placeholder),e=e|O;return vr(n,e,t,r,u)}),xi=ae(function(n,t){t=t.length?ht(t):je(n);for(var r=-1,e=t.length;++r<e;){var u=t[r];n[u]=vr(n[u],b,n)}return n}),Ai=ae(function(n,t,r){var e=b|x;if(r.length)var u=_(r,Ai.placeholder),e=e|O;return vr(t,e,n,r,u)}),ji=Ht(j),ki=Ht(k),Oi=ae(function(n,t){return ft(n,1,t)}),Ri=ae(function(n,t,r){return ft(n,t,r)}),Ii=er(),Ei=er(!0),Ci=ar(O),Wi=ar(R),Si=ae(function(n,t){return vr(n,E,null,null,null,ht(t))}),Ti=xu||function(n){return p(n)&&Tr(n.length)&&uu.call(n)==B};zu.dom||(pe=function(n){return!!n&&1===n.nodeType&&p(n)&&!Fi(n)});var Ui=Iu||function(n){return"number"==typeof n&&Au(n)},$i=e(/x/)||du&&!e(du)?function(n){return uu.call(n)==D}:e,Fi=pu?function(n){if(!n||uu.call(n)!=V)return!1;var t=Ar(n,"valueOf"),r=t&&(r=pu(t))&&pu(r);return r?n==r||pu(n)==r:Fr(n)}:Fr,Ni=Vt(function(n,t,r){return r?tt(n,t,r):rt(n,t)}),Li=ae(function(n){var t=n[0];return null==t?t:(n.push(Qn),Ni.apply(m,n))}),zi=rr(vt),Bi=rr(gt),Mi=ir(qu),Pi=ir(Du),qi=or(vt),Di=or(gt),Ki=ju?function(n){var t=null==n?null:n.constructor;return"function"==typeof t&&t.prototype===n||"function"!=typeof n&&Ir(n)?Nr(n):ve(n)?ju(n):[]}:Nr,Vi=fr(!0),Yi=fr(),Zi=Vt(jt),Gi=ae(function(n,t){if(null==n)return{};if("function"!=typeof t[0])return t=Jn(ht(t),Ge),Ur(n,lt(ke(n),t));var r=Mt(t[0],t[1],3);return $r(n,function(n,t,e){return!r(n,t,e)})}),Ji=ae(function(n,t){return null==n?{}:"function"==typeof t[0]?$r(n,Mt(t[0],t[1],3)):Ur(n,ht(t))}),Xi=Jt(function(n,t,r){return t=t.toLowerCase(),n+(r?t.charAt(0).toUpperCase()+t.slice(1):t)}),Hi=Jt(function(n,t,r){return n+(r?"-":"")+t.toLowerCase()}),Qi=lr(),no=lr(!0);8!=Eu(Sn+"08")&&(Ce=function(n,t,r){return(r?Cr(n,t,r):null==t)?t=0:t&&(t=+t),n=Se(n),Eu(n,t||(kn.test(n)?16:10))});var to=Jt(function(n,t,r){return n+(r?"_":"")+t.toLowerCase()}),ro=Jt(function(n,t,r){return n+(r?" ":"")+(t.charAt(0).toUpperCase()+t.slice(1))}),eo=ae(function(n,t){try{return n.apply(m,t)}catch(r){return _e(r)?r:new qe(r)}}),uo=ae(function(n,t){return function(r){return Rr(r,n,t)}}),io=ae(function(n,t){return function(r){return Rr(n,r,t)}}),oo=Qt(ce,Wu),fo=Qt(be,Su);return Nn.prototype=Ln.prototype,zn.prototype=Bu(Ln.prototype),zn.prototype.constructor=zn,Bn.prototype=Bu(Ln.prototype),Bn.prototype.constructor=Bn,Mn.prototype["delete"]=function(n){return this.has(n)&&delete this.__data__[n]},Mn.prototype.get=function(n){return"__proto__"==n?m:this.__data__[n]},Mn.prototype.has=function(n){return"__proto__"!=n&&ru.call(this.__data__,n)},Mn.prototype.set=function(n,t){return"__proto__"!=n&&(this.__data__[n]=t),this},Pn.prototype.push=function(n){var t=this.data;"string"==typeof n||ve(n)?t.set.add(n):t.hash[n]=!0},le.Cache=Mn,Nn.after=function(n,t){if("function"!=typeof t){if("function"!=typeof n)throw new Je(N);var r=n;n=t,t=r}return n=Au(n=+n)?n:0,function(){return 1>--n?t.apply(this,arguments):void 0}},Nn.ary=function(n,t,r){return r&&Cr(n,t,r)&&(t=null),t=n&&null==t?n.length:ku(+t||0,0),vr(n,I,null,null,null,null,t)},Nn.assign=Ni,Nn.at=fi,Nn.before=oe,Nn.bind=bi,Nn.bindAll=xi,Nn.bindKey=Ai,Nn.callback=Ue,Nn.chain=Hr,Nn.chunk=function(n,t,r){t=(r?Cr(n,t,r):null==t)?1:ku(+t||1,1),r=0;for(var e=n?n.length:0,u=-1,i=Me(au(e/t));e>r;)i[++u]=Ct(n,r,r+=t);return i},Nn.compact=function(n){for(var t=-1,r=n?n.length:0,e=-1,u=[];++t<r;){var i=n[t];i&&(u[++e]=i)}return u},Nn.constant=$e,Nn.countBy=li,Nn.create=function(n,t,r){var e=Bu(n);return r&&Cr(n,t,r)&&(t=null),t?rt(e,t):e},Nn.curry=ji,Nn.curryRight=ki,Nn.debounce=fe,Nn.defaults=Li,Nn.defer=Oi,Nn.delay=Ri,Nn.difference=Ju,Nn.drop=Pr,Nn.dropRight=qr,Nn.dropRightWhile=function(n,t,r){return n&&n.length?Nt(n,mr(t,r,3),!0,!0):[]},Nn.dropWhile=function(n,t,r){return n&&n.length?Nt(n,mr(t,r,3),!0):[]},Nn.fill=function(n,t,r,e){var u=n?n.length:0;if(!u)return[];for(r&&"number"!=typeof r&&Cr(n,t,r)&&(r=0,e=u),u=n.length,r=null==r?0:+r||0,0>r&&(r=-r>u?0:u+r),e=e===m||e>u?u:+e||0,0>e&&(e+=u),u=r>e?0:e>>>0,r>>>=0;u>r;)n[r++]=t;return n},Nn.filter=te,Nn.flatten=function(n,t,r){var e=n?n.length:0;return r&&Cr(n,t,r)&&(t=!1),e?ht(n,t):[]},Nn.flattenDeep=function(n){return n&&n.length?ht(n,!0):[]},Nn.flow=Ii,Nn.flowRight=Ei,Nn.forEach=si,Nn.forEachRight=pi,Nn.forIn=Mi,Nn.forInRight=Pi,
Nn.forOwn=qi,Nn.forOwnRight=Di,Nn.functions=je,Nn.groupBy=hi,Nn.indexBy=_i,Nn.initial=function(n){return qr(n,1)},Nn.intersection=Qu,Nn.invert=function(n,t,r){r&&Cr(n,t,r)&&(t=null),r=-1;for(var e=Ki(n),u=e.length,i={};++r<u;){var o=e[r],f=n[o];t?ru.call(i,f)?i[f].push(o):i[f]=[o]:i[f]=o}return i},Nn.invoke=vi,Nn.keys=Ki,Nn.keysIn=ke,Nn.map=ee,Nn.mapKeys=Vi,Nn.mapValues=Yi,Nn.matches=Ne,Nn.matchesProperty=function(n,t){return At(n,ot(t,!0))},Nn.memoize=le,Nn.merge=Zi,Nn.method=uo,Nn.methodOf=io,Nn.mixin=Le,Nn.negate=function(n){if("function"!=typeof n)throw new Je(N);return function(){return!n.apply(this,arguments)}},Nn.omit=Gi,Nn.once=function(n){return oe(2,n)},Nn.pairs=Oe,Nn.partial=Ci,Nn.partialRight=Wi,Nn.partition=gi,Nn.pick=Ji,Nn.pluck=function(n,t){return ee(n,Be(t))},Nn.property=Be,Nn.propertyOf=function(n){return function(t){return dt(n,Br(t),t+"")}},Nn.pull=function(){var n=arguments,t=n[0];if(!t||!t.length)return t;for(var r=0,e=br(),u=n.length;++r<u;)for(var i=0,o=n[r];-1<(i=e(t,o,i));)yu.call(t,i,1);return t},Nn.pullAt=ni,Nn.range=function(n,t,r){r&&Cr(n,t,r)&&(t=r=null),n=+n||0,r=null==r?1:+r||0,null==t?(t=n,n=0):t=+t||0;var e=-1;t=ku(au((t-n)/(r||1)),0);for(var u=Me(t);++e<t;)u[e]=n,n+=r;return u},Nn.rearg=Si,Nn.reject=function(n,t,r){var e=Ti(n)?Gn:st;return t=mr(t,r,3),e(n,function(n,r,e){return!t(n,r,e)})},Nn.remove=function(n,t,r){var e=[];if(!n||!n.length)return e;var u=-1,i=[],o=n.length;for(t=mr(t,r,3);++u<o;)r=n[u],t(r,u,n)&&(e.push(r),i.push(u));return Rt(n,i),e},Nn.rest=Yr,Nn.restParam=ae,Nn.set=function(n,t,r){if(null==n)return n;var e=t+"";t=null!=n[e]||Wr(t,n)?[e]:Br(t);for(var e=-1,u=t.length,i=u-1,o=n;null!=o&&++e<u;){var f=t[e];ve(o)&&(e==i?o[f]=r:null==o[f]&&(o[f]=Er(t[e+1])?[]:{})),o=o[f]}return n},Nn.shuffle=function(n){return ue(n,Su)},Nn.slice=function(n,t,r){var e=n?n.length:0;return e?(r&&"number"!=typeof r&&Cr(n,t,r)&&(t=0,r=e),Ct(n,t,r)):[]},Nn.sortBy=function(n,t,r){if(null==n)return[];r&&Cr(n,t,r)&&(t=null);var e=-1;return t=mr(t,r,3),n=bt(n,function(n,r,u){return{a:t(n,r,u),b:++e,c:n}}),St(n,f)},Nn.sortByAll=mi,Nn.sortByOrder=function(n,t,r,e){return null==n?[]:(e&&Cr(t,r,e)&&(r=null),Ti(t)||(t=null==t?[]:[t]),Ti(r)||(r=null==r?[]:[r]),Tt(n,t,r))},Nn.spread=function(n){if("function"!=typeof n)throw new Je(N);return function(t){return n.apply(this,t)}},Nn.take=function(n,t,r){return n&&n.length?((r?Cr(n,t,r):null==t)&&(t=1),Ct(n,0,0>t?0:t)):[]},Nn.takeRight=function(n,t,r){var e=n?n.length:0;return e?((r?Cr(n,t,r):null==t)&&(t=1),t=e-(+t||0),Ct(n,0>t?0:t)):[]},Nn.takeRightWhile=function(n,t,r){return n&&n.length?Nt(n,mr(t,r,3),!1,!0):[]},Nn.takeWhile=function(n,t,r){return n&&n.length?Nt(n,mr(t,r,3)):[]},Nn.tap=function(n,t,r){return t.call(r,n),n},Nn.throttle=function(n,t,r){var e=!0,u=!0;if("function"!=typeof n)throw new Je(N);return!1===r?e=!1:ve(r)&&(e="leading"in r?!!r.leading:e,u="trailing"in r?!!r.trailing:u),Fn.leading=e,Fn.maxWait=+t,Fn.trailing=u,fe(n,t,Fn)},Nn.thru=Qr,Nn.times=function(n,t,r){if(n=su(n),1>n||!Au(n))return[];var e=-1,u=Me(Ou(n,4294967295));for(t=Mt(t,r,1);++e<n;)4294967295>e?u[e]=t(e):t(e);return u},Nn.toArray=xe,Nn.toPlainObject=Ae,Nn.transform=function(n,t,r,e){var u=Ti(n)||we(n);return t=mr(t,e,4),null==r&&(u||ve(n)?(e=n.constructor,r=u?Ti(n)?new e:[]:Bu($i(e)?e.prototype:null)):r={}),(u?Kn:vt)(n,function(n,e,u){return t(r,n,e,u)}),r},Nn.union=ei,Nn.uniq=Zr,Nn.unzip=Gr,Nn.unzipWith=Jr,Nn.values=Re,Nn.valuesIn=function(n){return Ft(n,ke(n))},Nn.where=function(n,t){return te(n,xt(t))},Nn.without=ui,Nn.wrap=function(n,t){return t=null==t?Fe:t,vr(t,O,null,[n],[])},Nn.xor=function(){for(var n=-1,t=arguments.length;++n<t;){var r=arguments[n];if(Ir(r))var e=e?lt(e,r).concat(lt(r,e)):r}return e?$t(e):[]},Nn.zip=ii,Nn.zipObject=Xr,Nn.zipWith=oi,Nn.backflow=Ei,Nn.collect=ee,Nn.compose=Ei,Nn.each=si,Nn.eachRight=pi,Nn.extend=Ni,Nn.iteratee=Ue,Nn.methods=je,Nn.object=Xr,Nn.select=te,Nn.tail=Yr,Nn.unique=Zr,Le(Nn,Nn),Nn.add=function(n,t){return(+n||0)+(+t||0)},Nn.attempt=eo,Nn.camelCase=Xi,Nn.capitalize=function(n){return(n=u(n))&&n.charAt(0).toUpperCase()+n.slice(1)},Nn.clone=function(n,t,r,e){return t&&"boolean"!=typeof t&&Cr(n,t,r)?t=!1:"function"==typeof t&&(e=r,r=t,t=!1),"function"==typeof r?ot(n,t,Mt(r,e,1)):ot(n,t)},Nn.cloneDeep=function(n,t,r){return"function"==typeof t?ot(n,!0,Mt(t,r,1)):ot(n,!0)},Nn.deburr=Ie,Nn.endsWith=function(n,t,r){n=u(n),t+="";var e=n.length;return r=r===m?e:Ou(0>r?0:+r||0,e),r-=t.length,r>=0&&n.indexOf(t,r)==r},Nn.escape=function(n){return(n=u(n))&&pn.test(n)?n.replace(cn,a):n},Nn.escapeRegExp=Ee,Nn.every=ne,Nn.find=ai,Nn.findIndex=Xu,Nn.findKey=zi,Nn.findLast=ci,Nn.findLastIndex=Hu,Nn.findLastKey=Bi,Nn.findWhere=function(n,t){return ai(n,xt(t))},Nn.first=Dr,Nn.get=function(n,t,r){return n=null==n?m:dt(n,Br(t),t+""),n===m?r:n},Nn.gt=ce,Nn.gte=function(n,t){return n>=t},Nn.has=function(n,t){if(null==n)return!1;var r=ru.call(n,t);if(!r&&!Wr(t)){if(t=Br(t),n=1==t.length?n:dt(n,Ct(t,0,-1)),null==n)return!1;t=Vr(t),r=ru.call(n,t)}return r||Tr(n.length)&&Er(t,n.length)&&(Ti(n)||se(n))},Nn.identity=Fe,Nn.includes=re,Nn.indexOf=Kr,Nn.inRange=function(n,t,r){return t=+t||0,"undefined"==typeof r?(r=t,t=0):r=+r||0,n>=Ou(t,r)&&n<ku(t,r)},Nn.isArguments=se,Nn.isArray=Ti,Nn.isBoolean=function(n){return!0===n||!1===n||p(n)&&uu.call(n)==M},Nn.isDate=function(n){return p(n)&&uu.call(n)==P},Nn.isElement=pe,Nn.isEmpty=function(n){return null==n?!0:Ir(n)&&(Ti(n)||me(n)||se(n)||p(n)&&$i(n.splice))?!n.length:!Ki(n).length},Nn.isEqual=he,Nn.isError=_e,Nn.isFinite=Ui,Nn.isFunction=$i,Nn.isMatch=function(n,t,r,e){return r="function"==typeof r?Mt(r,e,3):m,wt(n,xr(t),r)},Nn.isNaN=function(n){return ye(n)&&n!=+n},Nn.isNative=ge,Nn.isNull=function(n){return null===n},Nn.isNumber=ye,Nn.isObject=ve,Nn.isPlainObject=Fi,Nn.isRegExp=de,Nn.isString=me,Nn.isTypedArray=we,Nn.isUndefined=function(n){return n===m},Nn.kebabCase=Hi,Nn.last=Vr,Nn.lastIndexOf=function(n,t,r){var e=n?n.length:0;if(!e)return-1;var u=e;if("number"==typeof r)u=(0>r?ku(e+r,0):Ou(r||0,e-1))+1;else if(r)return u=zt(n,t,!0)-1,n=n[u],(t===t?t===n:n!==n)?u:-1;if(t!==t)return s(n,u,!0);for(;u--;)if(n[u]===t)return u;return-1},Nn.lt=be,Nn.lte=function(n,t){return t>=n},Nn.max=oo,Nn.min=fo,Nn.noConflict=function(){return h._=iu,this},Nn.noop=ze,Nn.now=wi,Nn.pad=function(n,t,r){n=u(n),t=+t;var e=n.length;return t>e&&Au(t)?(e=(t-e)/2,t=su(e),e=au(e),r=pr("",e,r),r.slice(0,t)+n+r):n},Nn.padLeft=Qi,Nn.padRight=no,Nn.parseInt=Ce,Nn.random=function(n,t,r){r&&Cr(n,t,r)&&(t=r=null);var e=null==n,u=null==t;return null==r&&(u&&"boolean"==typeof n?(r=n,n=1):"boolean"==typeof t&&(r=t,u=!0)),e&&u&&(t=1,u=!1),n=+n||0,u?(t=n,n=0):t=+t||0,r||n%1||t%1?(r=Cu(),Ou(n+r*(t-n+hu("1e-"+((r+"").length-1))),t)):It(n,t)},Nn.reduce=yi,Nn.reduceRight=di,Nn.repeat=We,Nn.result=function(n,t,r){var e=null==n?m:n[t];return e===m&&(null==n||Wr(t,n)||(t=Br(t),n=1==t.length?n:dt(n,Ct(t,0,-1)),e=null==n?m:n[Vr(t)]),e=e===m?r:e),$i(e)?e.call(n):e},Nn.runInContext=d,Nn.size=function(n){var t=n?Zu(n):0;return Tr(t)?t:Ki(n).length},Nn.snakeCase=to,Nn.some=ie,Nn.sortedIndex=ti,Nn.sortedLastIndex=ri,Nn.startCase=ro,Nn.startsWith=function(n,t,r){return n=u(n),r=null==r?0:Ou(0>r?0:+r||0,n.length),n.lastIndexOf(t,r)==r},Nn.sum=function(n,t,r){r&&Cr(n,t,r)&&(t=null);var e=mr(),u=null==t;if(u&&e===it||(u=!1,t=e(t,r,3)),u){for(n=Ti(n)?n:Lr(n),t=n.length,r=0;t--;)r+=+n[t]||0;n=r}else n=Ut(n,t);return n},Nn.template=function(n,t,r){var e=Nn.templateSettings;r&&Cr(n,t,r)&&(t=r=null),n=u(n),t=tt(rt({},r||t),e,nt),r=tt(rt({},t.imports),e.imports,nt);var i,o,f=Ki(r),l=Ft(r,f),a=0;r=t.interpolate||En;var s="__p+='";r=Ze((t.escape||En).source+"|"+r.source+"|"+(r===vn?An:En).source+"|"+(t.evaluate||En).source+"|$","g");var p="sourceURL"in t?"//# sourceURL="+t.sourceURL+"\n":"";if(n.replace(r,function(t,r,e,u,f,l){return e||(e=u),s+=n.slice(a,l).replace(Cn,c),r&&(i=!0,s+="'+__e("+r+")+'"),f&&(o=!0,s+="';"+f+";\n__p+='"),e&&(s+="'+((__t=("+e+"))==null?'':__t)+'"),a=l+t.length,t}),s+="';",(t=t.variable)||(s="with(obj){"+s+"}"),s=(o?s.replace(on,""):s).replace(fn,"$1").replace(ln,"$1;"),s="function("+(t||"obj")+"){"+(t?"":"obj||(obj={});")+"var __t,__p=''"+(i?",__e=_.escape":"")+(o?",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}":";")+s+"return __p}",t=eo(function(){return De(f,p+"return "+s).apply(m,l)}),t.source=s,_e(t))throw t;return t},Nn.trim=Se,Nn.trimLeft=function(n,t,r){var e=n;return(n=u(n))?n.slice((r?Cr(e,t,r):null==t)?v(n):i(n,t+"")):n},Nn.trimRight=function(n,t,r){var e=n;return(n=u(n))?(r?Cr(e,t,r):null==t)?n.slice(0,g(n)+1):n.slice(0,o(n,t+"")+1):n},Nn.trunc=function(n,t,r){r&&Cr(n,t,r)&&(t=null);var e=C;if(r=W,null!=t)if(ve(t)){var i="separator"in t?t.separator:i,e="length"in t?+t.length||0:e;r="omission"in t?u(t.omission):r}else e=+t||0;if(n=u(n),e>=n.length)return n;if(e-=r.length,1>e)return r;if(t=n.slice(0,e),null==i)return t+r;if(de(i)){if(n.slice(e).search(i)){var o,f=n.slice(0,e);for(i.global||(i=Ze(i.source,(jn.exec(i)||"")+"g")),i.lastIndex=0;n=i.exec(f);)o=n.index;t=t.slice(0,null==o?e:o)}}else n.indexOf(i,e)!=e&&(i=t.lastIndexOf(i),i>-1&&(t=t.slice(0,i)));return t+r},Nn.unescape=function(n){return(n=u(n))&&sn.test(n)?n.replace(an,y):n},Nn.uniqueId=function(n){var t=++eu;return u(n)+t},Nn.words=Te,Nn.all=ne,Nn.any=ie,Nn.contains=re,Nn.eq=he,Nn.detect=ai,Nn.foldl=yi,Nn.foldr=di,Nn.head=Dr,Nn.include=re,Nn.inject=yi,Le(Nn,function(){var n={};return vt(Nn,function(t,r){Nn.prototype[r]||(n[r]=t)}),n}(),!1),Nn.sample=ue,Nn.prototype.sample=function(n){return this.__chain__||null!=n?this.thru(function(t){return ue(t,n)}):ue(this.value())},Nn.VERSION=w,Kn("bind bindKey curry curryRight partial partialRight".split(" "),function(n){Nn[n].placeholder=Nn}),Kn(["dropWhile","filter","map","takeWhile"],function(n,t){var r=t!=F,e=t==U;Bn.prototype[n]=function(n,u){var i=this.__filtered__,o=i&&e?new Bn(this):this.clone();return(o.__iteratees__||(o.__iteratees__=[])).push({done:!1,count:0,index:0,iteratee:mr(n,u,1),limit:-1,type:t}),o.__filtered__=i||r,o}}),Kn(["drop","take"],function(n,t){var r=n+"While";Bn.prototype[n]=function(r){var e=this.__filtered__,u=e&&!t?this.dropWhile():this.clone();return r=null==r?1:ku(su(r)||0,0),e?t?u.__takeCount__=Ou(u.__takeCount__,r):Vr(u.__iteratees__).limit=r:(u.__views__||(u.__views__=[])).push({size:r,type:n+(0>u.__dir__?"Right":"")}),u},Bn.prototype[n+"Right"]=function(t){return this.reverse()[n](t).reverse()},Bn.prototype[n+"RightWhile"]=function(n,t){return this.reverse()[r](n,t).reverse()}}),Kn(["first","last"],function(n,t){var r="take"+(t?"Right":"");Bn.prototype[n]=function(){return this[r](1).value()[0]}}),Kn(["initial","rest"],function(n,t){var r="drop"+(t?"":"Right");Bn.prototype[n]=function(){return this[r](1)}}),Kn(["pluck","where"],function(n,t){var r=t?"filter":"map",e=t?xt:Be;Bn.prototype[n]=function(n){return this[r](e(n))}}),Bn.prototype.compact=function(){return this.filter(Fe)},Bn.prototype.reject=function(n,t){return n=mr(n,t,1),this.filter(function(t){return!n(t)})},Bn.prototype.slice=function(n,t){n=null==n?0:+n||0;var r=this;return 0>n?r=this.takeRight(-n):n&&(r=this.drop(n)),t!==m&&(t=+t||0,r=0>t?r.dropRight(-t):r.take(t-n)),r},Bn.prototype.toArray=function(){return this.drop(0)},vt(Bn.prototype,function(n,t){var r=Nn[t];if(r){var e=/^(?:filter|map|reject)|While$/.test(t),u=/^(?:first|last)$/.test(t);Nn.prototype[t]=function(){function t(n){return n=[n],_u.apply(n,i),r.apply(Nn,n)}var i=arguments,o=this.__chain__,f=this.__wrapped__,l=!!this.__actions__.length,a=f instanceof Bn,c=i[0],s=a||Ti(f);return s&&e&&"function"==typeof c&&1!=c.length&&(a=s=!1),a=a&&!l,u&&!o?a?n.call(f):r.call(Nn,this.value()):s?(f=n.apply(a?f:new Bn(this),i),u||!l&&!f.__actions__||(f.__actions__||(f.__actions__=[])).push({func:Qr,args:[t],thisArg:Nn}),new zn(f,o)):this.thru(t)}}}),Kn("concat join pop push replace shift sort splice split unshift".split(" "),function(n){var t=(/^(?:replace|split)$/.test(n)?Qe:Xe)[n],r=/^(?:push|sort|unshift)$/.test(n)?"tap":"thru",e=/^(?:join|pop|replace|shift)$/.test(n);Nn.prototype[n]=function(){var n=arguments;return e&&!this.__chain__?t.apply(this.value(),n):this[r](function(r){return t.apply(r,n)})}}),vt(Bn.prototype,function(n,t){var r=Nn[t];if(r){var e=r.name;(Lu[e]||(Lu[e]=[])).push({name:t,func:r})}}),Lu[sr(null,x).name]=[{name:"wrapper",func:null}],Bn.prototype.clone=function(){var n=this.__actions__,t=this.__iteratees__,r=this.__views__,e=new Bn(this.__wrapped__);return e.__actions__=n?Dn(n):null,e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=t?Dn(t):null,e.__takeCount__=this.__takeCount__,e.__views__=r?Dn(r):null,e},Bn.prototype.reverse=function(){if(this.__filtered__){var n=new Bn(this);n.__dir__=-1,n.__filtered__=!0}else n=this.clone(),n.__dir__*=-1;return n},Bn.prototype.value=function(){var n=this.__wrapped__.value();if(!Ti(n))return Lt(n,this.__actions__);var t,r=this.__dir__,e=0>r;t=n.length;for(var u=this.__views__,i=0,o=-1,f=u?u.length:0;++o<f;){var l=u[o],a=l.size;switch(l.type){case"drop":i+=a;break;case"dropRight":t-=a;break;case"take":t=Ou(t,i+a);break;case"takeRight":i=ku(i,t-a)}}t={start:i,end:t},u=t.start,i=t.end,t=i-u,u=e?i:u-1,i=Ou(t,this.__takeCount__),f=(o=this.__iteratees__)?o.length:0,l=0,a=[];n:for(;t--&&i>l;){for(var u=u+r,c=-1,s=n[u];++c<f;){var p=o[c],h=p.iteratee,_=p.type;if(_==U){if(p.done&&(e?u>p.index:u<p.index)&&(p.count=0,p.done=!1),p.index=u,!(p.done||(_=p.limit,p.done=_>-1?p.count++>=_:!h(s))))continue n}else if(p=h(s),_==F)s=p;else if(!p){if(_==$)continue n;break n}}a[l++]=s}return a},Nn.prototype.chain=function(){return Hr(this)},Nn.prototype.commit=function(){return new zn(this.value(),this.__chain__)},Nn.prototype.plant=function(n){for(var t,r=this;r instanceof Ln;){var e=Mr(r);t?u.__wrapped__=e:t=e;var u=e,r=r.__wrapped__}return u.__wrapped__=n,t},Nn.prototype.reverse=function(){var n=this.__wrapped__;return n instanceof Bn?(this.__actions__.length&&(n=new Bn(this)),new zn(n.reverse(),this.__chain__)):this.thru(function(n){return n.reverse()})},Nn.prototype.toString=function(){return this.value()+""},Nn.prototype.run=Nn.prototype.toJSON=Nn.prototype.valueOf=Nn.prototype.value=function(){return Lt(this.__wrapped__,this.__actions__)},Nn.prototype.collect=Nn.prototype.map,Nn.prototype.head=Nn.prototype.first,Nn.prototype.select=Nn.prototype.filter,Nn.prototype.tail=Nn.prototype.rest,Nn}var m,w="3.9.3",b=1,x=2,A=4,j=8,k=16,O=32,R=64,I=128,E=256,C=30,W="...",S=150,T=16,U=0,$=1,F=2,N="Expected a function",L="__lodash_placeholder__",z="[object Arguments]",B="[object Array]",M="[object Boolean]",P="[object Date]",q="[object Error]",D="[object Function]",K="[object Number]",V="[object Object]",Y="[object RegExp]",Z="[object String]",G="[object ArrayBuffer]",J="[object Float32Array]",X="[object Float64Array]",H="[object Int8Array]",Q="[object Int16Array]",nn="[object Int32Array]",tn="[object Uint8Array]",rn="[object Uint8ClampedArray]",en="[object Uint16Array]",un="[object Uint32Array]",on=/\b__p\+='';/g,fn=/\b(__p\+=)''\+/g,ln=/(__e\(.*?\)|\b__t\))\+'';/g,an=/&(?:amp|lt|gt|quot|#39|#96);/g,cn=/[&<>"'`]/g,sn=RegExp(an.source),pn=RegExp(cn.source),hn=/<%-([\s\S]+?)%>/g,_n=/<%([\s\S]+?)%>/g,vn=/<%=([\s\S]+?)%>/g,gn=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,yn=/^\w*$/,dn=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g,mn=/[.*+?^${}()|[\]\/\\]/g,wn=RegExp(mn.source),bn=/[\u0300-\u036f\ufe20-\ufe23]/g,xn=/\\(\\)?/g,An=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,jn=/\w*$/,kn=/^0[xX]/,On=/^\[object .+?Constructor\]$/,Rn=/^\d+$/,In=/[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g,En=/($^)/,Cn=/['\n\r\u2028\u2029\\]/g,Wn=RegExp("[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?=[A-Z\\xc0-\\xd6\\xd8-\\xde][a-z\\xdf-\\xf6\\xf8-\\xff]+)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+|[A-Z\\xc0-\\xd6\\xd8-\\xde]+|[0-9]+","g"),Sn=" 	\f \ufeff\n\r\u2028\u2029 ᠎             　",Tn="Array ArrayBuffer Date Error Float32Array Float64Array Function Int8Array Int16Array Int32Array Math Number Object RegExp Set String _ clearTimeout document isFinite parseFloat parseInt setTimeout TypeError Uint8Array Uint8ClampedArray Uint16Array Uint32Array WeakMap window".split(" "),Un={};Un[J]=Un[X]=Un[H]=Un[Q]=Un[nn]=Un[tn]=Un[rn]=Un[en]=Un[un]=!0,Un[z]=Un[B]=Un[G]=Un[M]=Un[P]=Un[q]=Un[D]=Un["[object Map]"]=Un[K]=Un[V]=Un[Y]=Un["[object Set]"]=Un[Z]=Un["[object WeakMap]"]=!1;var $n={};$n[z]=$n[B]=$n[G]=$n[M]=$n[P]=$n[J]=$n[X]=$n[H]=$n[Q]=$n[nn]=$n[K]=$n[V]=$n[Y]=$n[Z]=$n[tn]=$n[rn]=$n[en]=$n[un]=!0,$n[q]=$n[D]=$n["[object Map]"]=$n["[object Set]"]=$n["[object WeakMap]"]=!1;var Fn={leading:!1,maxWait:0,trailing:!1},Nn={"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss"},Ln={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","`":"&#96;"},zn={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'","&#96;":"`"},Bn={"function":!0,object:!0},Mn={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Pn=Bn[typeof exports]&&exports&&!exports.nodeType&&exports,qn=Bn[typeof module]&&module&&!module.nodeType&&module,Dn=Bn[typeof self]&&self&&self.Object&&self,Kn=Bn[typeof window]&&window&&window.Object&&window,Vn=qn&&qn.exports===Pn&&Pn,Yn=Pn&&qn&&"object"==typeof global&&global&&global.Object&&global||Kn!==(this&&this.window)&&Kn||Dn||this,Zn=d();"function"==typeof define&&"object"==typeof define.amd&&define.amd?(Yn._=Zn,define(function(){return Zn})):Pn&&qn?Vn?(qn.exports=Zn)._=Zn:Pn._=Zn:Yn._=Zn}).call(this);
!function(e){function t(e){var t=e.length,a=r.type(e);return"function"===a||r.isWindow(e)?!1:1===e.nodeType&&t?!0:"array"===a||0===t||"number"==typeof t&&t>0&&t-1 in e}if(!e.jQuery){var r=function(e,t){return new r.fn.init(e,t)};r.isWindow=function(e){return null!=e&&e==e.window},r.type=function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?n[i.call(e)]||"object":typeof e},r.isArray=Array.isArray||function(e){return"array"===r.type(e)},r.isPlainObject=function(e){var t;if(!e||"object"!==r.type(e)||e.nodeType||r.isWindow(e))return!1;try{if(e.constructor&&!o.call(e,"constructor")&&!o.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(a){return!1}for(t in e);return void 0===t||o.call(e,t)},r.each=function(e,r,a){var n,o=0,i=e.length,s=t(e);if(a){if(s)for(;i>o&&(n=r.apply(e[o],a),n!==!1);o++);else for(o in e)if(n=r.apply(e[o],a),n===!1)break}else if(s)for(;i>o&&(n=r.call(e[o],o,e[o]),n!==!1);o++);else for(o in e)if(n=r.call(e[o],o,e[o]),n===!1)break;return e},r.data=function(e,t,n){if(void 0===n){var o=e[r.expando],i=o&&a[o];if(void 0===t)return i;if(i&&t in i)return i[t]}else if(void 0!==t){var o=e[r.expando]||(e[r.expando]=++r.uuid);return a[o]=a[o]||{},a[o][t]=n,n}},r.removeData=function(e,t){var n=e[r.expando],o=n&&a[n];o&&r.each(t,function(e,t){delete o[t]})},r.extend=function(){var e,t,a,n,o,i,s=arguments[0]||{},l=1,u=arguments.length,c=!1;for("boolean"==typeof s&&(c=s,s=arguments[l]||{},l++),"object"!=typeof s&&"function"!==r.type(s)&&(s={}),l===u&&(s=this,l--);u>l;l++)if(null!=(o=arguments[l]))for(n in o)e=s[n],a=o[n],s!==a&&(c&&a&&(r.isPlainObject(a)||(t=r.isArray(a)))?(t?(t=!1,i=e&&r.isArray(e)?e:[]):i=e&&r.isPlainObject(e)?e:{},s[n]=r.extend(c,i,a)):void 0!==a&&(s[n]=a));return s},r.queue=function(e,a,n){function o(e,r){var a=r||[];return null!=e&&(t(Object(e))?!function(e,t){for(var r=+t.length,a=0,n=e.length;r>a;)e[n++]=t[a++];if(r!==r)for(;void 0!==t[a];)e[n++]=t[a++];return e.length=n,e}(a,"string"==typeof e?[e]:e):[].push.call(a,e)),a}if(e){a=(a||"fx")+"queue";var i=r.data(e,a);return n?(!i||r.isArray(n)?i=r.data(e,a,o(n)):i.push(n),i):i||[]}},r.dequeue=function(e,t){r.each(e.nodeType?[e]:e,function(e,a){t=t||"fx";var n=r.queue(a,t),o=n.shift();"inprogress"===o&&(o=n.shift()),o&&("fx"===t&&n.unshift("inprogress"),o.call(a,function(){r.dequeue(a,t)}))})},r.fn=r.prototype={init:function(e){if(e.nodeType)return this[0]=e,this;throw new Error("Not a DOM node.")},offset:function(){var t=this[0].getBoundingClientRect?this[0].getBoundingClientRect():{top:0,left:0};return{top:t.top+(e.pageYOffset||document.scrollTop||0)-(document.clientTop||0),left:t.left+(e.pageXOffset||document.scrollLeft||0)-(document.clientLeft||0)}},position:function(){function e(){for(var e=this.offsetParent||document;e&&"html"===!e.nodeType.toLowerCase&&"static"===e.style.position;)e=e.offsetParent;return e||document}var t=this[0],e=e.apply(t),a=this.offset(),n=/^(?:body|html)$/i.test(e.nodeName)?{top:0,left:0}:r(e).offset();return a.top-=parseFloat(t.style.marginTop)||0,a.left-=parseFloat(t.style.marginLeft)||0,e.style&&(n.top+=parseFloat(e.style.borderTopWidth)||0,n.left+=parseFloat(e.style.borderLeftWidth)||0),{top:a.top-n.top,left:a.left-n.left}}};var a={};r.expando="velocity"+(new Date).getTime(),r.uuid=0;for(var n={},o=n.hasOwnProperty,i=n.toString,s="Boolean Number String Function Array Date RegExp Object Error".split(" "),l=0;l<s.length;l++)n["[object "+s[l]+"]"]=s[l].toLowerCase();r.fn.init.prototype=r.fn,e.Velocity={Utilities:r}}}(window),function(e){"object"==typeof module&&"object"==typeof module.exports?module.exports=e():"function"==typeof define&&define.amd?define(e):e()}(function(){return function(e,t,r,a){function n(e){for(var t=-1,r=e?e.length:0,a=[];++t<r;){var n=e[t];n&&a.push(n)}return a}function o(e){return m.isWrapped(e)?e=[].slice.call(e):m.isNode(e)&&(e=[e]),e}function i(e){var t=f.data(e,"velocity");return null===t?a:t}function s(e){return function(t){return Math.round(t*e)*(1/e)}}function l(e,r,a,n){function o(e,t){return 1-3*t+3*e}function i(e,t){return 3*t-6*e}function s(e){return 3*e}function l(e,t,r){return((o(t,r)*e+i(t,r))*e+s(t))*e}function u(e,t,r){return 3*o(t,r)*e*e+2*i(t,r)*e+s(t)}function c(t,r){for(var n=0;m>n;++n){var o=u(r,e,a);if(0===o)return r;var i=l(r,e,a)-t;r-=i/o}return r}function p(){for(var t=0;b>t;++t)w[t]=l(t*x,e,a)}function f(t,r,n){var o,i,s=0;do i=r+(n-r)/2,o=l(i,e,a)-t,o>0?n=i:r=i;while(Math.abs(o)>h&&++s<v);return i}function d(t){for(var r=0,n=1,o=b-1;n!=o&&w[n]<=t;++n)r+=x;--n;var i=(t-w[n])/(w[n+1]-w[n]),s=r+i*x,l=u(s,e,a);return l>=y?c(t,s):0==l?s:f(t,r,r+x)}function g(){V=!0,(e!=r||a!=n)&&p()}var m=4,y=.001,h=1e-7,v=10,b=11,x=1/(b-1),S="Float32Array"in t;if(4!==arguments.length)return!1;for(var P=0;4>P;++P)if("number"!=typeof arguments[P]||isNaN(arguments[P])||!isFinite(arguments[P]))return!1;e=Math.min(e,1),a=Math.min(a,1),e=Math.max(e,0),a=Math.max(a,0);var w=S?new Float32Array(b):new Array(b),V=!1,C=function(t){return V||g(),e===r&&a===n?t:0===t?0:1===t?1:l(d(t),r,n)};C.getControlPoints=function(){return[{x:e,y:r},{x:a,y:n}]};var T="generateBezier("+[e,r,a,n]+")";return C.toString=function(){return T},C}function u(e,t){var r=e;return m.isString(e)?b.Easings[e]||(r=!1):r=m.isArray(e)&&1===e.length?s.apply(null,e):m.isArray(e)&&2===e.length?x.apply(null,e.concat([t])):m.isArray(e)&&4===e.length?l.apply(null,e):!1,r===!1&&(r=b.Easings[b.defaults.easing]?b.defaults.easing:v),r}function c(e){if(e){var t=(new Date).getTime(),r=b.State.calls.length;r>1e4&&(b.State.calls=n(b.State.calls));for(var o=0;r>o;o++)if(b.State.calls[o]){var s=b.State.calls[o],l=s[0],u=s[2],d=s[3],g=!!d,y=null;d||(d=b.State.calls[o][3]=t-16);for(var h=Math.min((t-d)/u.duration,1),v=0,x=l.length;x>v;v++){var P=l[v],V=P.element;if(i(V)){var C=!1;if(u.display!==a&&null!==u.display&&"none"!==u.display){if("flex"===u.display){var T=["-webkit-box","-moz-box","-ms-flexbox","-webkit-flex"];f.each(T,function(e,t){S.setPropertyValue(V,"display",t)})}S.setPropertyValue(V,"display",u.display)}u.visibility!==a&&"hidden"!==u.visibility&&S.setPropertyValue(V,"visibility",u.visibility);for(var k in P)if("element"!==k){var A,F=P[k],E=m.isString(F.easing)?b.Easings[F.easing]:F.easing;if(1===h)A=F.endValue;else{var j=F.endValue-F.startValue;if(A=F.startValue+j*E(h,u,j),!g&&A===F.currentValue)continue}if(F.currentValue=A,"tween"===k)y=A;else{if(S.Hooks.registered[k]){var H=S.Hooks.getRoot(k),N=i(V).rootPropertyValueCache[H];N&&(F.rootPropertyValue=N)}var L=S.setPropertyValue(V,k,F.currentValue+(0===parseFloat(A)?"":F.unitType),F.rootPropertyValue,F.scrollData);S.Hooks.registered[k]&&(i(V).rootPropertyValueCache[H]=S.Normalizations.registered[H]?S.Normalizations.registered[H]("extract",null,L[1]):L[1]),"transform"===L[0]&&(C=!0)}}u.mobileHA&&i(V).transformCache.translate3d===a&&(i(V).transformCache.translate3d="(0px, 0px, 0px)",C=!0),C&&S.flushTransformCache(V)}}u.display!==a&&"none"!==u.display&&(b.State.calls[o][2].display=!1),u.visibility!==a&&"hidden"!==u.visibility&&(b.State.calls[o][2].visibility=!1),u.progress&&u.progress.call(s[1],s[1],h,Math.max(0,d+u.duration-t),d,y),1===h&&p(o)}}b.State.isTicking&&w(c)}function p(e,t){if(!b.State.calls[e])return!1;for(var r=b.State.calls[e][0],n=b.State.calls[e][1],o=b.State.calls[e][2],s=b.State.calls[e][4],l=!1,u=0,c=r.length;c>u;u++){var p=r[u].element;if(t||o.loop||("none"===o.display&&S.setPropertyValue(p,"display",o.display),"hidden"===o.visibility&&S.setPropertyValue(p,"visibility",o.visibility)),o.loop!==!0&&(f.queue(p)[1]===a||!/\.velocityQueueEntryFlag/i.test(f.queue(p)[1]))&&i(p)){i(p).isAnimating=!1,i(p).rootPropertyValueCache={};var d=!1;f.each(S.Lists.transforms3D,function(e,t){var r=/^scale/.test(t)?1:0,n=i(p).transformCache[t];i(p).transformCache[t]!==a&&new RegExp("^\\("+r+"[^.]").test(n)&&(d=!0,delete i(p).transformCache[t])}),o.mobileHA&&(d=!0,delete i(p).transformCache.translate3d),d&&S.flushTransformCache(p),S.Values.removeClass(p,"velocity-animating")}if(!t&&o.complete&&!o.loop&&u===c-1)try{o.complete.call(n,n)}catch(g){setTimeout(function(){throw g},1)}s&&o.loop!==!0&&s(n),i(p)&&o.loop===!0&&!t&&(f.each(i(p).tweensContainer,function(e,t){/^rotate/.test(e)&&360===parseFloat(t.endValue)&&(t.endValue=0,t.startValue=360),/^backgroundPosition/.test(e)&&100===parseFloat(t.endValue)&&"%"===t.unitType&&(t.endValue=0,t.startValue=100)}),b(p,"reverse",{loop:!0,delay:o.delay})),o.queue!==!1&&f.dequeue(p,o.queue)}b.State.calls[e]=!1;for(var m=0,y=b.State.calls.length;y>m;m++)if(b.State.calls[m]!==!1){l=!0;break}l===!1&&(b.State.isTicking=!1,delete b.State.calls,b.State.calls=[])}var f,d=function(){if(r.documentMode)return r.documentMode;for(var e=7;e>4;e--){var t=r.createElement("div");if(t.innerHTML="<!--[if IE "+e+"]><span></span><![endif]-->",t.getElementsByTagName("span").length)return t=null,e}return a}(),g=function(){var e=0;return t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||function(t){var r,a=(new Date).getTime();return r=Math.max(0,16-(a-e)),e=a+r,setTimeout(function(){t(a+r)},r)}}(),m={isString:function(e){return"string"==typeof e},isArray:Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)},isFunction:function(e){return"[object Function]"===Object.prototype.toString.call(e)},isNode:function(e){return e&&e.nodeType},isNodeList:function(e){return"object"==typeof e&&/^\[object (HTMLCollection|NodeList|Object)\]$/.test(Object.prototype.toString.call(e))&&e.length!==a&&(0===e.length||"object"==typeof e[0]&&e[0].nodeType>0)},isWrapped:function(e){return e&&(e.jquery||t.Zepto&&t.Zepto.zepto.isZ(e))},isSVG:function(e){return t.SVGElement&&e instanceof t.SVGElement},isEmptyObject:function(e){for(var t in e)return!1;return!0}},y=!1;if(e.fn&&e.fn.jquery?(f=e,y=!0):f=t.Velocity.Utilities,8>=d&&!y)throw new Error("Velocity: IE8 and below require jQuery to be loaded before Velocity.");if(7>=d)return void(jQuery.fn.velocity=jQuery.fn.animate);var h=400,v="swing",b={State:{isMobile:/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),isAndroid:/Android/i.test(navigator.userAgent),isGingerbread:/Android 2\.3\.[3-7]/i.test(navigator.userAgent),isChrome:t.chrome,isFirefox:/Firefox/i.test(navigator.userAgent),prefixElement:r.createElement("div"),prefixMatches:{},scrollAnchor:null,scrollPropertyLeft:null,scrollPropertyTop:null,isTicking:!1,calls:[]},CSS:{},Utilities:f,Redirects:{},Easings:{},Promise:t.Promise,defaults:{queue:"",duration:h,easing:v,begin:a,complete:a,progress:a,display:a,visibility:a,loop:!1,delay:!1,mobileHA:!0,_cacheValues:!0},init:function(e){f.data(e,"velocity",{isSVG:m.isSVG(e),isAnimating:!1,computedStyle:null,tweensContainer:null,rootPropertyValueCache:{},transformCache:{}})},hook:null,mock:!1,version:{major:1,minor:2,patch:2},debug:!1};t.pageYOffset!==a?(b.State.scrollAnchor=t,b.State.scrollPropertyLeft="pageXOffset",b.State.scrollPropertyTop="pageYOffset"):(b.State.scrollAnchor=r.documentElement||r.body.parentNode||r.body,b.State.scrollPropertyLeft="scrollLeft",b.State.scrollPropertyTop="scrollTop");var x=function(){function e(e){return-e.tension*e.x-e.friction*e.v}function t(t,r,a){var n={x:t.x+a.dx*r,v:t.v+a.dv*r,tension:t.tension,friction:t.friction};return{dx:n.v,dv:e(n)}}function r(r,a){var n={dx:r.v,dv:e(r)},o=t(r,.5*a,n),i=t(r,.5*a,o),s=t(r,a,i),l=1/6*(n.dx+2*(o.dx+i.dx)+s.dx),u=1/6*(n.dv+2*(o.dv+i.dv)+s.dv);return r.x=r.x+l*a,r.v=r.v+u*a,r}return function a(e,t,n){var o,i,s,l={x:-1,v:0,tension:null,friction:null},u=[0],c=0,p=1e-4,f=.016;for(e=parseFloat(e)||500,t=parseFloat(t)||20,n=n||null,l.tension=e,l.friction=t,o=null!==n,o?(c=a(e,t),i=c/n*f):i=f;s=r(s||l,i),u.push(1+s.x),c+=16,Math.abs(s.x)>p&&Math.abs(s.v)>p;);return o?function(e){return u[e*(u.length-1)|0]}:c}}();b.Easings={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},spring:function(e){return 1-Math.cos(4.5*e*Math.PI)*Math.exp(6*-e)}},f.each([["ease",[.25,.1,.25,1]],["ease-in",[.42,0,1,1]],["ease-out",[0,0,.58,1]],["ease-in-out",[.42,0,.58,1]],["easeInSine",[.47,0,.745,.715]],["easeOutSine",[.39,.575,.565,1]],["easeInOutSine",[.445,.05,.55,.95]],["easeInQuad",[.55,.085,.68,.53]],["easeOutQuad",[.25,.46,.45,.94]],["easeInOutQuad",[.455,.03,.515,.955]],["easeInCubic",[.55,.055,.675,.19]],["easeOutCubic",[.215,.61,.355,1]],["easeInOutCubic",[.645,.045,.355,1]],["easeInQuart",[.895,.03,.685,.22]],["easeOutQuart",[.165,.84,.44,1]],["easeInOutQuart",[.77,0,.175,1]],["easeInQuint",[.755,.05,.855,.06]],["easeOutQuint",[.23,1,.32,1]],["easeInOutQuint",[.86,0,.07,1]],["easeInExpo",[.95,.05,.795,.035]],["easeOutExpo",[.19,1,.22,1]],["easeInOutExpo",[1,0,0,1]],["easeInCirc",[.6,.04,.98,.335]],["easeOutCirc",[.075,.82,.165,1]],["easeInOutCirc",[.785,.135,.15,.86]]],function(e,t){b.Easings[t[0]]=l.apply(null,t[1])});var S=b.CSS={RegEx:{isHex:/^#([A-f\d]{3}){1,2}$/i,valueUnwrap:/^[A-z]+\((.*)\)$/i,wrappedValueAlreadyExtracted:/[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,valueSplit:/([A-z]+\(.+\))|(([A-z0-9#-.]+?)(?=\s|$))/gi},Lists:{colors:["fill","stroke","stopColor","color","backgroundColor","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","outlineColor"],transformsBase:["translateX","translateY","scale","scaleX","scaleY","skewX","skewY","rotateZ"],transforms3D:["transformPerspective","translateZ","scaleZ","rotateX","rotateY"]},Hooks:{templates:{textShadow:["Color X Y Blur","black 0px 0px 0px"],boxShadow:["Color X Y Blur Spread","black 0px 0px 0px 0px"],clip:["Top Right Bottom Left","0px 0px 0px 0px"],backgroundPosition:["X Y","0% 0%"],transformOrigin:["X Y Z","50% 50% 0px"],perspectiveOrigin:["X Y","50% 50%"]},registered:{},register:function(){for(var e=0;e<S.Lists.colors.length;e++){var t="color"===S.Lists.colors[e]?"0 0 0 1":"255 255 255 1";S.Hooks.templates[S.Lists.colors[e]]=["Red Green Blue Alpha",t]}var r,a,n;if(d)for(r in S.Hooks.templates){a=S.Hooks.templates[r],n=a[0].split(" ");var o=a[1].match(S.RegEx.valueSplit);"Color"===n[0]&&(n.push(n.shift()),o.push(o.shift()),S.Hooks.templates[r]=[n.join(" "),o.join(" ")])}for(r in S.Hooks.templates){a=S.Hooks.templates[r],n=a[0].split(" ");for(var e in n){var i=r+n[e],s=e;S.Hooks.registered[i]=[r,s]}}},getRoot:function(e){var t=S.Hooks.registered[e];return t?t[0]:e},cleanRootPropertyValue:function(e,t){return S.RegEx.valueUnwrap.test(t)&&(t=t.match(S.RegEx.valueUnwrap)[1]),S.Values.isCSSNullValue(t)&&(t=S.Hooks.templates[e][1]),t},extractValue:function(e,t){var r=S.Hooks.registered[e];if(r){var a=r[0],n=r[1];return t=S.Hooks.cleanRootPropertyValue(a,t),t.toString().match(S.RegEx.valueSplit)[n]}return t},injectValue:function(e,t,r){var a=S.Hooks.registered[e];if(a){var n,o,i=a[0],s=a[1];return r=S.Hooks.cleanRootPropertyValue(i,r),n=r.toString().match(S.RegEx.valueSplit),n[s]=t,o=n.join(" ")}return r}},Normalizations:{registered:{clip:function(e,t,r){switch(e){case"name":return"clip";case"extract":var a;return S.RegEx.wrappedValueAlreadyExtracted.test(r)?a=r:(a=r.toString().match(S.RegEx.valueUnwrap),a=a?a[1].replace(/,(\s+)?/g," "):r),a;case"inject":return"rect("+r+")"}},blur:function(e,t,r){switch(e){case"name":return b.State.isFirefox?"filter":"-webkit-filter";case"extract":var a=parseFloat(r);if(!a&&0!==a){var n=r.toString().match(/blur\(([0-9]+[A-z]+)\)/i);a=n?n[1]:0}return a;case"inject":return parseFloat(r)?"blur("+r+")":"none"}},opacity:function(e,t,r){if(8>=d)switch(e){case"name":return"filter";case"extract":var a=r.toString().match(/alpha\(opacity=(.*)\)/i);return r=a?a[1]/100:1;case"inject":return t.style.zoom=1,parseFloat(r)>=1?"":"alpha(opacity="+parseInt(100*parseFloat(r),10)+")"}else switch(e){case"name":return"opacity";case"extract":return r;case"inject":return r}}},register:function(){9>=d||b.State.isGingerbread||(S.Lists.transformsBase=S.Lists.transformsBase.concat(S.Lists.transforms3D));for(var e=0;e<S.Lists.transformsBase.length;e++)!function(){var t=S.Lists.transformsBase[e];S.Normalizations.registered[t]=function(e,r,n){switch(e){case"name":return"transform";case"extract":return i(r)===a||i(r).transformCache[t]===a?/^scale/i.test(t)?1:0:i(r).transformCache[t].replace(/[()]/g,"");case"inject":var o=!1;switch(t.substr(0,t.length-1)){case"translate":o=!/(%|px|em|rem|vw|vh|\d)$/i.test(n);break;case"scal":case"scale":b.State.isAndroid&&i(r).transformCache[t]===a&&1>n&&(n=1),o=!/(\d)$/i.test(n);break;case"skew":o=!/(deg|\d)$/i.test(n);break;case"rotate":o=!/(deg|\d)$/i.test(n)}return o||(i(r).transformCache[t]="("+n+")"),i(r).transformCache[t]}}}();for(var e=0;e<S.Lists.colors.length;e++)!function(){var t=S.Lists.colors[e];S.Normalizations.registered[t]=function(e,r,n){switch(e){case"name":return t;case"extract":var o;if(S.RegEx.wrappedValueAlreadyExtracted.test(n))o=n;else{var i,s={black:"rgb(0, 0, 0)",blue:"rgb(0, 0, 255)",gray:"rgb(128, 128, 128)",green:"rgb(0, 128, 0)",red:"rgb(255, 0, 0)",white:"rgb(255, 255, 255)"};/^[A-z]+$/i.test(n)?i=s[n]!==a?s[n]:s.black:S.RegEx.isHex.test(n)?i="rgb("+S.Values.hexToRgb(n).join(" ")+")":/^rgba?\(/i.test(n)||(i=s.black),o=(i||n).toString().match(S.RegEx.valueUnwrap)[1].replace(/,(\s+)?/g," ")}return 8>=d||3!==o.split(" ").length||(o+=" 1"),o;case"inject":return 8>=d?4===n.split(" ").length&&(n=n.split(/\s+/).slice(0,3).join(" ")):3===n.split(" ").length&&(n+=" 1"),(8>=d?"rgb":"rgba")+"("+n.replace(/\s+/g,",").replace(/\.(\d)+(?=,)/g,"")+")"}}}()}},Names:{camelCase:function(e){return e.replace(/-(\w)/g,function(e,t){return t.toUpperCase()})},SVGAttribute:function(e){var t="width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2";return(d||b.State.isAndroid&&!b.State.isChrome)&&(t+="|transform"),new RegExp("^("+t+")$","i").test(e)},prefixCheck:function(e){if(b.State.prefixMatches[e])return[b.State.prefixMatches[e],!0];for(var t=["","Webkit","Moz","ms","O"],r=0,a=t.length;a>r;r++){var n;if(n=0===r?e:t[r]+e.replace(/^\w/,function(e){return e.toUpperCase()}),m.isString(b.State.prefixElement.style[n]))return b.State.prefixMatches[e]=n,[n,!0]}return[e,!1]}},Values:{hexToRgb:function(e){var t,r=/^#?([a-f\d])([a-f\d])([a-f\d])$/i,a=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;return e=e.replace(r,function(e,t,r,a){return t+t+r+r+a+a}),t=a.exec(e),t?[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]:[0,0,0]},isCSSNullValue:function(e){return 0==e||/^(none|auto|transparent|(rgba\(0, ?0, ?0, ?0\)))$/i.test(e)},getUnitType:function(e){return/^(rotate|skew)/i.test(e)?"deg":/(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(e)?"":"px"},getDisplayType:function(e){var t=e&&e.tagName.toString().toLowerCase();return/^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(t)?"inline":/^(li)$/i.test(t)?"list-item":/^(tr)$/i.test(t)?"table-row":/^(table)$/i.test(t)?"table":/^(tbody)$/i.test(t)?"table-row-group":"block"},addClass:function(e,t){e.classList?e.classList.add(t):e.className+=(e.className.length?" ":"")+t},removeClass:function(e,t){e.classList?e.classList.remove(t):e.className=e.className.toString().replace(new RegExp("(^|\\s)"+t.split(" ").join("|")+"(\\s|$)","gi")," ")}},getPropertyValue:function(e,r,n,o){function s(e,r){function n(){u&&S.setPropertyValue(e,"display","none")}var l=0;if(8>=d)l=f.css(e,r);else{var u=!1;if(/^(width|height)$/.test(r)&&0===S.getPropertyValue(e,"display")&&(u=!0,S.setPropertyValue(e,"display",S.Values.getDisplayType(e))),!o){if("height"===r&&"border-box"!==S.getPropertyValue(e,"boxSizing").toString().toLowerCase()){var c=e.offsetHeight-(parseFloat(S.getPropertyValue(e,"borderTopWidth"))||0)-(parseFloat(S.getPropertyValue(e,"borderBottomWidth"))||0)-(parseFloat(S.getPropertyValue(e,"paddingTop"))||0)-(parseFloat(S.getPropertyValue(e,"paddingBottom"))||0);return n(),c}if("width"===r&&"border-box"!==S.getPropertyValue(e,"boxSizing").toString().toLowerCase()){var p=e.offsetWidth-(parseFloat(S.getPropertyValue(e,"borderLeftWidth"))||0)-(parseFloat(S.getPropertyValue(e,"borderRightWidth"))||0)-(parseFloat(S.getPropertyValue(e,"paddingLeft"))||0)-(parseFloat(S.getPropertyValue(e,"paddingRight"))||0);return n(),p}}var g;g=i(e)===a?t.getComputedStyle(e,null):i(e).computedStyle?i(e).computedStyle:i(e).computedStyle=t.getComputedStyle(e,null),"borderColor"===r&&(r="borderTopColor"),l=9===d&&"filter"===r?g.getPropertyValue(r):g[r],(""===l||null===l)&&(l=e.style[r]),n()}if("auto"===l&&/^(top|right|bottom|left)$/i.test(r)){var m=s(e,"position");("fixed"===m||"absolute"===m&&/top|left/i.test(r))&&(l=f(e).position()[r]+"px")}return l}var l;if(S.Hooks.registered[r]){var u=r,c=S.Hooks.getRoot(u);n===a&&(n=S.getPropertyValue(e,S.Names.prefixCheck(c)[0])),S.Normalizations.registered[c]&&(n=S.Normalizations.registered[c]("extract",e,n)),l=S.Hooks.extractValue(u,n)}else if(S.Normalizations.registered[r]){var p,g;p=S.Normalizations.registered[r]("name",e),"transform"!==p&&(g=s(e,S.Names.prefixCheck(p)[0]),S.Values.isCSSNullValue(g)&&S.Hooks.templates[r]&&(g=S.Hooks.templates[r][1])),l=S.Normalizations.registered[r]("extract",e,g)}if(!/^[\d-]/.test(l))if(i(e)&&i(e).isSVG&&S.Names.SVGAttribute(r))if(/^(height|width)$/i.test(r))try{l=e.getBBox()[r]}catch(m){l=0}else l=e.getAttribute(r);else l=s(e,S.Names.prefixCheck(r)[0]);return S.Values.isCSSNullValue(l)&&(l=0),b.debug>=2&&console.log("Get "+r+": "+l),l},setPropertyValue:function(e,r,a,n,o){var s=r;if("scroll"===r)o.container?o.container["scroll"+o.direction]=a:"Left"===o.direction?t.scrollTo(a,o.alternateValue):t.scrollTo(o.alternateValue,a);else if(S.Normalizations.registered[r]&&"transform"===S.Normalizations.registered[r]("name",e))S.Normalizations.registered[r]("inject",e,a),s="transform",a=i(e).transformCache[r];else{if(S.Hooks.registered[r]){var l=r,u=S.Hooks.getRoot(r);n=n||S.getPropertyValue(e,u),a=S.Hooks.injectValue(l,a,n),r=u}if(S.Normalizations.registered[r]&&(a=S.Normalizations.registered[r]("inject",e,a),r=S.Normalizations.registered[r]("name",e)),s=S.Names.prefixCheck(r)[0],8>=d)try{e.style[s]=a}catch(c){b.debug&&console.log("Browser does not support ["+a+"] for ["+s+"]")}else i(e)&&i(e).isSVG&&S.Names.SVGAttribute(r)?e.setAttribute(r,a):e.style[s]=a;b.debug>=2&&console.log("Set "+r+" ("+s+"): "+a)}return[s,a]},flushTransformCache:function(e){function t(t){return parseFloat(S.getPropertyValue(e,t))}var r="";if((d||b.State.isAndroid&&!b.State.isChrome)&&i(e).isSVG){var a={translate:[t("translateX"),t("translateY")],skewX:[t("skewX")],skewY:[t("skewY")],scale:1!==t("scale")?[t("scale"),t("scale")]:[t("scaleX"),t("scaleY")],rotate:[t("rotateZ"),0,0]};f.each(i(e).transformCache,function(e){/^translate/i.test(e)?e="translate":/^scale/i.test(e)?e="scale":/^rotate/i.test(e)&&(e="rotate"),a[e]&&(r+=e+"("+a[e].join(" ")+") ",delete a[e])})}else{var n,o;f.each(i(e).transformCache,function(t){return n=i(e).transformCache[t],"transformPerspective"===t?(o=n,!0):(9===d&&"rotateZ"===t&&(t="rotate"),void(r+=t+n+" "))}),o&&(r="perspective"+o+" "+r)}S.setPropertyValue(e,"transform",r)}};S.Hooks.register(),S.Normalizations.register(),b.hook=function(e,t,r){var n=a;return e=o(e),f.each(e,function(e,o){if(i(o)===a&&b.init(o),r===a)n===a&&(n=b.CSS.getPropertyValue(o,t));else{var s=b.CSS.setPropertyValue(o,t,r);"transform"===s[0]&&b.CSS.flushTransformCache(o),n=s}}),n};var P=function(){function e(){return s?k.promise||null:l}function n(){function e(e){function p(e,t){var r=a,n=a,i=a;return m.isArray(e)?(r=e[0],!m.isArray(e[1])&&/^[\d-]/.test(e[1])||m.isFunction(e[1])||S.RegEx.isHex.test(e[1])?i=e[1]:(m.isString(e[1])&&!S.RegEx.isHex.test(e[1])||m.isArray(e[1]))&&(n=t?e[1]:u(e[1],s.duration),e[2]!==a&&(i=e[2]))):r=e,t||(n=n||s.easing),m.isFunction(r)&&(r=r.call(o,V,w)),m.isFunction(i)&&(i=i.call(o,V,w)),[r||0,n,i]}function d(e,t){var r,a;return a=(t||"0").toString().toLowerCase().replace(/[%A-z]+$/,function(e){return r=e,""}),r||(r=S.Values.getUnitType(e)),[a,r]}function h(){var e={myParent:o.parentNode||r.body,position:S.getPropertyValue(o,"position"),fontSize:S.getPropertyValue(o,"fontSize")},a=e.position===L.lastPosition&&e.myParent===L.lastParent,n=e.fontSize===L.lastFontSize;L.lastParent=e.myParent,L.lastPosition=e.position,L.lastFontSize=e.fontSize;var s=100,l={};if(n&&a)l.emToPx=L.lastEmToPx,l.percentToPxWidth=L.lastPercentToPxWidth,l.percentToPxHeight=L.lastPercentToPxHeight;else{var u=i(o).isSVG?r.createElementNS("http://www.w3.org/2000/svg","rect"):r.createElement("div");b.init(u),e.myParent.appendChild(u),f.each(["overflow","overflowX","overflowY"],function(e,t){b.CSS.setPropertyValue(u,t,"hidden")}),b.CSS.setPropertyValue(u,"position",e.position),b.CSS.setPropertyValue(u,"fontSize",e.fontSize),b.CSS.setPropertyValue(u,"boxSizing","content-box"),f.each(["minWidth","maxWidth","width","minHeight","maxHeight","height"],function(e,t){b.CSS.setPropertyValue(u,t,s+"%")}),b.CSS.setPropertyValue(u,"paddingLeft",s+"em"),l.percentToPxWidth=L.lastPercentToPxWidth=(parseFloat(S.getPropertyValue(u,"width",null,!0))||1)/s,l.percentToPxHeight=L.lastPercentToPxHeight=(parseFloat(S.getPropertyValue(u,"height",null,!0))||1)/s,l.emToPx=L.lastEmToPx=(parseFloat(S.getPropertyValue(u,"paddingLeft"))||1)/s,e.myParent.removeChild(u)}return null===L.remToPx&&(L.remToPx=parseFloat(S.getPropertyValue(r.body,"fontSize"))||16),null===L.vwToPx&&(L.vwToPx=parseFloat(t.innerWidth)/100,L.vhToPx=parseFloat(t.innerHeight)/100),l.remToPx=L.remToPx,l.vwToPx=L.vwToPx,l.vhToPx=L.vhToPx,b.debug>=1&&console.log("Unit ratios: "+JSON.stringify(l),o),l}if(s.begin&&0===V)try{s.begin.call(g,g)}catch(x){setTimeout(function(){throw x},1)}if("scroll"===A){var P,C,T,F=/^x$/i.test(s.axis)?"Left":"Top",E=parseFloat(s.offset)||0;s.container?m.isWrapped(s.container)||m.isNode(s.container)?(s.container=s.container[0]||s.container,P=s.container["scroll"+F],T=P+f(o).position()[F.toLowerCase()]+E):s.container=null:(P=b.State.scrollAnchor[b.State["scrollProperty"+F]],C=b.State.scrollAnchor[b.State["scrollProperty"+("Left"===F?"Top":"Left")]],T=f(o).offset()[F.toLowerCase()]+E),l={scroll:{rootPropertyValue:!1,startValue:P,currentValue:P,endValue:T,unitType:"",easing:s.easing,scrollData:{container:s.container,direction:F,alternateValue:C}},element:o},b.debug&&console.log("tweensContainer (scroll): ",l.scroll,o)}else if("reverse"===A){if(!i(o).tweensContainer)return void f.dequeue(o,s.queue);"none"===i(o).opts.display&&(i(o).opts.display="auto"),"hidden"===i(o).opts.visibility&&(i(o).opts.visibility="visible"),i(o).opts.loop=!1,i(o).opts.begin=null,i(o).opts.complete=null,v.easing||delete s.easing,v.duration||delete s.duration,s=f.extend({},i(o).opts,s);var j=f.extend(!0,{},i(o).tweensContainer);for(var H in j)if("element"!==H){var N=j[H].startValue;j[H].startValue=j[H].currentValue=j[H].endValue,j[H].endValue=N,m.isEmptyObject(v)||(j[H].easing=s.easing),b.debug&&console.log("reverse tweensContainer ("+H+"): "+JSON.stringify(j[H]),o)}l=j}else if("start"===A){var j;i(o).tweensContainer&&i(o).isAnimating===!0&&(j=i(o).tweensContainer),f.each(y,function(e,t){if(RegExp("^"+S.Lists.colors.join("$|^")+"$").test(e)){var r=p(t,!0),n=r[0],o=r[1],i=r[2];if(S.RegEx.isHex.test(n)){for(var s=["Red","Green","Blue"],l=S.Values.hexToRgb(n),u=i?S.Values.hexToRgb(i):a,c=0;c<s.length;c++){var f=[l[c]];o&&f.push(o),u!==a&&f.push(u[c]),y[e+s[c]]=f}delete y[e]}}});for(var O in y){var z=p(y[O]),q=z[0],$=z[1],M=z[2];O=S.Names.camelCase(O);var I=S.Hooks.getRoot(O),B=!1;if(i(o).isSVG||"tween"===I||S.Names.prefixCheck(I)[1]!==!1||S.Normalizations.registered[I]!==a){(s.display!==a&&null!==s.display&&"none"!==s.display||s.visibility!==a&&"hidden"!==s.visibility)&&/opacity|filter/.test(O)&&!M&&0!==q&&(M=0),s._cacheValues&&j&&j[O]?(M===a&&(M=j[O].endValue+j[O].unitType),B=i(o).rootPropertyValueCache[I]):S.Hooks.registered[O]?M===a?(B=S.getPropertyValue(o,I),M=S.getPropertyValue(o,O,B)):B=S.Hooks.templates[I][1]:M===a&&(M=S.getPropertyValue(o,O));var W,G,D,X=!1;if(W=d(O,M),M=W[0],D=W[1],W=d(O,q),q=W[0].replace(/^([+-\/*])=/,function(e,t){return X=t,""}),G=W[1],M=parseFloat(M)||0,q=parseFloat(q)||0,"%"===G&&(/^(fontSize|lineHeight)$/.test(O)?(q/=100,G="em"):/^scale/.test(O)?(q/=100,G=""):/(Red|Green|Blue)$/i.test(O)&&(q=q/100*255,G="")),/[\/*]/.test(X))G=D;else if(D!==G&&0!==M)if(0===q)G=D;else{n=n||h();var Y=/margin|padding|left|right|width|text|word|letter/i.test(O)||/X$/.test(O)||"x"===O?"x":"y";switch(D){case"%":M*="x"===Y?n.percentToPxWidth:n.percentToPxHeight;break;case"px":break;default:M*=n[D+"ToPx"]}switch(G){case"%":M*=1/("x"===Y?n.percentToPxWidth:n.percentToPxHeight);break;case"px":break;default:M*=1/n[G+"ToPx"]}}switch(X){case"+":q=M+q;break;case"-":q=M-q;break;case"*":q=M*q;break;case"/":q=M/q}l[O]={rootPropertyValue:B,startValue:M,currentValue:M,endValue:q,unitType:G,easing:$},b.debug&&console.log("tweensContainer ("+O+"): "+JSON.stringify(l[O]),o)}else b.debug&&console.log("Skipping ["+I+"] due to a lack of browser support.")}l.element=o}l.element&&(S.Values.addClass(o,"velocity-animating"),R.push(l),""===s.queue&&(i(o).tweensContainer=l,i(o).opts=s),i(o).isAnimating=!0,V===w-1?(b.State.calls.push([R,g,s,null,k.resolver]),b.State.isTicking===!1&&(b.State.isTicking=!0,c())):V++)}var n,o=this,s=f.extend({},b.defaults,v),l={};switch(i(o)===a&&b.init(o),parseFloat(s.delay)&&s.queue!==!1&&f.queue(o,s.queue,function(e){b.velocityQueueEntryFlag=!0,i(o).delayTimer={setTimeout:setTimeout(e,parseFloat(s.delay)),next:e}}),s.duration.toString().toLowerCase()){case"fast":s.duration=200;break;case"normal":s.duration=h;break;case"slow":s.duration=600;break;default:s.duration=parseFloat(s.duration)||1}b.mock!==!1&&(b.mock===!0?s.duration=s.delay=1:(s.duration*=parseFloat(b.mock)||1,s.delay*=parseFloat(b.mock)||1)),s.easing=u(s.easing,s.duration),s.begin&&!m.isFunction(s.begin)&&(s.begin=null),s.progress&&!m.isFunction(s.progress)&&(s.progress=null),s.complete&&!m.isFunction(s.complete)&&(s.complete=null),s.display!==a&&null!==s.display&&(s.display=s.display.toString().toLowerCase(),"auto"===s.display&&(s.display=b.CSS.Values.getDisplayType(o))),s.visibility!==a&&null!==s.visibility&&(s.visibility=s.visibility.toString().toLowerCase()),s.mobileHA=s.mobileHA&&b.State.isMobile&&!b.State.isGingerbread,s.queue===!1?s.delay?setTimeout(e,s.delay):e():f.queue(o,s.queue,function(t,r){return r===!0?(k.promise&&k.resolver(g),!0):(b.velocityQueueEntryFlag=!0,void e(t))}),""!==s.queue&&"fx"!==s.queue||"inprogress"===f.queue(o)[0]||f.dequeue(o)}var s,l,d,g,y,v,x=arguments[0]&&(arguments[0].p||f.isPlainObject(arguments[0].properties)&&!arguments[0].properties.names||m.isString(arguments[0].properties));if(m.isWrapped(this)?(s=!1,d=0,g=this,l=this):(s=!0,d=1,g=x?arguments[0].elements||arguments[0].e:arguments[0]),g=o(g)){x?(y=arguments[0].properties||arguments[0].p,v=arguments[0].options||arguments[0].o):(y=arguments[d],v=arguments[d+1]);var w=g.length,V=0;if(!/^(stop|finish)$/i.test(y)&&!f.isPlainObject(v)){var C=d+1;v={};for(var T=C;T<arguments.length;T++)m.isArray(arguments[T])||!/^(fast|normal|slow)$/i.test(arguments[T])&&!/^\d/.test(arguments[T])?m.isString(arguments[T])||m.isArray(arguments[T])?v.easing=arguments[T]:m.isFunction(arguments[T])&&(v.complete=arguments[T]):v.duration=arguments[T]}var k={promise:null,resolver:null,rejecter:null};s&&b.Promise&&(k.promise=new b.Promise(function(e,t){k.resolver=e,k.rejecter=t}));var A;switch(y){case"scroll":A="scroll";break;case"reverse":A="reverse";break;case"finish":case"stop":f.each(g,function(e,t){i(t)&&i(t).delayTimer&&(clearTimeout(i(t).delayTimer.setTimeout),i(t).delayTimer.next&&i(t).delayTimer.next(),delete i(t).delayTimer)});var F=[];return f.each(b.State.calls,function(e,t){t&&f.each(t[1],function(r,n){var o=v===a?"":v;return o===!0||t[2].queue===o||v===a&&t[2].queue===!1?void f.each(g,function(r,a){a===n&&((v===!0||m.isString(v))&&(f.each(f.queue(a,m.isString(v)?v:""),function(e,t){m.isFunction(t)&&t(null,!0)}),f.queue(a,m.isString(v)?v:"",[])),"stop"===y?(i(a)&&i(a).tweensContainer&&o!==!1&&f.each(i(a).tweensContainer,function(e,t){
t.endValue=t.currentValue}),F.push(e)):"finish"===y&&(t[2].duration=1))}):!0})}),"stop"===y&&(f.each(F,function(e,t){p(t,!0)}),k.promise&&k.resolver(g)),e();default:if(!f.isPlainObject(y)||m.isEmptyObject(y)){if(m.isString(y)&&b.Redirects[y]){var E=f.extend({},v),j=E.duration,H=E.delay||0;return E.backwards===!0&&(g=f.extend(!0,[],g).reverse()),f.each(g,function(e,t){parseFloat(E.stagger)?E.delay=H+parseFloat(E.stagger)*e:m.isFunction(E.stagger)&&(E.delay=H+E.stagger.call(t,e,w)),E.drag&&(E.duration=parseFloat(j)||(/^(callout|transition)/.test(y)?1e3:h),E.duration=Math.max(E.duration*(E.backwards?1-e/w:(e+1)/w),.75*E.duration,200)),b.Redirects[y].call(t,t,E||{},e,w,g,k.promise?k:a)}),e()}var N="Velocity: First argument ("+y+") was not a property map, a known action, or a registered redirect. Aborting.";return k.promise?k.rejecter(new Error(N)):console.log(N),e()}A="start"}var L={lastParent:null,lastPosition:null,lastFontSize:null,lastPercentToPxWidth:null,lastPercentToPxHeight:null,lastEmToPx:null,remToPx:null,vwToPx:null,vhToPx:null},R=[];f.each(g,function(e,t){m.isNode(t)&&n.call(t)});var O,E=f.extend({},b.defaults,v);if(E.loop=parseInt(E.loop),O=2*E.loop-1,E.loop)for(var z=0;O>z;z++){var q={delay:E.delay,progress:E.progress};z===O-1&&(q.display=E.display,q.visibility=E.visibility,q.complete=E.complete),P(g,"reverse",q)}return e()}};b=f.extend(P,b),b.animate=P;var w=t.requestAnimationFrame||g;return b.State.isMobile||r.hidden===a||r.addEventListener("visibilitychange",function(){r.hidden?(w=function(e){return setTimeout(function(){e(!0)},16)},c()):w=t.requestAnimationFrame||g}),e.Velocity=b,e!==t&&(e.fn.velocity=P,e.fn.velocity.defaults=b.defaults),f.each(["Down","Up"],function(e,t){b.Redirects["slide"+t]=function(e,r,n,o,i,s){var l=f.extend({},r),u=l.begin,c=l.complete,p={height:"",marginTop:"",marginBottom:"",paddingTop:"",paddingBottom:""},d={};l.display===a&&(l.display="Down"===t?"inline"===b.CSS.Values.getDisplayType(e)?"inline-block":"block":"none"),l.begin=function(){u&&u.call(i,i);for(var r in p){d[r]=e.style[r];var a=b.CSS.getPropertyValue(e,r);p[r]="Down"===t?[a,0]:[0,a]}d.overflow=e.style.overflow,e.style.overflow="hidden"},l.complete=function(){for(var t in d)e.style[t]=d[t];c&&c.call(i,i),s&&s.resolver(i)},b(e,p,l)}}),f.each(["In","Out"],function(e,t){b.Redirects["fade"+t]=function(e,r,n,o,i,s){var l=f.extend({},r),u={opacity:"In"===t?1:0},c=l.complete;l.complete=n!==o-1?l.begin=null:function(){c&&c.call(i,i),s&&s.resolver(i)},l.display===a&&(l.display="In"===t?"auto":"none"),b(this,u,l)}}),b}(window.jQuery||window.Zepto||window,window,document)});
!function(t,e,n){"use strict";function r(t){return function(){var e,n=arguments[0];for(e="["+(t?t+":":"")+n+"] http://errors.angularjs.org/1.4.0/"+(t?t+"/":"")+n,n=1;n<arguments.length;n++){e=e+(1==n?"?":"&")+"p"+(n-1)+"=";var r,i=encodeURIComponent;r=arguments[n],r="function"==typeof r?r.toString().replace(/ \{[\s\S]*$/,""):"undefined"==typeof r?"undefined":"string"!=typeof r?JSON.stringify(r):r,e+=i(r)}return Error(e)}}function i(t){if(null==t||A(t))return!1;var e="length"in Object(t)&&t.length;return t.nodeType===fr&&e?!0:x(t)||nr(t)||0===e||"number"==typeof e&&e>0&&e-1 in t}function o(t,e,n){var r,a;if(t)if(E(t))for(r in t)"prototype"==r||"length"==r||"name"==r||t.hasOwnProperty&&!t.hasOwnProperty(r)||e.call(n,t[r],r,t);else if(nr(t)||i(t)){var s="object"!=typeof t;for(r=0,a=t.length;a>r;r++)(s||r in t)&&e.call(n,t[r],r,t)}else if(t.forEach&&t.forEach!==o)t.forEach(e,n,t);else if(w(t))for(r in t)e.call(n,t[r],r,t);else if("function"==typeof t.hasOwnProperty)for(r in t)t.hasOwnProperty(r)&&e.call(n,t[r],r,t);else for(r in t)zn.call(t,r)&&e.call(n,t[r],r,t);return t}function a(t,e,n){for(var r=Object.keys(t).sort(),i=0;i<r.length;i++)e.call(n,t[r[i]],r[i]);return r}function s(t){return function(e,n){t(n,e)}}function u(){return++tr}function c(t,e){e?t.$$hashKey=e:delete t.$$hashKey}function l(t,e,n){for(var r=t.$$hashKey,i=0,o=e.length;o>i;++i){var a=e[i];if(b(a)||E(a))for(var s=Object.keys(a),u=0,f=s.length;f>u;u++){var h=s[u],p=a[h];n&&b(p)?(b(t[h])||(t[h]=nr(p)?[]:{}),l(t[h],[p],!0)):t[h]=p}}return c(t,r),t}function f(t){return l(t,Gn.call(arguments,1),!1)}function h(t){return l(t,Gn.call(arguments,1),!0)}function p(t){return parseInt(t,10)}function $(t,e){return f(Object.create(t),e)}function d(){}function m(t){return t}function v(t){return function(){return t}}function g(t){return"undefined"==typeof t}function y(t){return"undefined"!=typeof t}function b(t){return null!==t&&"object"==typeof t}function w(t){return null!==t&&"object"==typeof t&&!Zn(t)}function x(t){return"string"==typeof t}function S(t){return"number"==typeof t}function C(t){return"[object Date]"===Kn.call(t)}function E(t){return"function"==typeof t}function k(t){return"[object RegExp]"===Kn.call(t)}function A(t){return t&&t.window===t}function O(t){return t&&t.$evalAsync&&t.$watch}function M(t){return"boolean"==typeof t}function T(t){return!(!t||!(t.nodeName||t.prop&&t.attr&&t.find))}function V(t){var e={};t=t.split(",");var n;for(n=0;n<t.length;n++)e[t[n]]=!0;return e}function N(t){return Hn(t.nodeName||t[0]&&t[0].nodeName)}function j(t,e){var n=t.indexOf(e);return n>=0&&t.splice(n,1),n}function P(t,e,n,r){function i(t,e,n,r,i){var o=P(e,null,r,i);b(e)&&(r.push(e),i.push(o)),n[t]=o}if(A(t)||O(t))throw Xn("cpws");if(rr.test(Kn.call(e)))throw Xn("cpta");if(e){if(t===e)throw Xn("cpi");if(n=n||[],r=r||[],b(t)){var a=n.indexOf(t);if(-1!==a)return r[a];n.push(t),r.push(e)}var s;if(nr(t))for(a=e.length=0;a<t.length;a++)s=P(t[a],null,n,r),b(t[a])&&(n.push(t[a]),r.push(s)),e.push(s);else{if(a=e.$$hashKey,nr(e)?e.length=0:o(e,function(t,n){delete e[n]}),w(t))for(s in t)i(s,t[s],e,n,r);else if(t&&"function"==typeof t.hasOwnProperty)for(s in t)t.hasOwnProperty(s)&&i(s,t[s],e,n,r);else for(s in t)zn.call(t,s)&&i(s,t[s],e,n,r);c(e,a)}}else(e=t)&&(nr(t)?e=P(t,[],n,r):rr.test(Kn.call(t))?e=new t.constructor(t):C(t)?e=new Date(t.getTime()):k(t)?(e=new RegExp(t.source,t.toString().match(/[^\/]*$/)[0]),e.lastIndex=t.lastIndex):b(t)&&(s=Object.create(Zn(t)),e=P(t,s,n,r)));return e}function D(t,e){if(nr(t)){e=e||[];for(var n=0,r=t.length;r>n;n++)e[n]=t[n]}else if(b(t))for(n in e=e||{},t)("$"!==n.charAt(0)||"$"!==n.charAt(1))&&(e[n]=t[n]);return e||t}function I(t,e){if(t===e)return!0;if(null===t||null===e)return!1;if(t!==t&&e!==e)return!0;var r,i=typeof t;if(i==typeof e&&"object"==i){if(!nr(t)){if(C(t))return C(e)?I(t.getTime(),e.getTime()):!1;if(k(t))return k(e)?t.toString()==e.toString():!1;if(O(t)||O(e)||A(t)||A(e)||nr(e)||C(e)||k(e))return!1;i=ut();for(r in t)if("$"!==r.charAt(0)&&!E(t[r])){if(!I(t[r],e[r]))return!1;i[r]=!0}for(r in e)if(!(r in i||"$"===r.charAt(0)||e[r]===n||E(e[r])))return!1;return!0}if(!nr(e))return!1;if((i=t.length)==e.length){for(r=0;i>r;r++)if(!I(t[r],e[r]))return!1;return!0}}return!1}function R(t,e,n){return t.concat(Gn.call(e,n))}function q(t,e){var n=2<arguments.length?Gn.call(arguments,2):[];return!E(e)||e instanceof RegExp?e:n.length?function(){return arguments.length?e.apply(t,R(n,arguments,0)):e.apply(t,n)}:function(){return arguments.length?e.apply(t,arguments):e.call(t)}}function U(t,r){var i=r;return"string"==typeof t&&"$"===t.charAt(0)&&"$"===t.charAt(1)?i=n:A(r)?i="$WINDOW":r&&e===r?i="$DOCUMENT":O(r)&&(i="$SCOPE"),i}function F(t,e){return"undefined"==typeof t?n:(S(e)||(e=e?2:null),JSON.stringify(t,U,e))}function _(t){return x(t)?JSON.parse(t):t}function B(t,e){var n=Date.parse("Jan 01, 1970 00:00:00 "+t)/6e4;return isNaN(n)?e:n}function L(t,e,n){n=n?-1:1;var r=B(e,t.getTimezoneOffset());return e=t,t=n*(r-t.getTimezoneOffset()),e=new Date(e.getTime()),e.setMinutes(e.getMinutes()+t),e}function H(t){t=Fn(t).clone();try{t.empty()}catch(e){}var n=Fn("<div>").append(t).html();try{return t[0].nodeType===hr?Hn(n):n.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/,function(t,e){return"<"+Hn(e)})}catch(r){return Hn(n)}}function z(t){try{return decodeURIComponent(t)}catch(e){}}function W(t){var e,n,r={};return o((t||"").split("&"),function(t){t&&(e=t.replace(/\+/g,"%20").split("="),n=z(e[0]),y(n)&&(t=y(e[1])?z(e[1]):!0,zn.call(r,n)?nr(r[n])?r[n].push(t):r[n]=[r[n],t]:r[n]=t))}),r}function G(t){var e=[];return o(t,function(t,n){nr(t)?o(t,function(t){e.push(Y(n,!0)+(!0===t?"":"="+Y(t,!0)))}):e.push(Y(n,!0)+(!0===t?"":"="+Y(t,!0)))}),e.length?e.join("&"):""}function J(t){return Y(t,!0).replace(/%26/gi,"&").replace(/%3D/gi,"=").replace(/%2B/gi,"+")}function Y(t,e){return encodeURIComponent(t).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%3B/gi,";").replace(/%20/g,e?"%20":"+")}function K(t,e){var n,r,i=ur.length;for(r=0;i>r;++r)if(n=ur[r]+e,x(n=t.getAttribute(n)))return n;return null}function Z(t,e){var n,r,i={};o(ur,function(e){e+="app",!n&&t.hasAttribute&&t.hasAttribute(e)&&(n=t,r=t.getAttribute(e))}),o(ur,function(e){e+="app";var i;!n&&(i=t.querySelector("["+e.replace(":","\\:")+"]"))&&(n=i,r=i.getAttribute(e))}),n&&(i.strictDi=null!==K(n,"strict-di"),e(n,r?[r]:[],i))}function X(n,r,i){b(i)||(i={}),i=f({strictDi:!1},i);var a=function(){if(n=Fn(n),n.injector()){var t=n[0]===e?"document":H(n);throw Xn("btstrpd",t.replace(/</,"&lt;").replace(/>/,"&gt;"))}return r=r||[],r.unshift(["$provide",function(t){t.value("$rootElement",n)}]),i.debugInfoEnabled&&r.push(["$compileProvider",function(t){t.debugInfoEnabled(!0)}]),r.unshift("ng"),t=Rt(r,i.strictDi),t.invoke(["$rootScope","$rootElement","$compile","$injector",function(t,e,n,r){t.$apply(function(){e.data("$injector",r),n(e)(t)})}]),t},s=/^NG_ENABLE_DEBUG_INFO!/,u=/^NG_DEFER_BOOTSTRAP!/;return t&&s.test(t.name)&&(i.debugInfoEnabled=!0,t.name=t.name.replace(s,"")),t&&!u.test(t.name)?a():(t.name=t.name.replace(u,""),Qn.resumeBootstrap=function(t){return o(t,function(t){r.push(t)}),a()},void(E(Qn.resumeDeferredBootstrap)&&Qn.resumeDeferredBootstrap()))}function Q(){t.name="NG_ENABLE_DEBUG_INFO!"+t.name,t.location.reload()}function tt(t){if(t=Qn.element(t).injector(),!t)throw Xn("test");return t.get("$$testability")}function et(t,e){return e=e||"_",t.replace(cr,function(t,n){return(n?e:"")+t.toLowerCase()})}function nt(){var e;if(!lr){var r=sr();_n=t.jQuery,y(r)&&(_n=null===r?n:t[r]),_n&&_n.fn.on?(Fn=_n,f(_n.fn,{scope:Er.scope,isolateScope:Er.isolateScope,controller:Er.controller,injector:Er.injector,inheritedData:Er.inheritedData}),e=_n.cleanData,_n.cleanData=function(t){var n;if(er)er=!1;else for(var r,i=0;null!=(r=t[i]);i++)(n=_n._data(r,"events"))&&n.$destroy&&_n(r).triggerHandler("$destroy");e(t)}):Fn=$t,Qn.element=Fn,lr=!0}}function rt(t,e,n){if(!t)throw Xn("areq",e||"?",n||"required");return t}function it(t,e,n){return n&&nr(t)&&(t=t[t.length-1]),rt(E(t),e,"not a function, got "+(t&&"object"==typeof t?t.constructor.name||"Object":typeof t)),t}function ot(t,e){if("hasOwnProperty"===t)throw Xn("badname",e)}function at(t,e,n){if(!e)return t;e=e.split(".");for(var r,i=t,o=e.length,a=0;o>a;a++)r=e[a],t&&(t=(i=t)[r]);return!n&&E(t)?q(i,t):t}function st(t){var e=t[0];t=t[t.length-1];var n=[e];do{if(e=e.nextSibling,!e)break;n.push(e)}while(e!==t);return Fn(n)}function ut(){return Object.create(null)}function ct(t){function e(t,e,n){return t[e]||(t[e]=n())}var n=r("$injector"),i=r("ng");return t=e(t,"angular",Object),t.$$minErr=t.$$minErr||r,e(t,"module",function(){var t={};return function(r,o,a){if("hasOwnProperty"===r)throw i("badname","module");return o&&t.hasOwnProperty(r)&&(t[r]=null),e(t,r,function(){function t(t,n,r,i){return i||(i=e),function(){return i[r||"push"]([t,n,arguments]),c}}if(!o)throw n("nomod",r);var e=[],i=[],s=[],u=t("$injector","invoke","push",i),c={_invokeQueue:e,_configBlocks:i,_runBlocks:s,requires:o,name:r,provider:t("$provide","provider"),factory:t("$provide","factory"),service:t("$provide","service"),value:t("$provide","value"),constant:t("$provide","constant","unshift"),decorator:t("$provide","decorator"),animation:t("$animateProvider","register"),filter:t("$filterProvider","register"),controller:t("$controllerProvider","register"),directive:t("$compileProvider","directive"),config:u,run:function(t){return s.push(t),this}};return a&&u(a),c})}})}function lt(e){f(e,{bootstrap:X,copy:P,extend:f,merge:h,equals:I,element:Fn,forEach:o,injector:Rt,noop:d,bind:q,toJson:F,fromJson:_,identity:m,isUndefined:g,isDefined:y,isString:x,isFunction:E,isObject:b,isNumber:S,isElement:T,isArray:nr,version:pr,isDate:C,lowercase:Hn,uppercase:Wn,callbacks:{counter:0},getTestability:tt,$$minErr:r,$$csp:ar,reloadWithDebugInfo:Q}),Bn=ct(t);try{Bn("ngLocale")}catch(n){Bn("ngLocale",[]).provider("$locale",pe)}Bn("ng",["ngLocale"],["$provide",function(t){t.provider({$$sanitizeUri:Ye}),t.provider("$compile",Gt).directive({a:yi,input:Di,textarea:Di,form:Si,script:Co,select:Ao,style:Mo,option:Oo,ngBind:qi,ngBindHtml:Fi,ngBindTemplate:Ui,ngClass:Bi,ngClassEven:Hi,ngClassOdd:Li,ngCloak:zi,ngController:Wi,ngForm:Ci,ngHide:go,ngIf:Yi,ngInclude:Ki,ngInit:Xi,ngNonBindable:lo,ngPluralize:$o,ngRepeat:mo,ngShow:vo,ngStyle:yo,ngSwitch:bo,ngSwitchWhen:wo,ngSwitchDefault:xo,ngOptions:po,ngTransclude:So,ngModel:so,ngList:Qi,ngChange:_i,pattern:Vo,ngPattern:Vo,required:To,ngRequired:To,minlength:jo,ngMinlength:jo,maxlength:No,ngMaxlength:No,ngValue:Ri,ngModelOptions:co}).directive({ngInclude:Zi}).directive(bi).directive(Gi),t.provider({$anchorScroll:qt,$animate:qr,$$animateQueue:Rr,$$AnimateRunner:Ir,$browser:Ht,$cacheFactory:zt,$controller:Zt,$document:Xt,$exceptionHandler:Qt,$filter:ln,$interpolate:fe,$interval:he,$http:se,$httpParamSerializer:ee,$httpParamSerializerJQLike:ne,$httpBackend:ce,$location:ke,$log:Ae,$parse:Le,$rootScope:Je,$q:He,$$q:ze,$sce:Qe,$sceDelegate:Xe,$sniffer:tn,$templateCache:Wt,$templateRequest:en,$$testability:nn,$timeout:rn,$window:sn,$$rAF:Ge,$$asyncCallback:Bt,$$jqLite:jt,$$HashMap:Mr,$$cookieReader:cn})}])}function ft(t){return t.replace(mr,function(t,e,n,r){return r?n.toUpperCase():n}).replace(vr,"Moz$1")}function ht(t){return t=t.nodeType,t===fr||!t||9===t}function pt(t,e){var n,r,i=e.createDocumentFragment(),a=[];if(wr.test(t)){for(n=n||i.appendChild(e.createElement("div")),r=(xr.exec(t)||["",""])[1].toLowerCase(),r=Cr[r]||Cr._default,n.innerHTML=r[1]+t.replace(Sr,"<$1></$2>")+r[2],r=r[0];r--;)n=n.lastChild;a=R(a,n.childNodes),n=i.firstChild,n.textContent=""}else a.push(e.createTextNode(t));return i.textContent="",i.innerHTML="",o(a,function(t){i.appendChild(t)}),i}function $t(t){if(t instanceof $t)return t;var n;if(x(t)&&(t=ir(t),n=!0),!(this instanceof $t)){if(n&&"<"!=t.charAt(0))throw yr("nosel");return new $t(t)}if(n){n=e;var r;t=(r=br.exec(t))?[n.createElement(r[1])]:(r=pt(t,n))?r.childNodes:[]}Ct(this,t)}function dt(t){return t.cloneNode(!0)}function mt(t,e){if(e||gt(t),t.querySelectorAll)for(var n=t.querySelectorAll("*"),r=0,i=n.length;i>r;r++)gt(n[r])}function vt(t,e,n,r){if(y(r))throw yr("offargs");var i=(r=yt(t))&&r.events,a=r&&r.handle;if(a)if(e)o(e.split(" "),function(e){if(y(n)){var r=i[e];if(j(r||[],n),r&&0<r.length)return}t.removeEventListener(e,a,!1),delete i[e]});else for(e in i)"$destroy"!==e&&t.removeEventListener(e,a,!1),delete i[e]}function gt(t,e){var r=t.ng339,i=r&&$r[r];i&&(e?delete i.data[e]:(i.handle&&(i.events.$destroy&&i.handle({},"$destroy"),vt(t)),delete $r[r],t.ng339=n))}function yt(t,e){var r=t.ng339,r=r&&$r[r];return e&&!r&&(t.ng339=r=++dr,r=$r[r]={events:{},data:{},handle:n}),r}function bt(t,e,n){if(ht(t)){var r=y(n),i=!r&&e&&!b(e),o=!e;if(t=(t=yt(t,!i))&&t.data,r)t[e]=n;else{if(o)return t;if(i)return t&&t[e];f(t,e)}}}function wt(t,e){return t.getAttribute?-1<(" "+(t.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").indexOf(" "+e+" "):!1}function xt(t,e){e&&t.setAttribute&&o(e.split(" "),function(e){t.setAttribute("class",ir((" "+(t.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").replace(" "+ir(e)+" "," ")))})}function St(t,e){if(e&&t.setAttribute){var n=(" "+(t.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ");o(e.split(" "),function(t){t=ir(t),-1===n.indexOf(" "+t+" ")&&(n+=t+" ")}),t.setAttribute("class",ir(n))}}function Ct(t,e){if(e)if(e.nodeType)t[t.length++]=e;else{var n=e.length;if("number"==typeof n&&e.window!==e){if(n)for(var r=0;n>r;r++)t[t.length++]=e[r]}else t[t.length++]=e}}function Et(t,e){return kt(t,"$"+(e||"ngController")+"Controller")}function kt(t,e,r){for(9==t.nodeType&&(t=t.documentElement),e=nr(e)?e:[e];t;){for(var i=0,o=e.length;o>i;i++)if((r=Fn.data(t,e[i]))!==n)return r;t=t.parentNode||11===t.nodeType&&t.host}}function At(t){for(mt(t,!0);t.firstChild;)t.removeChild(t.firstChild)}function Ot(t,e){e||mt(t);var n=t.parentNode;n&&n.removeChild(t)}function Mt(e,n){n=n||t,"complete"===n.document.readyState?n.setTimeout(e):Fn(n).on("load",e)}function Tt(t,e){var n=kr[e.toLowerCase()];return n&&Ar[N(t)]&&n}function Vt(t,e){var n=t.nodeName;return("INPUT"===n||"TEXTAREA"===n)&&Or[e]}function Nt(t,e){var n=function(n,r){n.isDefaultPrevented=function(){return n.defaultPrevented};var i=e[r||n.type],o=i?i.length:0;if(o){if(g(n.immediatePropagationStopped)){var a=n.stopImmediatePropagation;n.stopImmediatePropagation=function(){n.immediatePropagationStopped=!0,n.stopPropagation&&n.stopPropagation(),a&&a.call(n)}}n.isImmediatePropagationStopped=function(){return!0===n.immediatePropagationStopped},o>1&&(i=D(i));for(var s=0;o>s;s++)n.isImmediatePropagationStopped()||i[s].call(t,n)}};return n.elem=t,n}function jt(){this.$get=function(){return f($t,{hasClass:function(t,e){return t.attr&&(t=t[0]),wt(t,e)},addClass:function(t,e){return t.attr&&(t=t[0]),St(t,e)},removeClass:function(t,e){return t.attr&&(t=t[0]),xt(t,e)}})}}function Pt(t,e){var n=t&&t.$$hashKey;return n?("function"==typeof n&&(n=t.$$hashKey()),n):(n=typeof t,n="function"==n||"object"==n&&null!==t?t.$$hashKey=n+":"+(e||u)():n+":"+t)}function Dt(t,e){if(e){var n=0;this.nextUid=function(){return++n}}o(t,this.put,this)}function It(t){return(t=t.toString().replace(jr,"").match(Tr))?"function("+(t[1]||"").replace(/[\s\r\n]+/," ")+")":"fn"}function Rt(t,e){function r(t){return function(e,n){return b(e)?void o(e,s(t)):t(e,n)}}function i(t,e){if(ot(t,"service"),(E(e)||nr(e))&&(e=m.instantiate(e)),!e.$get)throw Pr("pget",t);return $[t+"Provider"]=e}function a(t,e){return function(){var n=w.invoke(e,this);if(g(n))throw Pr("undef",t);return n}}function u(t,e,n){return i(t,{$get:!1!==n?a(t,e):e})}function c(t){var e,n=[];return o(t,function(t){function r(t){var e,n;for(e=0,n=t.length;n>e;e++){var r=t[e],i=m.get(r[0]);i[r[1]].apply(i,r[2])}}if(!p.get(t)){p.put(t,!0);try{x(t)?(e=Bn(t),n=n.concat(c(e.requires)).concat(e._runBlocks),r(e._invokeQueue),r(e._configBlocks)):E(t)?n.push(m.invoke(t)):nr(t)?n.push(m.invoke(t)):it(t,"module")}catch(i){throw nr(t)&&(t=t[t.length-1]),i.message&&i.stack&&-1==i.stack.indexOf(i.message)&&(i=i.message+"\n"+i.stack),Pr("modulerr",t,i.stack||i.message||i)}}}),n}function l(t,n){function r(e,r){if(t.hasOwnProperty(e)){if(t[e]===f)throw Pr("cdep",e+" <- "+h.join(" <- "));return t[e]}try{return h.unshift(e),t[e]=f,t[e]=n(e,r)}catch(i){throw t[e]===f&&delete t[e],i}finally{h.shift()}}function i(t,n,i,o){"string"==typeof i&&(o=i,i=null);var a,s,u,c=[],l=Rt.$$annotate(t,e,o);for(s=0,a=l.length;a>s;s++){if(u=l[s],"string"!=typeof u)throw Pr("itkn",u);c.push(i&&i.hasOwnProperty(u)?i[u]:r(u,o))}return nr(t)&&(t=t[a]),t.apply(n,c)}return{invoke:i,instantiate:function(t,e,n){var r=Object.create((nr(t)?t[t.length-1]:t).prototype||null);return t=i(t,r,e,n),b(t)||E(t)?t:r},get:r,annotate:Rt.$$annotate,has:function(e){return $.hasOwnProperty(e+"Provider")||t.hasOwnProperty(e)}}}e=!0===e;var f={},h=[],p=new Dt([],!0),$={$provide:{provider:r(i),factory:r(u),service:r(function(t,e){return u(t,["$injector",function(t){return t.instantiate(e)}])}),value:r(function(t,e){return u(t,v(e),!1)}),constant:r(function(t,e){ot(t,"constant"),$[t]=e,y[t]=e}),decorator:function(t,e){var n=m.get(t+"Provider"),r=n.$get;n.$get=function(){var t=w.invoke(r,n);return w.invoke(e,null,{$delegate:t})}}}},m=$.$injector=l($,function(t,e){throw Qn.isString(e)&&h.push(e),Pr("unpr",h.join(" <- "))}),y={},w=y.$injector=l(y,function(t,e){var r=m.get(t+"Provider",e);return w.invoke(r.$get,r,n,t)});return o(c(t),function(t){w.invoke(t||d)}),w}function qt(){var t=!0;this.disableAutoScrolling=function(){t=!1},this.$get=["$window","$location","$rootScope",function(e,n,r){function i(t){var e=null;return Array.prototype.some.call(t,function(t){return"a"===N(t)?(e=t,!0):void 0}),e}function o(t){if(t){t.scrollIntoView();var n;n=a.yOffset,E(n)?n=n():T(n)?(n=n[0],n="fixed"!==e.getComputedStyle(n).position?0:n.getBoundingClientRect().bottom):S(n)||(n=0),n&&(t=t.getBoundingClientRect().top,e.scrollBy(0,t-n))}else e.scrollTo(0,0)}function a(t){t=x(t)?t:n.hash();var e;t?(e=s.getElementById(t))?o(e):(e=i(s.getElementsByName(t)))?o(e):"top"===t&&o(null):o(null)}var s=e.document;return t&&r.$watch(function(){return n.hash()},function(t,e){t===e&&""===t||Mt(function(){r.$evalAsync(a)})}),a}]}function Ut(t,e){return t||e?t?e?(nr(t)&&(t=t.join(" ")),nr(e)&&(e=e.join(" ")),t+" "+e):t:e:""}function Ft(t){x(t)&&(t=t.split(" "));var e=ut();return o(t,function(t){t.length&&(e[t]=!0)}),e}function _t(t){return b(t)?t:{}}function Bt(){this.$get=["$$rAF","$timeout",function(t,e){return t.supported?function(e){return t(e)}:function(t){return e(t,0,!1)}}]}function Lt(t,e,n,r){function i(t){try{t.apply(null,Gn.call(arguments,1))}finally{if(m--,0===m)for(;v.length;)try{v.pop()()}catch(e){n.error(e)}}}function a(){s(),u()}function s(){t:{try{y=f.state;break t}catch(t){}y=void 0}y=g(y)?null:y,I(y,k)&&(y=k),k=y}function u(){(w!==c.url()||b!==y)&&(w=c.url(),b=y,o(C,function(t){t(c.url(),y)}))}var c=this,l=t.location,f=t.history,h=t.setTimeout,p=t.clearTimeout,$={};c.isMock=!1;var m=0,v=[];c.$$completeOutstandingRequest=i,c.$$incOutstandingRequestCount=function(){m++},c.notifyWhenNoOutstandingRequests=function(t){0===m?t():v.push(t)};var y,b,w=l.href,x=e.find("base"),S=null;s(),b=y,c.url=function(e,n,i){if(g(i)&&(i=null),l!==t.location&&(l=t.location),f!==t.history&&(f=t.history),e){var o=b===i;if(w===e&&(!r.history||o))return c;var a=w&&ge(w)===ge(e);return w=e,b=i,!r.history||a&&o?(a||(S=e),n?l.replace(e):a?(n=l,i=e.indexOf("#"),e=-1===i?"":e.substr(i+1),n.hash=e):l.href=e):(f[n?"replaceState":"pushState"](i,"",e),s(),b=y),c}return S||l.href.replace(/%27/g,"'")},c.state=function(){return y};var C=[],E=!1,k=null;c.onUrlChange=function(e){return E||(r.history&&Fn(t).on("popstate",a),Fn(t).on("hashchange",a),E=!0),C.push(e),e},c.$$applicationDestroyed=function(){Fn(t).off("hashchange popstate",a)},c.$$checkUrlChange=u,c.baseHref=function(){var t=x.attr("href");return t?t.replace(/^(https?\:)?\/\/[^\/]*/,""):""},c.defer=function(t,e){var n;return m++,n=h(function(){delete $[n],i(t)},e||0),$[n]=!0,n},c.defer.cancel=function(t){return $[t]?(delete $[t],p(t),i(d),!0):!1}}function Ht(){this.$get=["$window","$log","$sniffer","$document",function(t,e,n,r){return new Lt(t,r,e,n)}]}function zt(){this.$get=function(){function t(t,n){function i(t){t!=h&&(p?p==t&&(p=t.n):p=t,o(t.n,t.p),o(t,h),h=t,h.n=null)}function o(t,e){t!=e&&(t&&(t.p=e),e&&(e.n=t))}if(t in e)throw r("$cacheFactory")("iid",t);var a=0,s=f({},n,{id:t}),u={},c=n&&n.capacity||Number.MAX_VALUE,l={},h=null,p=null;return e[t]={put:function(t,e){if(!g(e)){if(c<Number.MAX_VALUE){var n=l[t]||(l[t]={key:t});i(n)}return t in u||a++,u[t]=e,a>c&&this.remove(p.key),e}},get:function(t){if(c<Number.MAX_VALUE){var e=l[t];if(!e)return;i(e)}return u[t]},remove:function(t){if(c<Number.MAX_VALUE){var e=l[t];if(!e)return;e==h&&(h=e.p),e==p&&(p=e.n),o(e.n,e.p),delete l[t]}delete u[t],a--},removeAll:function(){u={},a=0,l={},h=p=null},destroy:function(){l=s=u=null,delete e[t]},info:function(){return f({},s,{size:a})}}}var e={};return t.info=function(){var t={};return o(e,function(e,n){t[n]=e.info()}),t},t.get=function(t){return e[t]},t}}function Wt(){this.$get=["$cacheFactory",function(t){return t("templates")}]}function Gt(t,r){function i(t,e,n){var r=/^\s*([@&]|=(\*?))(\??)\s*(\w*)\s*$/,i={};return o(t,function(t,o){var a=t.match(r);if(!a)throw Ur("iscp",e,o,t,n?"controller bindings definition":"isolate scope definition");i[o]={mode:a[1][0],collection:"*"===a[2],optional:"?"===a[3],attrName:a[4]||o}}),i}function a(t){var e=t.charAt(0);if(!e||e!==Hn(e))throw Ur("baddir",t);if(t!==t.trim())throw Ur("baddir",t)}var u={},c=/^\s*directive\:\s*([\w\-]+)\s+(.*)$/,l=/(([\w\-]+)(?:\:([^;]+))?;?)/,h=V("ngSrc,ngSrcset,src,srcset"),p=/^(?:(\^\^?)?(\?)?(\^\^?)?)?/,g=/^(on[a-z]+|formaction)$/;this.directive=function S(e,n){return ot(e,"directive"),x(e)?(a(e),rt(n,"directiveFactory"),u.hasOwnProperty(e)||(u[e]=[],t.factory(e+"Directive",["$injector","$exceptionHandler",function(t,n){var r=[];return o(u[e],function(o,a){try{var s=t.invoke(o);E(s)?s={compile:v(s)}:!s.compile&&s.link&&(s.compile=v(s.link)),s.priority=s.priority||0,s.index=a,s.name=s.name||e,s.require=s.require||s.controller&&s.name,s.restrict=s.restrict||"EA";var u=s,c=s,l=s.name,f={isolateScope:null,bindToController:null};if(b(c.scope)&&(!0===c.bindToController?(f.bindToController=i(c.scope,l,!0),f.isolateScope={}):f.isolateScope=i(c.scope,l,!1)),b(c.bindToController)&&(f.bindToController=i(c.bindToController,l,!0)),b(f.bindToController)){var h=c.controller,p=c.controllerAs;if(!h)throw Ur("noctrl",l);var $;t:if(p&&x(p))$=p;else{if(x(h)){var d=Br.exec(h);if(d){$=d[3];break t}}$=void 0}if(!$)throw Ur("noident",l)}var m=u.$$bindings=f;b(m.isolateScope)&&(s.$$isolateBindings=m.isolateScope),r.push(s)}catch(g){n(g)}}),r}])),u[e].push(n)):o(e,s(S)),this},this.aHrefSanitizationWhitelist=function(t){return y(t)?(r.aHrefSanitizationWhitelist(t),this):r.aHrefSanitizationWhitelist()},this.imgSrcSanitizationWhitelist=function(t){return y(t)?(r.imgSrcSanitizationWhitelist(t),this):r.imgSrcSanitizationWhitelist()};var w=!0;this.debugInfoEnabled=function(t){return y(t)?(w=t,this):w},this.$get=["$injector","$interpolate","$exceptionHandler","$templateRequest","$parse","$controller","$rootScope","$document","$sce","$animate","$$sanitizeUri",function(t,r,i,a,s,v,y,S,C,k,A){function M(t,e){try{t.addClass(e)}catch(n){}}function T(t,e,n,r,i){t instanceof Fn||(t=Fn(t)),o(t,function(e,n){e.nodeType==hr&&e.nodeValue.match(/\S+/)&&(t[n]=Fn(e).wrap("<span></span>").parent()[0])});var a=V(t,e,t,n,r,i);T.$$addScopeClass(t);var s=null;return function(e,n,r){rt(e,"scope"),r=r||{};var i=r.parentBoundTranscludeFn,o=r.transcludeControllers;if(r=r.futureParentElement,i&&i.$$boundTransclude&&(i=i.$$boundTransclude),s||(s=(r=r&&r[0])&&"foreignobject"!==N(r)&&r.toString().match(/SVG/)?"svg":"html"),r="html"!==s?Fn(Y(s,Fn("<div>").append(t).html())):n?Er.clone.call(t):t,o)for(var u in o)r.data("$"+u+"Controller",o[u].instance);return T.$$addScopeInfo(r,e),n&&n(r,e),a&&a(e,r,r,i),r}}function V(t,e,r,i,o,a){function s(t,r,i,o){var a,s,u,c,l,f,$;if(h)for($=Array(r.length),c=0;c<p.length;c+=3)a=p[c],$[a]=r[a];else $=r;for(c=0,l=p.length;l>c;)s=$[p[c++]],r=p[c++],a=p[c++],r?(r.scope?(u=t.$new(),T.$$addScopeInfo(Fn(s),u),(f=r.$$destroyBindings)&&(r.$$destroyBindings=null,u.$on("$destroyed",f))):u=t,f=r.transcludeOnThisElement?P(t,r.transclude,o,r.elementTranscludeOnThisElement):!r.templateOnThisElement&&o?o:!o&&e?P(t,e):null,r(a,u,s,i,f,r)):a&&a(t,s.childNodes,n,o)}for(var u,c,l,f,h,p=[],$=0;$<t.length;$++)u=new it,c=D(t[$],[],u,0===$?i:n,o),(a=c.length?U(c,t[$],u,e,r,null,[],[],a):null)&&a.scope&&T.$$addScopeClass(u.$$element),u=a&&a.terminal||!(l=t[$].childNodes)||!l.length?null:V(l,a?(a.transcludeOnThisElement||!a.templateOnThisElement)&&a.transclude:e),(a||u)&&(p.push($,a,u),f=!0,h=h||a),a=null;return f?s:null}function P(t,e,n,r){return function(r,i,o,a,s){return r||(r=t.$new(!1,s),r.$$transcluded=!0),e(r,i,{parentBoundTranscludeFn:n,transcludeControllers:o,futureParentElement:a})}}function D(t,e,n,r,i){var o,a=n.$attr;switch(t.nodeType){case fr:_(e,Jt(N(t)),"E",r,i);for(var s,u,f,h=t.attributes,p=0,$=h&&h.length;$>p;p++){var d=!1,m=!1;s=h[p],o=s.name,u=ir(s.value),s=Jt(o),(f=ct.test(s))&&(o=o.replace(Fr,"").substr(8).replace(/_(.)/g,function(t,e){return e.toUpperCase()}));var v=s.replace(/(Start|End)$/,"");B(v)&&s===v+"Start"&&(d=o,m=o.substr(0,o.length-5)+"end",o=o.substr(0,o.length-6)),s=Jt(o.toLowerCase()),a[s]=o,(f||!n.hasOwnProperty(s))&&(n[s]=u,Tt(t,s)&&(n[s]=!0)),Z(t,e,u,s,f),_(e,s,"A",r,i,d,m)}if(t=t.className,b(t)&&(t=t.animVal),x(t)&&""!==t)for(;o=l.exec(t);)s=Jt(o[2]),_(e,s,"C",r,i)&&(n[s]=ir(o[3])),t=t.substr(o.index+o[0].length);break;case hr:J(e,t.nodeValue);break;case 8:try{(o=c.exec(t.nodeValue))&&(s=Jt(o[1]),_(e,s,"M",r,i)&&(n[s]=ir(o[2])))}catch(g){}}return e.sort(W),e}function R(t,e,n){var r=[],i=0;if(e&&t.hasAttribute&&t.hasAttribute(e)){do{if(!t)throw Ur("uterdir",e,n);t.nodeType==fr&&(t.hasAttribute(e)&&i++,t.hasAttribute(n)&&i--),r.push(t),t=t.nextSibling}while(i>0)}else r.push(t);return Fn(r)}function q(t,e,n){return function(r,i,o,a,s){return i=R(i[0],e,n),t(r,i,o,a,s)}}function U(t,r,o,a,s,u,c,l,f){function h(t,e,n,r){t&&(n&&(t=q(t,n,r)),t.require=y.require,t.directiveName=w,(M===y||y.$$isolateScope)&&(t=Q(t,{isolateScope:!0})),c.push(t)),e&&(n&&(e=q(e,n,r)),e.require=y.require,e.directiveName=w,(M===y||y.$$isolateScope)&&(e=Q(e,{isolateScope:!0})),l.push(e))}function $(t,e,n,r){var i;if(x(e)){var o=e.match(p);e=e.substring(o[0].length);var a=o[1]||o[3],o="?"===o[2];if("^^"===a?n=n.parent():i=(i=r&&r[e])&&i.instance,i||(r="$"+e+"Controller",i=a?n.inheritedData(r):n.data(r)),!i&&!o)throw Ur("ctreq",e,t)}else if(nr(e))for(i=[],a=0,o=e.length;o>a;a++)i[a]=$(t,e[a],n,r);return i||null}function d(t,e,n,r,i,o){var a,s=ut();for(a in r){var u=r[a],c={$scope:u===M||u.$$isolateScope?i:o,$element:t,$attrs:e,$transclude:n},l=u.controller;"@"==l&&(l=e[u.name]),c=v(l,c,!0,u.controllerAs),s[u.name]=c,I||t.data("$"+u.name+"Controller",c.instance)}return s}function m(t,e,i,a,s,u){function f(t,e,r){var i;return O(t)||(r=e,e=t,t=n),I&&(i=b),r||(r=I?x.parent():x),s(t,e,i,r,k)}var h,p,m,v,b,w,x;if(r===i?(a=o,x=o.$$element):(x=Fn(i),a=new it(x,o)),M&&(v=e.$new(!0)),s&&(w=f,w.$$boundTransclude=s),A&&(b=d(x,a,w,A,v,e)),M&&(T.$$addScopeInfo(x,v,!0,!(V&&(V===M||V===M.$$originalDirective))),T.$$addScopeClass(x,!0),v.$$isolateBindings=M.$$isolateBindings,nt(e,a,v,v.$$isolateBindings,M,v)),b){var S,C=M||g;C&&b[C.name]&&(p=C.$$bindings.bindToController,(m=b[C.name])&&m.identifier&&p&&(S=m,u.$$destroyBindings=nt(e,a,m.instance,p,C)));for(h in b){m=b[h];var E=m();E!==m.instance&&(m.instance=E,x.data("$"+y.name+"Controller",E),m===S&&(u.$$destroyBindings(),u.$$destroyBindings=nt(e,a,E,p,C)))}}for(h=0,u=c.length;u>h;h++)p=c[h],tt(p,p.isolateScope?v:e,x,a,p.require&&$(p.directiveName,p.require,x,b),w);var k=e;for(M&&(M.template||null===M.templateUrl)&&(k=v),t&&t(k,i.childNodes,n,s),h=l.length-1;h>=0;h--)p=l[h],tt(p,p.isolateScope?v:e,x,a,p.require&&$(p.directiveName,p.require,x,b),w)}f=f||{};for(var g,y,w,S,C,k=-Number.MAX_VALUE,A=f.controllerDirectives,M=f.newIsolateScopeDirective,V=f.templateDirective,N=f.nonTlbTranscludeDirective,j=!1,P=!1,I=f.hasElementTranscludeDirective,U=o.$$element=Fn(r),_=a,B=0,W=t.length;W>B;B++){y=t[B];var J=y.$$start,K=y.$$end;if(J&&(U=R(r,J,K)),S=n,k>y.priority)break;if((S=y.scope)&&(y.templateUrl||(b(S)?(G("new/isolated scope",M||g,y,U),M=y):G("new/isolated scope",M,y,U)),g=g||y),w=y.name,!y.templateUrl&&y.controller&&(S=y.controller,A=A||ut(),G("'"+w+"' controller",A[w],y,U),A[w]=y),(S=y.transclude)&&(j=!0,y.$$tlb||(G("transclusion",N,y,U),N=y),"element"==S?(I=!0,k=y.priority,S=U,U=o.$$element=Fn(e.createComment(" "+w+": "+o[w]+" ")),r=U[0],X(s,Gn.call(S,0),r),_=T(S,a,k,u&&u.name,{nonTlbTranscludeDirective:N})):(S=Fn(dt(r)).contents(),U.empty(),_=T(S,a))),y.template)if(P=!0,G("template",V,y,U),V=y,S=E(y.template)?y.template(U,o):y.template,S=st(S),y.replace){if(u=y,S=wr.test(S)?Kt(Y(y.templateNamespace,ir(S))):[],r=S[0],1!=S.length||r.nodeType!==fr)throw Ur("tplrt",w,"");X(s,U,r),W={$attr:{}},S=D(r,[],W);var Z=t.splice(B+1,t.length-(B+1));M&&F(S),t=t.concat(S).concat(Z),L(o,W),W=t.length}else U.html(S);if(y.templateUrl)P=!0,G("template",V,y,U),V=y,y.replace&&(u=y),m=z(t.splice(B,t.length-B),U,o,s,j&&_,c,l,{controllerDirectives:A,newIsolateScopeDirective:M,templateDirective:V,nonTlbTranscludeDirective:N}),W=t.length;else if(y.compile)try{C=y.compile(U,o,_),E(C)?h(null,C,J,K):C&&h(C.pre,C.post,J,K)}catch(et){i(et,H(U))}y.terminal&&(m.terminal=!0,k=Math.max(k,y.priority))}return m.scope=g&&!0===g.scope,m.transcludeOnThisElement=j,m.elementTranscludeOnThisElement=I,m.templateOnThisElement=P,m.transclude=_,f.hasElementTranscludeDirective=I,m}function F(t){for(var e=0,n=t.length;n>e;e++)t[e]=$(t[e],{$$isolateScope:!0})}function _(e,r,o,a,s,c,l){if(r===s)return null;if(s=null,u.hasOwnProperty(r)){var f;r=t.get(r+"Directive");for(var h=0,p=r.length;p>h;h++)try{f=r[h],(a===n||a>f.priority)&&-1!=f.restrict.indexOf(o)&&(c&&(f=$(f,{$$start:c,$$end:l})),e.push(f),s=f)}catch(d){i(d)}}return s}function B(e){if(u.hasOwnProperty(e))for(var n=t.get(e+"Directive"),r=0,i=n.length;i>r;r++)if(e=n[r],e.multiElement)return!0;return!1}function L(t,e){var n=e.$attr,r=t.$attr,i=t.$$element;o(t,function(r,i){"$"!=i.charAt(0)&&(e[i]&&e[i]!==r&&(r+=("style"===i?";":" ")+e[i]),t.$set(i,r,!0,n[i]))}),o(e,function(e,o){"class"==o?(M(i,e),t["class"]=(t["class"]?t["class"]+" ":"")+e):"style"==o?(i.attr("style",i.attr("style")+";"+e),t.style=(t.style?t.style+";":"")+e):"$"==o.charAt(0)||t.hasOwnProperty(o)||(t[o]=e,r[o]=n[o])})}function z(t,e,n,r,i,s,u,c){var l,f,h=[],p=e[0],d=t.shift(),m=$(d,{templateUrl:null,transclude:null,replace:null,$$originalDirective:d}),v=E(d.templateUrl)?d.templateUrl(e,n):d.templateUrl,g=d.templateNamespace;return e.empty(),a(C.getTrustedResourceUrl(v)).then(function(a){var $,y;if(a=st(a),d.replace){if(a=wr.test(a)?Kt(Y(g,ir(a))):[],$=a[0],1!=a.length||$.nodeType!==fr)throw Ur("tplrt",d.name,v);a={$attr:{}},X(r,e,$);var w=D($,[],a);b(d.scope)&&F(w),t=w.concat(t),L(n,a)}else $=p,e.html(a);for(t.unshift(m),l=U(t,$,n,i,e,d,s,u,c),o(r,function(t,n){t==$&&(r[n]=e[0])}),f=V(e[0].childNodes,i);h.length;){a=h.shift(),y=h.shift();var x=h.shift(),S=h.shift(),w=e[0];if(!a.$$destroyed){if(y!==p){var C=y.className;c.hasElementTranscludeDirective&&d.replace||(w=dt($)),X(x,Fn(y),w),M(Fn(w),C)}y=l.transcludeOnThisElement?P(a,l.transclude,S):S,l(f,a,w,r,y,l)}}h=null}),function(t,e,n,r,i){t=i,e.$$destroyed||(h?h.push(e,n,r,t):(l.transcludeOnThisElement&&(t=P(e,l.transclude,i)),l(f,e,n,r,t,l)))}}function W(t,e){var n=e.priority-t.priority;return 0!==n?n:t.name!==e.name?t.name<e.name?-1:1:t.index-e.index}function G(t,e,n,r){if(e)throw Ur("multidir",e.name,n.name,t,H(r))}function J(t,e){var n=r(e,!0);n&&t.push({priority:0,
compile:function(t){t=t.parent();var e=!!t.length;return e&&T.$$addBindingClass(t),function(t,r){var i=r.parent();e||T.$$addBindingClass(i),T.$$addBindingInfo(i,n.expressions),t.$watch(n,function(t){r[0].nodeValue=t})}}})}function Y(t,n){switch(t=Hn(t||"html")){case"svg":case"math":var r=e.createElement("div");return r.innerHTML="<"+t+">"+n+"</"+t+">",r.childNodes[0].childNodes;default:return n}}function K(t,e){if("srcdoc"==e)return C.HTML;var n=N(t);return"xlinkHref"==e||"form"==n&&"action"==e||"img"!=n&&("src"==e||"ngSrc"==e)?C.RESOURCE_URL:void 0}function Z(t,e,n,i,o){var a=K(t,i);o=h[i]||o;var s=r(n,!0,a,o);if(s){if("multiple"===i&&"select"===N(t))throw Ur("selmulti",H(t));e.push({priority:100,compile:function(){return{pre:function(t,e,u){if(e=u.$$observers||(u.$$observers={}),g.test(i))throw Ur("nodomevents");var c=u[i];c!==n&&(s=c&&r(c,!0,a,o),n=c),s&&(u[i]=s(t),(e[i]||(e[i]=[])).$$inter=!0,(u.$$observers&&u.$$observers[i].$$scope||t).$watch(s,function(t,e){"class"===i&&t!=e?u.$updateClass(t,e):u.$set(i,t)}))}}}})}}function X(t,n,r){var i,o,a=n[0],s=n.length,u=a.parentNode;if(t)for(i=0,o=t.length;o>i;i++)if(t[i]==a){t[i++]=r,o=i+s-1;for(var c=t.length;c>i;i++,o++)c>o?t[i]=t[o]:delete t[i];t.length-=s-1,t.context===a&&(t.context=r);break}for(u&&u.replaceChild(r,a),t=e.createDocumentFragment(),t.appendChild(a),Fn(r).data(Fn(a).data()),_n?(er=!0,_n.cleanData([a])):delete Fn.cache[a[Fn.expando]],a=1,s=n.length;s>a;a++)u=n[a],Fn(u).remove(),t.appendChild(u),delete n[a];n[0]=r,n.length=1}function Q(t,e){return f(function(){return t.apply(null,arguments)},t,e)}function tt(t,e,n,r,o,a){try{t(e,n,r,o,a)}catch(s){i(s,H(n))}}function nt(t,e,n,i,a,u){var c;return o(i,function(i,o){var u,l,f,h,p=i.attrName,$=i.optional;switch(i.mode){case"@":e.$observe(p,function(t){n[o]=t}),e.$$observers[p].$$scope=t,e[p]&&(n[o]=r(e[p])(t));break;case"=":if($&&!e[p])break;l=s(e[p]),h=l.literal?I:function(t,e){return t===e||t!==t&&e!==e},f=l.assign||function(){throw u=n[o]=l(t),Ur("nonassign",e[p],a.name)},u=n[o]=l(t),$=function(e){return h(e,n[o])||(h(e,u)?f(t,e=n[o]):n[o]=e),u=e},$.$stateful=!0,$=i.collection?t.$watchCollection(e[p],$):t.$watch(s(e[p],$),null,l.literal),c=c||[],c.push($);break;case"&":if(!e.hasOwnProperty(p)&&$)break;if(l=s(e[p]),l===d&&$)break;n[o]=function(e){return l(t,e)}}}),i=c?function(){for(var t=0,e=c.length;e>t;++t)c[t]()}:d,u&&i!==d?(u.$on("$destroy",i),d):i}var it=function(t,e){if(e){var n,r,i,o=Object.keys(e);for(n=0,r=o.length;r>n;n++)i=o[n],this[i]=e[i]}else this.$attr={};this.$$element=t};it.prototype={$normalize:Jt,$addClass:function(t){t&&0<t.length&&k.addClass(this.$$element,t)},$removeClass:function(t){t&&0<t.length&&k.removeClass(this.$$element,t)},$updateClass:function(t,e){var n=Yt(t,e);n&&n.length&&k.addClass(this.$$element,n),(n=Yt(e,t))&&n.length&&k.removeClass(this.$$element,n)},$set:function(t,e,r,a){var s=this.$$element[0],u=Tt(s,t),c=Vt(s,t),s=t;if(u?(this.$$element.prop(t,e),a=u):c&&(this[c]=e,s=c),this[t]=e,a?this.$attr[t]=a:(a=this.$attr[t])||(this.$attr[t]=a=et(t,"-")),u=N(this.$$element),"a"===u&&"href"===t||"img"===u&&"src"===t)this[t]=e=A(e,"src"===t);else if("img"===u&&"srcset"===t){for(var u="",c=ir(e),l=/(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/,l=/\s/.test(c)?l:/(,)/,c=c.split(l),l=Math.floor(c.length/2),f=0;l>f;f++)var h=2*f,u=u+A(ir(c[h]),!0),u=u+(" "+ir(c[h+1]));c=ir(c[2*f]).split(/\s/),u+=A(ir(c[0]),!0),2===c.length&&(u+=" "+ir(c[1])),this[t]=e=u}!1!==r&&(null===e||e===n?this.$$element.removeAttr(a):this.$$element.attr(a,e)),(t=this.$$observers)&&o(t[s],function(t){try{t(e)}catch(n){i(n)}})},$observe:function(t,e){var n=this,r=n.$$observers||(n.$$observers=ut()),i=r[t]||(r[t]=[]);return i.push(e),y.$evalAsync(function(){!i.$$inter&&n.hasOwnProperty(t)&&e(n[t])}),function(){j(i,e)}}};var ot=r.startSymbol(),at=r.endSymbol(),st="{{"==ot||"}}"==at?m:function(t){return t.replace(/\{\{/g,ot).replace(/}}/g,at)},ct=/^ngAttr[A-Z]/;return T.$$addBindingInfo=w?function(t,e){var n=t.data("$binding")||[];nr(e)?n=n.concat(e):n.push(e),t.data("$binding",n)}:d,T.$$addBindingClass=w?function(t){M(t,"ng-binding")}:d,T.$$addScopeInfo=w?function(t,e,n,r){t.data(n?r?"$isolateScopeNoTemplate":"$isolateScope":"$scope",e)}:d,T.$$addScopeClass=w?function(t,e){M(t,e?"ng-isolate-scope":"ng-scope")}:d,T}]}function Jt(t){return ft(t.replace(Fr,""))}function Yt(t,e){var n="",r=t.split(/\s+/),i=e.split(/\s+/),o=0;t:for(;o<r.length;o++){for(var a=r[o],s=0;s<i.length;s++)if(a==i[s])continue t;n+=(0<n.length?" ":"")+a}return n}function Kt(t){t=Fn(t);var e=t.length;if(1>=e)return t;for(;e--;)8===t[e].nodeType&&Jn.call(t,e,1);return t}function Zt(){var t={},e=!1;this.register=function(e,n){ot(e,"controller"),b(e)?f(t,e):t[e]=n},this.allowGlobals=function(){e=!0},this.$get=["$injector","$window",function(i,o){function a(t,e,n,i){if(!t||!b(t.$scope))throw r("$controller")("noscp",i,e);t.$scope[e]=n}return function(r,s,u,c){var l,h,p;if(u=!0===u,c&&x(c)&&(p=c),x(r)){if(c=r.match(Br),!c)throw _r("ctrlfmt",r);h=c[1],p=p||c[3],r=t.hasOwnProperty(h)?t[h]:at(s.$scope,h,!0)||(e?at(o,h,!0):n),it(r,h,!0)}return u?(u=(nr(r)?r[r.length-1]:r).prototype,l=Object.create(u||null),p&&a(s,p,l,h||r.name),f(function(){var t=i.invoke(r,l,s,h);return t!==l&&(b(t)||E(t))&&(l=t,p&&a(s,p,l,h||r.name)),l},{instance:l,identifier:p})):(l=i.instantiate(r,s,h),p&&a(s,p,l,h||r.name),l)}}]}function Xt(){this.$get=["$window",function(t){return Fn(t.document)}]}function Qt(){this.$get=["$log",function(t){return function(e,n){t.error.apply(t,arguments)}}]}function te(t){return b(t)?C(t)?t.toISOString():F(t):t}function ee(){this.$get=function(){return function(t){if(!t)return"";var e=[];return a(t,function(t,n){null===t||g(t)||(nr(t)?o(t,function(t,r){e.push(Y(n)+"="+Y(te(t)))}):e.push(Y(n)+"="+Y(te(t))))}),e.join("&")}}}function ne(){this.$get=function(){return function(t){function e(t,r,i){null===t||g(t)||(nr(t)?o(t,function(t){e(t,r+"[]")}):b(t)&&!C(t)?a(t,function(t,n){e(t,r+(i?"":"[")+n+(i?"":"]"))}):n.push(Y(r)+"="+Y(te(t))))}if(!t)return"";var n=[];return e(t,"",!0),n.join("&")}}}function re(t,e){if(x(t)){var n=t.replace(Gr,"").trim();if(n){var r=e("Content-Type");(r=r&&0===r.indexOf(Lr))||(r=(r=n.match(zr))&&Wr[r[0]].test(n)),r&&(t=_(n))}}return t}function ie(t){var e,n=ut();return x(t)?o(t.split("\n"),function(t){e=t.indexOf(":");var r=Hn(ir(t.substr(0,e)));t=ir(t.substr(e+1)),r&&(n[r]=n[r]?n[r]+", "+t:t)}):b(t)&&o(t,function(t,e){var r=Hn(e),i=ir(t);r&&(n[r]=n[r]?n[r]+", "+i:i)}),n}function oe(t){var e;return function(n){return e||(e=ie(t)),n?(n=e[Hn(n)],void 0===n&&(n=null),n):e}}function ae(t,e,n,r){return E(r)?r(t,e,n):(o(r,function(r){t=r(t,e,n)}),t)}function se(){var t=this.defaults={transformResponse:[re],transformRequest:[function(t){return b(t)&&"[object File]"!==Kn.call(t)&&"[object Blob]"!==Kn.call(t)&&"[object FormData]"!==Kn.call(t)?F(t):t}],headers:{common:{Accept:"application/json, text/plain, */*"},post:D(Hr),put:D(Hr),patch:D(Hr)},xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",paramSerializer:"$httpParamSerializer"},e=!1;this.useApplyAsync=function(t){return y(t)?(e=!!t,this):e};var i=this.interceptors=[];this.$get=["$httpBackend","$$cookieReader","$cacheFactory","$rootScope","$q","$injector",function(a,s,u,c,l,h){function p(e){function i(t){var e=f({},t);return e.data=t.data?ae(t.data,t.headers,t.status,s.transformResponse):t.data,t=t.status,t>=200&&300>t?e:l.reject(e)}function a(t,e){var n,r={};return o(t,function(t,i){E(t)?(n=t(e),null!=n&&(r[i]=n)):r[i]=t}),r}if(!Qn.isObject(e))throw r("$http")("badreq",e);var s=f({method:"get",transformRequest:t.transformRequest,transformResponse:t.transformResponse,paramSerializer:t.paramSerializer},e);s.headers=function(e){var n,r,i,o=t.headers,s=f({},e.headers),o=f({},o.common,o[Hn(e.method)]);t:for(n in o){r=Hn(n);for(i in s)if(Hn(i)===r)continue t;s[n]=o[n]}return a(s,D(e))}(e),s.method=Wn(s.method),s.paramSerializer=x(s.paramSerializer)?h.get(s.paramSerializer):s.paramSerializer;var u=[function(e){var r=e.headers,a=ae(e.data,oe(r),n,e.transformRequest);return g(a)&&o(r,function(t,e){"content-type"===Hn(e)&&delete r[e]}),g(e.withCredentials)&&!g(t.withCredentials)&&(e.withCredentials=t.withCredentials),$(e,a).then(i,i)},n],c=l.when(s);for(o(v,function(t){(t.request||t.requestError)&&u.unshift(t.request,t.requestError),(t.response||t.responseError)&&u.push(t.response,t.responseError)});u.length;){e=u.shift();var p=u.shift(),c=c.then(e,p)}return c.success=function(t){return it(t,"fn"),c.then(function(e){t(e.data,e.status,e.headers,s)}),c},c.error=function(t){return it(t,"fn"),c.then(null,function(e){t(e.data,e.status,e.headers,s)}),c},c}function $(r,i){function o(t,n,r,i){function o(){u(n,t,r,i)}$&&(t>=200&&300>t?$.put(C,[t,n,ie(r),i]):$.remove(C)),e?c.$applyAsync(o):(o(),c.$$phase||c.$apply())}function u(t,e,n,i){e=Math.max(e,0),(e>=200&&300>e?w.resolve:w.reject)({data:t,status:e,headers:oe(n),config:r,statusText:i})}function f(t){u(t.data,t.status,D(t.headers()),t.statusText)}function h(){var t=p.pendingRequests.indexOf(r);-1!==t&&p.pendingRequests.splice(t,1)}var $,v,w=l.defer(),x=w.promise,S=r.headers,C=d(r.url,r.paramSerializer(r.params));return p.pendingRequests.push(r),x.then(h,h),!r.cache&&!t.cache||!1===r.cache||"GET"!==r.method&&"JSONP"!==r.method||($=b(r.cache)?r.cache:b(t.cache)?t.cache:m),$&&(v=$.get(C),y(v)?v&&E(v.then)?v.then(f,f):nr(v)?u(v[1],v[0],D(v[2]),v[3]):u(v,200,{},"OK"):$.put(C,x)),g(v)&&((v=an(r.url)?s()[r.xsrfCookieName||t.xsrfCookieName]:n)&&(S[r.xsrfHeaderName||t.xsrfHeaderName]=v),a(r.method,C,i,o,S,r.timeout,r.withCredentials,r.responseType)),x}function d(t,e){return 0<e.length&&(t+=(-1==t.indexOf("?")?"?":"&")+e),t}var m=u("$http");t.paramSerializer=x(t.paramSerializer)?h.get(t.paramSerializer):t.paramSerializer;var v=[];return o(i,function(t){v.unshift(x(t)?h.get(t):h.invoke(t))}),p.pendingRequests=[],function(t){o(arguments,function(t){p[t]=function(e,n){return p(f({},n||{},{method:t,url:e}))}})}("get","delete","head","jsonp"),function(t){o(arguments,function(t){p[t]=function(e,n,r){return p(f({},r||{},{method:t,url:e,data:n}))}})}("post","put","patch"),p.defaults=t,p}]}function ue(){return new t.XMLHttpRequest}function ce(){this.$get=["$browser","$window","$document",function(t,e,n){return le(t,ue,t.defer,e.angular.callbacks,n[0])}]}function le(t,e,r,i,a){function s(t,e,n){var r=a.createElement("script"),o=null;return r.type="text/javascript",r.src=t,r.async=!0,o=function(t){r.removeEventListener("load",o,!1),r.removeEventListener("error",o,!1),a.body.removeChild(r),r=null;var s=-1,u="unknown";t&&("load"!==t.type||i[e].called||(t={type:"error"}),u=t.type,s="error"===t.type?404:200),n&&n(s,u)},r.addEventListener("load",o,!1),r.addEventListener("error",o,!1),a.body.appendChild(r),o}return function(a,u,c,l,f,h,p,$){function m(){b&&b(),w&&w.abort()}function v(e,i,o,a,s){S!==n&&r.cancel(S),b=w=null,e(i,o,a,s),t.$$completeOutstandingRequest(d)}if(t.$$incOutstandingRequestCount(),u=u||t.url(),"jsonp"==Hn(a)){var g="_"+(i.counter++).toString(36);i[g]=function(t){i[g].data=t,i[g].called=!0};var b=s(u.replace("JSON_CALLBACK","angular.callbacks."+g),g,function(t,e){v(l,t,i[g].data,"",e),i[g]=d})}else{var w=e();if(w.open(a,u,!0),o(f,function(t,e){y(t)&&w.setRequestHeader(e,t)}),w.onload=function(){var t=w.statusText||"",e="response"in w?w.response:w.responseText,n=1223===w.status?204:w.status;0===n&&(n=e?200:"file"==on(u).protocol?404:0),v(l,n,e,w.getAllResponseHeaders(),t)},a=function(){v(l,-1,null,null,"")},w.onerror=a,w.onabort=a,p&&(w.withCredentials=!0),$)try{w.responseType=$}catch(x){if("json"!==$)throw x}w.send(c)}if(h>0)var S=r(m,h);else h&&E(h.then)&&h.then(m)}}function fe(){var t="{{",e="}}";this.startSymbol=function(e){return e?(t=e,this):t},this.endSymbol=function(t){return t?(e=t,this):e},this.$get=["$parse","$exceptionHandler","$sce",function(n,r,i){function o(t){return"\\\\\\"+t}function a(n){return n.replace(l,t).replace(h,e)}function s(o,s,l,h){function p(t){try{var e=t;t=l?i.getTrusted(l,e):i.valueOf(e);var n;if(h&&!y(t))n=t;else if(null==t)n="";else{switch(typeof t){case"string":break;case"number":t=""+t;break;default:t=F(t)}n=t}return n}catch(a){r(Jr.interr(o,a))}}h=!!h;for(var $,d,m=0,v=[],b=[],w=o.length,x=[],S=[];w>m;){if(-1==($=o.indexOf(t,m))||-1==(d=o.indexOf(e,$+u))){m!==w&&x.push(a(o.substring(m)));break}m!==$&&x.push(a(o.substring(m,$))),m=o.substring($+u,d),v.push(m),b.push(n(m,p)),m=d+c,S.push(x.length),x.push("")}if(l&&1<x.length&&Jr.throwNoconcat(o),!s||v.length){var C=function(t){for(var e=0,n=v.length;n>e;e++){if(h&&g(t[e]))return;x[S[e]]=t[e]}return x.join("")};return f(function(t){var e=0,n=v.length,i=Array(n);try{for(;n>e;e++)i[e]=b[e](t);return C(i)}catch(a){r(Jr.interr(o,a))}},{exp:o,expressions:v,$$watchDelegate:function(t,e){var n;return t.$watchGroup(b,function(r,i){var o=C(r);E(e)&&e.call(this,o,r!==i?n:o,t),n=o})}})}}var u=t.length,c=e.length,l=new RegExp(t.replace(/./g,o),"g"),h=new RegExp(e.replace(/./g,o),"g");return s.startSymbol=function(){return t},s.endSymbol=function(){return e},s}]}function he(){this.$get=["$rootScope","$window","$q","$$q",function(t,e,n,r){function i(i,a,s,u){var c=4<arguments.length,l=c?Gn.call(arguments,4):[],f=e.setInterval,h=e.clearInterval,p=0,$=y(u)&&!u,d=($?r:n).defer(),m=d.promise;return s=y(s)?s:0,m.then(null,null,c?function(){i.apply(null,l)}:i),m.$$intervalId=f(function(){d.notify(p++),s>0&&p>=s&&(d.resolve(p),h(m.$$intervalId),delete o[m.$$intervalId]),$||t.$apply()},a),o[m.$$intervalId]=d,m}var o={};return i.cancel=function(t){return t&&t.$$intervalId in o?(o[t.$$intervalId].reject("canceled"),e.clearInterval(t.$$intervalId),delete o[t.$$intervalId],!0):!1},i}]}function pe(){this.$get=function(){return{id:"en-us",NUMBER_FORMATS:{DECIMAL_SEP:".",GROUP_SEP:",",PATTERNS:[{minInt:1,minFrac:0,maxFrac:3,posPre:"",posSuf:"",negPre:"-",negSuf:"",gSize:3,lgSize:3},{minInt:1,minFrac:2,maxFrac:2,posPre:"¤",posSuf:"",negPre:"(¤",negSuf:")",gSize:3,lgSize:3}],CURRENCY_SYM:"$"},DATETIME_FORMATS:{MONTH:"January February March April May June July August September October November December".split(" "),SHORTMONTH:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),DAY:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),SHORTDAY:"Sun Mon Tue Wed Thu Fri Sat".split(" "),AMPMS:["AM","PM"],medium:"MMM d, y h:mm:ss a","short":"M/d/yy h:mm a",fullDate:"EEEE, MMMM d, y",longDate:"MMMM d, y",mediumDate:"MMM d, y",shortDate:"M/d/yy",mediumTime:"h:mm:ss a",shortTime:"h:mm a",ERANAMES:["Before Christ","Anno Domini"],ERAS:["BC","AD"]},pluralCat:function(t){return 1===t?"one":"other"}}}}function $e(t){t=t.split("/");for(var e=t.length;e--;)t[e]=J(t[e]);return t.join("/")}function de(t,e){var n=on(t);e.$$protocol=n.protocol,e.$$host=n.hostname,e.$$port=p(n.port)||Kr[n.protocol]||null}function me(t,e){var n="/"!==t.charAt(0);n&&(t="/"+t);var r=on(t);e.$$path=decodeURIComponent(n&&"/"===r.pathname.charAt(0)?r.pathname.substring(1):r.pathname),e.$$search=W(r.search),e.$$hash=decodeURIComponent(r.hash),e.$$path&&"/"!=e.$$path.charAt(0)&&(e.$$path="/"+e.$$path)}function ve(t,e){return 0===e.indexOf(t)?e.substr(t.length):void 0}function ge(t){var e=t.indexOf("#");return-1==e?t:t.substr(0,e)}function ye(t){return t.replace(/(#.+)|#$/,"$1")}function be(t){return t.substr(0,ge(t).lastIndexOf("/")+1)}function we(t,e){this.$$html5=!0,e=e||"";var r=be(t);de(t,this),this.$$parse=function(t){var e=ve(r,t);if(!x(e))throw Zr("ipthprfx",t,r);me(e,this),this.$$path||(this.$$path="/"),this.$$compose()},this.$$compose=function(){var t=G(this.$$search),e=this.$$hash?"#"+J(this.$$hash):"";this.$$url=$e(this.$$path)+(t?"?"+t:"")+e,this.$$absUrl=r+this.$$url.substr(1)},this.$$parseLinkUrl=function(i,o){if(o&&"#"===o[0])return this.hash(o.slice(1)),!0;var a,s;return(a=ve(t,i))!==n?(s=a,s=(a=ve(e,a))!==n?r+(ve("/",a)||a):t+s):(a=ve(r,i))!==n?s=r+a:r==i+"/"&&(s=r),s&&this.$$parse(s),!!s}}function xe(t,e){var n=be(t);de(t,this),this.$$parse=function(r){r=ve(t,r)||ve(n,r);var i;"#"===r.charAt(0)?(i=ve(e,r),g(i)&&(i=r)):i=this.$$html5?r:"",me(i,this),r=this.$$path;var o=/^\/[A-Z]:(\/.*)/;0===i.indexOf(t)&&(i=i.replace(t,"")),o.exec(i)||(r=(i=o.exec(r))?i[1]:r),this.$$path=r,this.$$compose()},this.$$compose=function(){var n=G(this.$$search),r=this.$$hash?"#"+J(this.$$hash):"";this.$$url=$e(this.$$path)+(n?"?"+n:"")+r,this.$$absUrl=t+(this.$$url?e+this.$$url:"")},this.$$parseLinkUrl=function(e,n){return ge(t)==ge(e)?(this.$$parse(e),!0):!1}}function Se(t,e){this.$$html5=!0,xe.apply(this,arguments);var n=be(t);this.$$parseLinkUrl=function(r,i){if(i&&"#"===i[0])return this.hash(i.slice(1)),!0;var o,a;return t==ge(r)?o=r:(a=ve(n,r))?o=t+e+a:n===r+"/"&&(o=n),o&&this.$$parse(o),!!o},this.$$compose=function(){var n=G(this.$$search),r=this.$$hash?"#"+J(this.$$hash):"";this.$$url=$e(this.$$path)+(n?"?"+n:"")+r,this.$$absUrl=t+e+this.$$url}}function Ce(t){return function(){return this[t]}}function Ee(t,e){return function(n){return g(n)?this[t]:(this[t]=e(n),this.$$compose(),this)}}function ke(){var t="",e={enabled:!1,requireBase:!0,rewriteLinks:!0};this.hashPrefix=function(e){return y(e)?(t=e,this):t},this.html5Mode=function(t){return M(t)?(e.enabled=t,this):b(t)?(M(t.enabled)&&(e.enabled=t.enabled),M(t.requireBase)&&(e.requireBase=t.requireBase),M(t.rewriteLinks)&&(e.rewriteLinks=t.rewriteLinks),this):e},this.$get=["$rootScope","$browser","$sniffer","$rootElement","$window",function(n,r,i,o,a){function s(t,e,n){var i=c.url(),o=c.$$state;try{r.url(t,e,n),c.$$state=r.state()}catch(a){throw c.url(i),c.$$state=o,a}}function u(t,e){n.$broadcast("$locationChangeSuccess",c.absUrl(),t,c.$$state,e)}var c,l;l=r.baseHref();var f,h=r.url();if(e.enabled){if(!l&&e.requireBase)throw Zr("nobase");f=h.substring(0,h.indexOf("/",h.indexOf("//")+2))+(l||"/"),l=i.history?we:Se}else f=ge(h),l=xe;c=new l(f,"#"+t),c.$$parseLinkUrl(h,h),c.$$state=r.state();var p=/^\s*(javascript|mailto):/i;o.on("click",function(t){if(e.rewriteLinks&&!t.ctrlKey&&!t.metaKey&&!t.shiftKey&&2!=t.which&&2!=t.button){for(var i=Fn(t.target);"a"!==N(i[0]);)if(i[0]===o[0]||!(i=i.parent())[0])return;var s=i.prop("href"),u=i.attr("href")||i.attr("xlink:href");b(s)&&"[object SVGAnimatedString]"===s.toString()&&(s=on(s.animVal).href),p.test(s)||!s||i.attr("target")||t.isDefaultPrevented()||!c.$$parseLinkUrl(s,u)||(t.preventDefault(),c.absUrl()!=r.url()&&(n.$apply(),a.angular["ff-684208-preventDefault"]=!0))}}),ye(c.absUrl())!=ye(h)&&r.url(c.absUrl(),!0);var $=!0;return r.onUrlChange(function(t,e){n.$evalAsync(function(){var r,i=c.absUrl(),o=c.$$state;c.$$parse(t),c.$$state=e,r=n.$broadcast("$locationChangeStart",t,i,e,o).defaultPrevented,c.absUrl()===t&&(r?(c.$$parse(i),c.$$state=o,s(i,!1,o)):($=!1,u(i,o)))}),n.$$phase||n.$digest()}),n.$watch(function(){var t=ye(r.url()),e=ye(c.absUrl()),o=r.state(),a=c.$$replace,l=t!==e||c.$$html5&&i.history&&o!==c.$$state;($||l)&&($=!1,n.$evalAsync(function(){var e=c.absUrl(),r=n.$broadcast("$locationChangeStart",e,t,c.$$state,o).defaultPrevented;c.absUrl()===e&&(r?(c.$$parse(t),c.$$state=o):(l&&s(e,a,o===c.$$state?null:c.$$state),u(t,o)))})),c.$$replace=!1}),c}]}function Ae(){var t=!0,e=this;this.debugEnabled=function(e){return y(e)?(t=e,this):t},this.$get=["$window",function(n){function r(t){return t instanceof Error&&(t.stack?t=t.message&&-1===t.stack.indexOf(t.message)?"Error: "+t.message+"\n"+t.stack:t.stack:t.sourceURL&&(t=t.message+"\n"+t.sourceURL+":"+t.line)),t}function i(t){var e=n.console||{},i=e[t]||e.log||d;t=!1;try{t=!!i.apply}catch(a){}return t?function(){var t=[];return o(arguments,function(e){t.push(r(e))}),i.apply(e,t)}:function(t,e){i(t,null==e?"":e)}}return{log:i("log"),info:i("info"),warn:i("warn"),error:i("error"),debug:function(){var n=i("debug");return function(){t&&n.apply(e,arguments)}}()}}]}function Oe(t,e){if("__defineGetter__"===t||"__defineSetter__"===t||"__lookupGetter__"===t||"__lookupSetter__"===t||"__proto__"===t)throw Qr("isecfld",e);return t}function Me(t,e){if(t){if(t.constructor===t)throw Qr("isecfn",e);if(t.window===t)throw Qr("isecwindow",e);if(t.children&&(t.nodeName||t.prop&&t.attr&&t.find))throw Qr("isecdom",e);if(t===Object)throw Qr("isecobj",e)}return t}function Te(t,e){if(t){if(t.constructor===t)throw Qr("isecfn",e);if(t===ti||t===ei||t===ni)throw Qr("isecff",e)}}function Ve(t,e){return"undefined"!=typeof t?t:e}function Ne(t,e){return"undefined"==typeof t?e:"undefined"==typeof e?t:t+e}function je(t,e){var n,r;switch(t.type){case ai.Program:n=!0,o(t.body,function(t){je(t.expression,e),n=n&&t.expression.constant}),t.constant=n;break;case ai.Literal:t.constant=!0,t.toWatch=[];break;case ai.UnaryExpression:je(t.argument,e),t.constant=t.argument.constant,t.toWatch=t.argument.toWatch;break;case ai.BinaryExpression:je(t.left,e),je(t.right,e),t.constant=t.left.constant&&t.right.constant,t.toWatch=t.left.toWatch.concat(t.right.toWatch);break;case ai.LogicalExpression:je(t.left,e),je(t.right,e),t.constant=t.left.constant&&t.right.constant,t.toWatch=t.constant?[]:[t];break;case ai.ConditionalExpression:je(t.test,e),je(t.alternate,e),je(t.consequent,e),t.constant=t.test.constant&&t.alternate.constant&&t.consequent.constant,t.toWatch=t.constant?[]:[t];break;case ai.Identifier:t.constant=!1,t.toWatch=[t];break;case ai.MemberExpression:je(t.object,e),t.computed&&je(t.property,e),t.constant=t.object.constant&&(!t.computed||t.property.constant),t.toWatch=[t];break;case ai.CallExpression:n=t.filter?!e(t.callee.name).$stateful:!1,r=[],o(t.arguments,function(t){je(t,e),n=n&&t.constant,t.constant||r.push.apply(r,t.toWatch)}),t.constant=n,t.toWatch=t.filter&&!e(t.callee.name).$stateful?r:[t];break;case ai.AssignmentExpression:je(t.left,e),je(t.right,e),t.constant=t.left.constant&&t.right.constant,t.toWatch=[t];break;case ai.ArrayExpression:n=!0,r=[],o(t.elements,function(t){je(t,e),n=n&&t.constant,t.constant||r.push.apply(r,t.toWatch)}),t.constant=n,t.toWatch=r;break;case ai.ObjectExpression:n=!0,r=[],o(t.properties,function(t){je(t.value,e),n=n&&t.value.constant,t.value.constant||r.push.apply(r,t.value.toWatch)}),t.constant=n,t.toWatch=r;break;case ai.ThisExpression:t.constant=!1,t.toWatch=[]}}function Pe(t){if(1==t.length){t=t[0].expression;var e=t.toWatch;return 1!==e.length?e:e[0]!==t?e:n}}function De(t){return t.type===ai.Identifier||t.type===ai.MemberExpression}function Ie(t){return 1===t.body.length&&De(t.body[0].expression)?{type:ai.AssignmentExpression,left:t.body[0].expression,right:{type:ai.NGValueParameter},operator:"="}:void 0}function Re(t){return 0===t.body.length||1===t.body.length&&(t.body[0].expression.type===ai.Literal||t.body[0].expression.type===ai.ArrayExpression||t.body[0].expression.type===ai.ObjectExpression)}function qe(t,e){this.astBuilder=t,this.$filter=e}function Ue(t,e){this.astBuilder=t,this.$filter=e}function Fe(t,e,n,r){Me(t,r),e=e.split(".");for(var i,o=0;1<e.length;o++){i=Oe(e.shift(),r);var a=Me(t[i],r);a||(a={},t[i]=a),t=a}return i=Oe(e.shift(),r),Me(t[i],r),t[i]=n}function _e(t){return"constructor"==t}function Be(t){return E(t.valueOf)?t.valueOf():ui.call(t)}function Le(){var t=ut(),e=ut();this.$get=["$filter","$sniffer",function(r,i){function a(t,e){return null==t||null==e?t===e:"object"==typeof t&&(t=Be(t),"object"==typeof t)?!1:t===e||t!==t&&e!==e}function s(t,e,r,i,o){var s,u=i.inputs;if(1===u.length){var c=a,u=u[0];return t.$watch(function(t){var e=u(t);return a(e,c)||(s=i(t,n,n,[e]),c=e&&Be(e)),s},e,r,o)}for(var l=[],f=[],h=0,p=u.length;p>h;h++)l[h]=a,f[h]=null;return t.$watch(function(t){for(var e=!1,r=0,o=u.length;o>r;r++){var c=u[r](t);(e||(e=!a(c,l[r])))&&(f[r]=c,l[r]=c&&Be(c))}return e&&(s=i(t,n,n,f)),s},e,r,o)}function u(t,e,n,r){var i,o;return i=t.$watch(function(t){return r(t)},function(t,n,r){o=t,E(e)&&e.apply(this,arguments),y(t)&&r.$$postDigest(function(){y(o)&&i()})},n)}function c(t,e,n,r){function i(t){var e=!0;return o(t,function(t){y(t)||(e=!1)}),e}var a,s;return a=t.$watch(function(t){return r(t)},function(t,n,r){s=t,E(e)&&e.call(this,t,n,r),i(t)&&r.$$postDigest(function(){i(s)&&a()})},n)}function l(t,e,n,r){var i;return i=t.$watch(function(t){return r(t)},function(t,n,r){E(e)&&e.apply(this,arguments),i()},n)}function f(t,e){if(!e)return t;var n=t.$$watchDelegate,n=n!==c&&n!==u?function(n,r,i,o){return i=t(n,r,i,o),e(i,n,r)}:function(n,r,i,o){return i=t(n,r,i,o),n=e(i,n,r),y(i)?n:i};return t.$$watchDelegate&&t.$$watchDelegate!==s?n.$$watchDelegate=t.$$watchDelegate:e.$stateful||(n.$$watchDelegate=s,n.inputs=t.inputs?t.inputs:[t]),n}var h={csp:i.csp,expensiveChecks:!1},p={csp:i.csp,expensiveChecks:!0};return function(n,i,o){var a,$,m;switch(typeof n){case"string":m=n=n.trim();var v=o?e:t;return a=v[m],a||(":"===n.charAt(0)&&":"===n.charAt(1)&&($=!0,n=n.substring(2)),o=o?p:h,a=new oi(o),a=new si(a,r,o).parse(n),a.constant?a.$$watchDelegate=l:$?a.$$watchDelegate=a.literal?c:u:a.inputs&&(a.$$watchDelegate=s),v[m]=a),f(a,i);case"function":return f(n,i);default:return d}}}]}function He(){this.$get=["$rootScope","$exceptionHandler",function(t,e){return We(function(e){t.$evalAsync(e)},e)}]}function ze(){this.$get=["$browser","$exceptionHandler",function(t,e){return We(function(e){t.defer(e)},e)}]}function We(t,e){function i(t,e,n){function r(e){return function(n){i||(i=!0,e.call(t,n))}}var i=!1;return[r(e),r(n)]}function a(){this.$$state={status:0}}function s(t,e){return function(n){e.call(t,n)}}function u(r){!r.processScheduled&&r.pending&&(r.processScheduled=!0,t(function(){var t,i,o;o=r.pending,r.processScheduled=!1,r.pending=n;for(var a=0,s=o.length;s>a;++a){i=o[a][0],t=o[a][r.status];try{E(t)?i.resolve(t(r.value)):1===r.status?i.resolve(r.value):i.reject(r.value)}catch(u){i.reject(u),e(u)}}}))}function c(){this.promise=new a,this.resolve=s(this,this.resolve),this.reject=s(this,this.reject),this.notify=s(this,this.notify)}var l=r("$q",TypeError);a.prototype={then:function(t,e,n){var r=new c;return this.$$state.pending=this.$$state.pending||[],this.$$state.pending.push([r,t,e,n]),0<this.$$state.status&&u(this.$$state),r.promise},"catch":function(t){return this.then(null,t)},"finally":function(t,e){return this.then(function(e){return h(e,!0,t)},function(e){return h(e,!1,t)},e)}},c.prototype={resolve:function(t){this.promise.$$state.status||(t===this.promise?this.$$reject(l("qcycle",t)):this.$$resolve(t))},$$resolve:function(t){var n,r;r=i(this,this.$$resolve,this.$$reject);try{(b(t)||E(t))&&(n=t&&t.then),E(n)?(this.promise.$$state.status=-1,n.call(t,r[0],r[1],this.notify)):(this.promise.$$state.value=t,this.promise.$$state.status=1,u(this.promise.$$state))}catch(o){r[1](o),e(o)}},reject:function(t){this.promise.$$state.status||this.$$reject(t)},$$reject:function(t){this.promise.$$state.value=t,this.promise.$$state.status=2,u(this.promise.$$state)},notify:function(n){var r=this.promise.$$state.pending;0>=this.promise.$$state.status&&r&&r.length&&t(function(){for(var t,i,o=0,a=r.length;a>o;o++){i=r[o][0],t=r[o][3];try{i.notify(E(t)?t(n):n)}catch(s){e(s)}}})}};var f=function(t,e){var n=new c;return e?n.resolve(t):n.reject(t),n.promise},h=function(t,e,n){var r=null;try{E(n)&&(r=n())}catch(i){return f(i,!1)}return r&&E(r.then)?r.then(function(){return f(t,e)},function(t){return f(t,!1)}):f(t,e)},p=function(t,e,n,r){var i=new c;return i.resolve(t),i.promise.then(e,n,r)},$=function d(t){if(!E(t))throw l("norslvr",t);if(!(this instanceof d))return new d(t);var e=new c;return t(function(t){e.resolve(t)},function(t){e.reject(t)}),e.promise};return $.defer=function(){return new c},$.reject=function(t){var e=new c;return e.reject(t),e.promise},$.when=p,$.all=function(t){var e=new c,n=0,r=nr(t)?[]:{};return o(t,function(t,i){n++,p(t).then(function(t){r.hasOwnProperty(i)||(r[i]=t,--n||e.resolve(r))},function(t){r.hasOwnProperty(i)||e.reject(t)})}),0===n&&e.resolve(r),e.promise},$}function Ge(){this.$get=["$window","$timeout",function(t,e){function n(){for(var t=0;t<l.length;t++){var e=l[t];e&&(l[t]=null,e())}c=l.length=0}function r(t){var e=l.length;return c++,l.push(t),0===e&&(u=s(n)),function(){e>=0&&(e=l[e]=null,0===--c&&u&&(u(),u=null,l.length=0))}}var i=t.requestAnimationFrame||t.webkitRequestAnimationFrame,o=t.cancelAnimationFrame||t.webkitCancelAnimationFrame||t.webkitCancelRequestAnimationFrame,a=!!i,s=a?function(t){var e=i(t);return function(){o(e)}}:function(t){var n=e(t,16.66,!1);return function(){e.cancel(n)}};r.supported=a;var u,c=0,l=[];return r}]}function Je(){function t(t){function e(){this.$$watchers=this.$$nextSibling=this.$$childHead=this.$$childTail=null,this.$$listeners={},this.$$listenerCount={},this.$$watchersCount=0,this.$id=++tr,this.$$ChildScope=null}return e.prototype=t,e}var e=10,n=r("$rootScope"),a=null,s=null;this.digestTtl=function(t){return arguments.length&&(e=t),e},this.$get=["$injector","$exceptionHandler","$parse","$browser",function(r,u,c,l){function f(t){t.currentScope.$$destroyed=!0}function h(){this.$id=++tr,this.$$phase=this.$parent=this.$$watchers=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=null,this.$root=this,this.$$destroyed=!1,this.$$listeners={},this.$$listenerCount={},this.$$watchersCount=0,this.$$isolateBindings=null}function p(t){if(x.$$phase)throw n("inprog",x.$$phase);x.$$phase=t}function $(t,e){do t.$$watchersCount+=e;while(t=t.$parent)}function m(t,e,n){do t.$$listenerCount[n]-=e,0===t.$$listenerCount[n]&&delete t.$$listenerCount[n];while(t=t.$parent)}function v(){}function y(){for(;k.length;)try{k.shift()()}catch(t){u(t)}s=null}function w(){null===s&&(s=l.defer(function(){x.$apply(y)}))}h.prototype={constructor:h,$new:function(e,n){var r;return n=n||this,e?(r=new h,r.$root=this.$root):(this.$$ChildScope||(this.$$ChildScope=t(this)),r=new this.$$ChildScope),r.$parent=n,r.$$prevSibling=n.$$childTail,n.$$childHead?(n.$$childTail.$$nextSibling=r,n.$$childTail=r):n.$$childHead=n.$$childTail=r,(e||n!=this)&&r.$on("$destroy",f),r},$watch:function(t,e,n,r){var i=c(t);if(i.$$watchDelegate)return i.$$watchDelegate(this,e,n,i,t);var o=this,s=o.$$watchers,u={fn:e,last:v,get:i,exp:r||t,eq:!!n};return a=null,E(e)||(u.fn=d),s||(s=o.$$watchers=[]),s.unshift(u),$(this,1),function(){0<=j(s,u)&&$(o,-1),a=null}},$watchGroup:function(t,e){function n(){u=!1,c?(c=!1,e(i,i,s)):e(i,r,s)}var r=Array(t.length),i=Array(t.length),a=[],s=this,u=!1,c=!0;if(!t.length){var l=!0;return s.$evalAsync(function(){l&&e(i,i,s)}),function(){l=!1}}return 1===t.length?this.$watch(t[0],function(t,n,o){i[0]=t,r[0]=n,e(i,t===n?i:r,o)}):(o(t,function(t,e){var o=s.$watch(t,function(t,o){i[e]=t,r[e]=o,u||(u=!0,s.$evalAsync(n))});a.push(o)}),function(){for(;a.length;)a.shift()()})},$watchCollection:function(t,e){function n(t){r=t;var e,n,a,s;if(!g(r)){if(b(r))if(i(r))for(o!==h&&(o=h,d=o.length=0,l++),t=r.length,d!==t&&(l++,o.length=d=t),e=0;t>e;e++)s=o[e],a=r[e],n=s!==s&&a!==a,n||s===a||(l++,o[e]=a);else{o!==p&&(o=p={},d=0,l++),t=0;for(e in r)r.hasOwnProperty(e)&&(t++,a=r[e],s=o[e],e in o?(n=s!==s&&a!==a,n||s===a||(l++,o[e]=a)):(d++,o[e]=a,l++));if(d>t)for(e in l++,o)r.hasOwnProperty(e)||(d--,delete o[e])}else o!==r&&(o=r,l++);return l}}n.$stateful=!0;var r,o,a,s=this,u=1<e.length,l=0,f=c(t,n),h=[],p={},$=!0,d=0;return this.$watch(f,function(){if($?($=!1,e(r,r,s)):e(r,a,s),u)if(b(r))if(i(r)){a=Array(r.length);for(var t=0;t<r.length;t++)a[t]=r[t]}else for(t in a={},r)zn.call(r,t)&&(a[t]=r[t]);else a=r})},$digest:function(){var t,r,i,o,c,f,h,$,d,m=e,g=[];p("$digest"),l.$$checkUrlChange(),this===x&&null!==s&&(l.defer.cancel(s),y()),a=null;do{for(f=!1,h=this;S.length;){try{d=S.shift(),d.scope.$eval(d.expression,d.locals)}catch(b){u(b)}a=null}t:do{if(o=h.$$watchers)for(c=o.length;c--;)try{if(t=o[c])if((r=t.get(h))===(i=t.last)||(t.eq?I(r,i):"number"==typeof r&&"number"==typeof i&&isNaN(r)&&isNaN(i))){if(t===a){f=!1;break t}}else f=!0,a=t,t.last=t.eq?P(r,null):r,t.fn(r,i===v?r:i,h),5>m&&($=4-m,g[$]||(g[$]=[]),g[$].push({msg:E(t.exp)?"fn: "+(t.exp.name||t.exp.toString()):t.exp,newVal:r,oldVal:i}))}catch(w){u(w)}if(!(o=h.$$watchersCount&&h.$$childHead||h!==this&&h.$$nextSibling))for(;h!==this&&!(o=h.$$nextSibling);)h=h.$parent;

}while(h=o);if((f||S.length)&&!m--)throw x.$$phase=null,n("infdig",e,g)}while(f||S.length);for(x.$$phase=null;C.length;)try{C.shift()()}catch(k){u(k)}},$destroy:function(){if(!this.$$destroyed){var t=this.$parent;this.$broadcast("$destroy"),this.$$destroyed=!0,this===x&&l.$$applicationDestroyed(),$(this,-this.$$watchersCount);for(var e in this.$$listenerCount)m(this,this.$$listenerCount[e],e);t&&t.$$childHead==this&&(t.$$childHead=this.$$nextSibling),t&&t.$$childTail==this&&(t.$$childTail=this.$$prevSibling),this.$$prevSibling&&(this.$$prevSibling.$$nextSibling=this.$$nextSibling),this.$$nextSibling&&(this.$$nextSibling.$$prevSibling=this.$$prevSibling),this.$destroy=this.$digest=this.$apply=this.$evalAsync=this.$applyAsync=d,this.$on=this.$watch=this.$watchGroup=function(){return d},this.$$listeners={},this.$parent=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=this.$root=this.$$watchers=null}},$eval:function(t,e){return c(t)(this,e)},$evalAsync:function(t,e){x.$$phase||S.length||l.defer(function(){S.length&&x.$digest()}),S.push({scope:this,expression:t,locals:e})},$$postDigest:function(t){C.push(t)},$apply:function(t){try{return p("$apply"),this.$eval(t)}catch(e){u(e)}finally{x.$$phase=null;try{x.$digest()}catch(n){throw u(n),n}}},$applyAsync:function(t){function e(){n.$eval(t)}var n=this;t&&k.push(e),w()},$on:function(t,e){var n=this.$$listeners[t];n||(this.$$listeners[t]=n=[]),n.push(e);var r=this;do r.$$listenerCount[t]||(r.$$listenerCount[t]=0),r.$$listenerCount[t]++;while(r=r.$parent);var i=this;return function(){var r=n.indexOf(e);-1!==r&&(n[r]=null,m(i,1,t))}},$emit:function(t,e){var n,r,i,o=[],a=this,s=!1,c={name:t,targetScope:a,stopPropagation:function(){s=!0},preventDefault:function(){c.defaultPrevented=!0},defaultPrevented:!1},l=R([c],arguments,1);do{for(n=a.$$listeners[t]||o,c.currentScope=a,r=0,i=n.length;i>r;r++)if(n[r])try{n[r].apply(null,l)}catch(f){u(f)}else n.splice(r,1),r--,i--;if(s)return c.currentScope=null,c;a=a.$parent}while(a);return c.currentScope=null,c},$broadcast:function(t,e){var n=this,r=this,i={name:t,targetScope:this,preventDefault:function(){i.defaultPrevented=!0},defaultPrevented:!1};if(!this.$$listenerCount[t])return i;for(var o,a,s=R([i],arguments,1);n=r;){for(i.currentScope=n,r=n.$$listeners[t]||[],o=0,a=r.length;a>o;o++)if(r[o])try{r[o].apply(null,s)}catch(c){u(c)}else r.splice(o,1),o--,a--;if(!(r=n.$$listenerCount[t]&&n.$$childHead||n!==this&&n.$$nextSibling))for(;n!==this&&!(r=n.$$nextSibling);)n=n.$parent}return i.currentScope=null,i}};var x=new h,S=x.$$asyncQueue=[],C=x.$$postDigestQueue=[],k=x.$$applyAsyncQueue=[];return x}]}function Ye(){var t=/^\s*(https?|ftp|mailto|tel|file):/,e=/^\s*((https?|ftp|file|blob):|data:image\/)/;this.aHrefSanitizationWhitelist=function(e){return y(e)?(t=e,this):t},this.imgSrcSanitizationWhitelist=function(t){return y(t)?(e=t,this):e},this.$get=function(){return function(n,r){var i,o=r?e:t;return i=on(n).href,""===i||i.match(o)?n:"unsafe:"+i}}}function Ke(t){if("self"===t)return t;if(x(t)){if(-1<t.indexOf("***"))throw ci("iwcard",t);return t=or(t).replace("\\*\\*",".*").replace("\\*","[^:/.?&;]*"),new RegExp("^"+t+"$")}if(k(t))return new RegExp("^"+t.source+"$");throw ci("imatcher")}function Ze(t){var e=[];return y(t)&&o(t,function(t){e.push(Ke(t))}),e}function Xe(){this.SCE_CONTEXTS=li;var t=["self"],e=[];this.resourceUrlWhitelist=function(e){return arguments.length&&(t=Ze(e)),t},this.resourceUrlBlacklist=function(t){return arguments.length&&(e=Ze(t)),e},this.$get=["$injector",function(r){function i(t,e){return"self"===t?an(e):!!t.exec(e.href)}function o(t){var e=function(t){this.$$unwrapTrustedValue=function(){return t}};return t&&(e.prototype=new t),e.prototype.valueOf=function(){return this.$$unwrapTrustedValue()},e.prototype.toString=function(){return this.$$unwrapTrustedValue().toString()},e}var a=function(t){throw ci("unsafe")};r.has("$sanitize")&&(a=r.get("$sanitize"));var s=o(),u={};return u[li.HTML]=o(s),u[li.CSS]=o(s),u[li.URL]=o(s),u[li.JS]=o(s),u[li.RESOURCE_URL]=o(u[li.URL]),{trustAs:function(t,e){var r=u.hasOwnProperty(t)?u[t]:null;if(!r)throw ci("icontext",t,e);if(null===e||e===n||""===e)return e;if("string"!=typeof e)throw ci("itype",t);return new r(e)},getTrusted:function(r,o){if(null===o||o===n||""===o)return o;var s=u.hasOwnProperty(r)?u[r]:null;if(s&&o instanceof s)return o.$$unwrapTrustedValue();if(r===li.RESOURCE_URL){var c,l,s=on(o.toString()),f=!1;for(c=0,l=t.length;l>c;c++)if(i(t[c],s)){f=!0;break}if(f)for(c=0,l=e.length;l>c;c++)if(i(e[c],s)){f=!1;break}if(f)return o;throw ci("insecurl",o.toString())}if(r===li.HTML)return a(o);throw ci("unsafe")},valueOf:function(t){return t instanceof s?t.$$unwrapTrustedValue():t}}}]}function Qe(){var t=!0;this.enabled=function(e){return arguments.length&&(t=!!e),t},this.$get=["$parse","$sceDelegate",function(e,n){if(t&&8>Un)throw ci("iequirks");var r=D(li);r.isEnabled=function(){return t},r.trustAs=n.trustAs,r.getTrusted=n.getTrusted,r.valueOf=n.valueOf,t||(r.trustAs=r.getTrusted=function(t,e){return e},r.valueOf=m),r.parseAs=function(t,n){var i=e(n);return i.literal&&i.constant?i:e(n,function(e){return r.getTrusted(t,e)})};var i=r.parseAs,a=r.getTrusted,s=r.trustAs;return o(li,function(t,e){var n=Hn(e);r[ft("parse_as_"+n)]=function(e){return i(t,e)},r[ft("get_trusted_"+n)]=function(e){return a(t,e)},r[ft("trust_as_"+n)]=function(e){return s(t,e)}}),r}]}function tn(){this.$get=["$window","$document",function(t,e){var n,r={},i=p((/android (\d+)/.exec(Hn((t.navigator||{}).userAgent))||[])[1]),o=/Boxee/i.test((t.navigator||{}).userAgent),a=e[0]||{},s=/^(Moz|webkit|ms)(?=[A-Z])/,u=a.body&&a.body.style,c=!1,l=!1;if(u){for(var f in u)if(c=s.exec(f)){n=c[0],n=n.substr(0,1).toUpperCase()+n.substr(1);break}n||(n="WebkitOpacity"in u&&"webkit"),c=!!("transition"in u||n+"Transition"in u),l=!!("animation"in u||n+"Animation"in u),!i||c&&l||(c=x(u.webkitTransition),l=x(u.webkitAnimation))}return{history:!(!t.history||!t.history.pushState||4>i||o),hasEvent:function(t){if("input"===t&&11>=Un)return!1;if(g(r[t])){var e=a.createElement("div");r[t]="on"+t in e}return r[t]},csp:ar(),vendorPrefix:n,transitions:c,animations:l,android:i}}]}function en(){this.$get=["$templateCache","$http","$q",function(t,e,n){function r(i,o){r.totalPendingRequests++;var a=e.defaults&&e.defaults.transformResponse;return nr(a)?a=a.filter(function(t){return t!==re}):a===re&&(a=null),e.get(i,{cache:t,transformResponse:a})["finally"](function(){r.totalPendingRequests--}).then(function(e){return t.put(i,e.data),e.data},function(t){if(!o)throw Ur("tpload",i,t.status,t.statusText);return n.reject(t)})}return r.totalPendingRequests=0,r}]}function nn(){this.$get=["$rootScope","$browser","$location",function(t,e,n){return{findBindings:function(t,e,n){t=t.getElementsByClassName("ng-binding");var r=[];return o(t,function(t){var i=Qn.element(t).data("$binding");i&&o(i,function(i){n?new RegExp("(^|\\s)"+or(e)+"(\\s|\\||$)").test(i)&&r.push(t):-1!=i.indexOf(e)&&r.push(t)})}),r},findModels:function(t,e,n){for(var r=["ng-","data-ng-","ng\\:"],i=0;i<r.length;++i){var o=t.querySelectorAll("["+r[i]+"model"+(n?"=":"*=")+'"'+e+'"]');if(o.length)return o}},getLocation:function(){return n.url()},setLocation:function(e){e!==n.url()&&(n.url(e),t.$digest())},whenStable:function(t){e.notifyWhenNoOutstandingRequests(t)}}}]}function rn(){this.$get=["$rootScope","$browser","$q","$$q","$exceptionHandler",function(t,e,n,r,i){function o(o,s,u){E(o)||(u=s,s=o,o=d);var c,l=Gn.call(arguments,3),f=y(u)&&!u,h=(f?r:n).defer(),p=h.promise;return c=e.defer(function(){try{h.resolve(o.apply(null,l))}catch(e){h.reject(e),i(e)}finally{delete a[p.$$timeoutId]}f||t.$apply()},s),p.$$timeoutId=c,a[c]=h,p}var a={};return o.cancel=function(t){return t&&t.$$timeoutId in a?(a[t.$$timeoutId].reject("canceled"),delete a[t.$$timeoutId],e.defer.cancel(t.$$timeoutId)):!1},o}]}function on(t){return Un&&(fi.setAttribute("href",t),t=fi.href),fi.setAttribute("href",t),{href:fi.href,protocol:fi.protocol?fi.protocol.replace(/:$/,""):"",host:fi.host,search:fi.search?fi.search.replace(/^\?/,""):"",hash:fi.hash?fi.hash.replace(/^#/,""):"",hostname:fi.hostname,port:fi.port,pathname:"/"===fi.pathname.charAt(0)?fi.pathname:"/"+fi.pathname}}function an(t){return t=x(t)?on(t):t,t.protocol===hi.protocol&&t.host===hi.host}function sn(){this.$get=v(t)}function un(t){function e(t){try{return decodeURIComponent(t)}catch(e){return t}}var r=t[0]||{},i={},o="";return function(){var t,a,s,u,c;if(t=r.cookie||"",t!==o)for(o=t,t=o.split("; "),i={},s=0;s<t.length;s++)a=t[s],u=a.indexOf("="),u>0&&(c=e(a.substring(0,u)),i[c]===n&&(i[c]=e(a.substring(u+1))));return i}}function cn(){this.$get=un}function ln(t){function e(n,r){if(b(n)){var i={};return o(n,function(t,n){i[n]=e(n,t)}),i}return t.factory(n+"Filter",r)}this.register=e,this.$get=["$injector",function(t){return function(e){return t.get(e+"Filter")}}],e("currency",dn),e("date",Cn),e("filter",fn),e("json",En),e("limitTo",kn),e("lowercase",vi),e("number",mn),e("orderBy",An),e("uppercase",gi)}function fn(){return function(t,e,n){if(!i(t)){if(null==t)return t;throw r("filter")("notarray",t)}var o;switch($n(e)){case"function":break;case"boolean":case"null":case"number":case"string":o=!0;case"object":e=hn(e,n,o);break;default:return t}return Array.prototype.filter.call(t,e)}}function hn(t,e,n){var r=b(t)&&"$"in t;return!0===e?e=I:E(e)||(e=function(t,e){if(g(t))return!1;if(null===t||null===e)return t===e;var n;return!(n=b(e))&&(n=b(t))&&(n=t,n=!(E(n.toString)&&n.toString!==Object.prototype.toString)),n?!1:(t=Hn(""+t),e=Hn(""+e),-1!==t.indexOf(e))}),function(i){return r&&!b(i)?pn(i,t.$,e,!1):pn(i,t,e,n)}}function pn(t,e,n,r,i){var o=$n(t),a=$n(e);if("string"===a&&"!"===e.charAt(0))return!pn(t,e.substring(1),n,r);if(nr(t))return t.some(function(t){return pn(t,e,n,r)});switch(o){case"object":var s;if(r){for(s in t)if("$"!==s.charAt(0)&&pn(t[s],e,n,!0))return!0;return i?!1:pn(t,e,n,!1)}if("object"===a){for(s in e)if(i=e[s],!E(i)&&!g(i)&&(o="$"===s,!pn(o?t:t[s],i,n,o,o)))return!1;return!0}return n(t,e);case"function":return!1;default:return n(t,e)}}function $n(t){return null===t?"null":typeof t}function dn(t){var e=t.NUMBER_FORMATS;return function(t,n,r){return g(n)&&(n=e.CURRENCY_SYM),g(r)&&(r=e.PATTERNS[1].maxFrac),null==t?t:vn(t,e.PATTERNS[1],e.GROUP_SEP,e.DECIMAL_SEP,r).replace(/\u00A4/g,n)}}function mn(t){var e=t.NUMBER_FORMATS;return function(t,n){return null==t?t:vn(t,e.PATTERNS[0],e.GROUP_SEP,e.DECIMAL_SEP,n)}}function vn(t,e,n,r,i){if(b(t))return"";var o=0>t;t=Math.abs(t);var a=1/0===t;if(!a&&!isFinite(t))return"";var s=t+"",u="",c=!1,l=[];if(a&&(u="∞"),!a&&-1!==s.indexOf("e")){var f=s.match(/([\d\.]+)e(-?)(\d+)/);f&&"-"==f[2]&&f[3]>i+1?t=0:(u=s,c=!0)}if(a||c)i>0&&1>t&&(u=t.toFixed(i),t=parseFloat(u));else{a=(s.split(pi)[1]||"").length,g(i)&&(i=Math.min(Math.max(e.minFrac,a),e.maxFrac)),t=+(Math.round(+(t.toString()+"e"+i)).toString()+"e"+-i);var a=(""+t).split(pi),s=a[0],a=a[1]||"",f=0,h=e.lgSize,p=e.gSize;if(s.length>=h+p)for(f=s.length-h,c=0;f>c;c++)0===(f-c)%p&&0!==c&&(u+=n),u+=s.charAt(c);for(c=f;c<s.length;c++)0===(s.length-c)%h&&0!==c&&(u+=n),u+=s.charAt(c);for(;a.length<i;)a+="0";i&&"0"!==i&&(u+=r+a.substr(0,i))}return 0===t&&(o=!1),l.push(o?e.negPre:e.posPre,u,o?e.negSuf:e.posSuf),l.join("")}function gn(t,e,n){var r="";for(0>t&&(r="-",t=-t),t=""+t;t.length<e;)t="0"+t;return n&&(t=t.substr(t.length-e)),r+t}function yn(t,e,n,r){return n=n||0,function(i){return i=i["get"+t](),(n>0||i>-n)&&(i+=n),0===i&&-12==n&&(i=12),gn(i,e,r)}}function bn(t,e){return function(n,r){var i=n["get"+t](),o=Wn(e?"SHORT"+t:t);return r[o][i]}}function wn(t){var e=new Date(t,0,1).getDay();return new Date(t,0,(4>=e?5:12)-e)}function xn(t){return function(e){var n=wn(e.getFullYear());return e=+new Date(e.getFullYear(),e.getMonth(),e.getDate()+(4-e.getDay()))-+n,e=1+Math.round(e/6048e5),gn(e,t)}}function Sn(t,e){return 0>=t.getFullYear()?e.ERAS[0]:e.ERAS[1]}function Cn(t){function e(t){var e;if(e=t.match(n)){t=new Date(0);var r=0,i=0,o=e[8]?t.setUTCFullYear:t.setFullYear,a=e[8]?t.setUTCHours:t.setHours;e[9]&&(r=p(e[9]+e[10]),i=p(e[9]+e[11])),o.call(t,p(e[1]),p(e[2])-1,p(e[3])),r=p(e[4]||0)-r,i=p(e[5]||0)-i,o=p(e[6]||0),e=Math.round(1e3*parseFloat("0."+(e[7]||0))),a.call(t,r,i,o,e)}return t}var n=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;return function(n,r,i){var a,s,u="",c=[];if(r=r||"mediumDate",r=t.DATETIME_FORMATS[r]||r,x(n)&&(n=mi.test(n)?p(n):e(n)),S(n)&&(n=new Date(n)),!C(n)||!isFinite(n.getTime()))return n;for(;r;)(s=di.exec(r))?(c=R(c,s,1),r=c.pop()):(c.push(r),r=null);var l=n.getTimezoneOffset();return i&&(l=B(i,n.getTimezoneOffset()),n=L(n,i,!0)),o(c,function(e){a=$i[e],u+=a?a(n,t.DATETIME_FORMATS,l):e.replace(/(^'|'$)/g,"").replace(/''/g,"'")}),u}}function En(){return function(t,e){return g(e)&&(e=2),F(t,e)}}function kn(){return function(t,e,n){return e=1/0===Math.abs(Number(e))?Number(e):p(e),isNaN(e)?t:(S(t)&&(t=t.toString()),nr(t)||x(t)?(n=!n||isNaN(n)?0:p(n),n=0>n&&n>=-t.length?t.length+n:n,e>=0?t.slice(n,n+e):0===n?t.slice(e,t.length):t.slice(Math.max(0,n+e),n)):t)}}function An(t){return function(e,n,r){function o(t,e){return e?function(e,n){return t(n,e)}:t}function a(t){switch(typeof t){case"number":case"boolean":case"string":return!0;default:return!1}}function s(t){return null===t?"null":"function"==typeof t.valueOf&&(t=t.valueOf(),a(t))||"function"==typeof t.toString&&(t=t.toString(),a(t))?t:""}function u(t,e){var n=typeof t,r=typeof e;return n===r&&"object"===n&&(t=s(t),e=s(e)),n===r?("string"===n&&(t=t.toLowerCase(),e=e.toLowerCase()),t===e?0:e>t?-1:1):r>n?-1:1}return i(e)?(n=nr(n)?n:[n],0===n.length&&(n=["+"]),n=n.map(function(e){var n=!1,r=e||m;if(x(e)){if(("+"==e.charAt(0)||"-"==e.charAt(0))&&(n="-"==e.charAt(0),e=e.substring(1)),""===e)return o(u,n);if(r=t(e),r.constant){var i=r();return o(function(t,e){return u(t[i],e[i])},n)}}return o(function(t,e){return u(r(t),r(e))},n)}),Gn.call(e).sort(o(function(t,e){for(var r=0;r<n.length;r++){var i=n[r](t,e);if(0!==i)return i}return 0},r))):e}}function On(t){return E(t)&&(t={link:t}),t.restrict=t.restrict||"AC",v(t)}function Mn(t,e,r,i,a){var s=this,u=[],c=s.$$parentForm=t.parent().controller("form")||wi;s.$error={},s.$$success={},s.$pending=n,s.$name=a(e.name||e.ngForm||"")(r),s.$dirty=!1,s.$pristine=!0,s.$valid=!0,s.$invalid=!1,s.$submitted=!1,c.$addControl(s),s.$rollbackViewValue=function(){o(u,function(t){t.$rollbackViewValue()})},s.$commitViewValue=function(){o(u,function(t){t.$commitViewValue()})},s.$addControl=function(t){ot(t.$name,"input"),u.push(t),t.$name&&(s[t.$name]=t)},s.$$renameControl=function(t,e){var n=t.$name;s[n]===t&&delete s[n],s[e]=t,t.$name=e},s.$removeControl=function(t){t.$name&&s[t.$name]===t&&delete s[t.$name],o(s.$pending,function(e,n){s.$setValidity(n,null,t)}),o(s.$error,function(e,n){s.$setValidity(n,null,t)}),o(s.$$success,function(e,n){s.$setValidity(n,null,t)}),j(u,t)},Rn({ctrl:this,$element:t,set:function(t,e,n){var r=t[e];r?-1===r.indexOf(n)&&r.push(n):t[e]=[n]},unset:function(t,e,n){var r=t[e];r&&(j(r,n),0===r.length&&delete t[e])},parentForm:c,$animate:i}),s.$setDirty=function(){i.removeClass(t,no),i.addClass(t,ro),s.$dirty=!0,s.$pristine=!1,c.$setDirty()},s.$setPristine=function(){i.setClass(t,no,ro+" ng-submitted"),s.$dirty=!1,s.$pristine=!0,s.$submitted=!1,o(u,function(t){t.$setPristine()})},s.$setUntouched=function(){o(u,function(t){t.$setUntouched()})},s.$setSubmitted=function(){i.addClass(t,"ng-submitted"),s.$submitted=!0,c.$setSubmitted()}}function Tn(t){t.$formatters.push(function(e){return t.$isEmpty(e)?e:e.toString()})}function Vn(t,e,n,r,i,o){var a=Hn(e[0].type);if(!i.android){var s=!1;e.on("compositionstart",function(t){s=!0}),e.on("compositionend",function(){s=!1,u()})}var u=function(t){if(c&&(o.defer.cancel(c),c=null),!s){var i=e.val();t=t&&t.type,"password"===a||n.ngTrim&&"false"===n.ngTrim||(i=ir(i)),(r.$viewValue!==i||""===i&&r.$$hasNativeValidators)&&r.$setViewValue(i,t)}};if(i.hasEvent("input"))e.on("input",u);else{var c,l=function(t,e,n){c||(c=o.defer(function(){c=null,e&&e.value===n||u(t)}))};e.on("keydown",function(t){var e=t.keyCode;91===e||e>15&&19>e||e>=37&&40>=e||l(t,this,this.value)}),i.hasEvent("paste")&&e.on("paste cut",l)}e.on("change",u),r.$render=function(){e.val(r.$isEmpty(r.$viewValue)?"":r.$viewValue)}}function Nn(t,e){return function(n,r){var i,a;if(C(n))return n;if(x(n)){if('"'==n.charAt(0)&&'"'==n.charAt(n.length-1)&&(n=n.substring(1,n.length-1)),Ei.test(n))return new Date(n);if(t.lastIndex=0,i=t.exec(n))return i.shift(),a=r?{yyyy:r.getFullYear(),MM:r.getMonth()+1,dd:r.getDate(),HH:r.getHours(),mm:r.getMinutes(),ss:r.getSeconds(),sss:r.getMilliseconds()/1e3}:{yyyy:1970,MM:1,dd:1,HH:0,mm:0,ss:0,sss:0},o(i,function(t,n){n<e.length&&(a[e[n]]=+t)}),new Date(a.yyyy,a.MM-1,a.dd,a.HH,a.mm,a.ss||0,1e3*a.sss||0)}return 0/0}}function jn(t,e,r,i){return function(o,a,s,u,c,l,f){function h(t){return t&&!(t.getTime&&t.getTime()!==t.getTime())}function p(t){return y(t)?C(t)?t:r(t):n}Pn(o,a,s,u),Vn(o,a,s,u,c,l);var $,d=u&&u.$options&&u.$options.timezone;if(u.$$parserName=t,u.$parsers.push(function(t){return u.$isEmpty(t)?null:e.test(t)?(t=r(t,$),d&&(t=L(t,d)),t):n}),u.$formatters.push(function(t){if(t&&!C(t))throw oo("datefmt",t);return h(t)?(($=t)&&d&&($=L($,d,!0)),f("date")(t,i,d)):($=null,"")}),y(s.min)||s.ngMin){var m;u.$validators.min=function(t){return!h(t)||g(m)||r(t)>=m},s.$observe("min",function(t){m=p(t),u.$validate()})}if(y(s.max)||s.ngMax){var v;u.$validators.max=function(t){return!h(t)||g(v)||r(t)<=v},s.$observe("max",function(t){v=p(t),u.$validate()})}}}function Pn(t,e,r,i){(i.$$hasNativeValidators=b(e[0].validity))&&i.$parsers.push(function(t){var r=e.prop("validity")||{};return r.badInput&&!r.typeMismatch?n:t})}function Dn(t,e,n,i,o){if(y(i)){if(t=t(i),!t.constant)throw r("ngModel")("constexpr",n,i);return t(e)}return o}function In(t,e){return t="ngClass"+t,["$animate",function(n){function r(t,e){var n=[],r=0;t:for(;r<t.length;r++){for(var i=t[r],o=0;o<e.length;o++)if(i==e[o])continue t;n.push(i)}return n}function i(t){var e=[];return nr(t)?(o(t,function(t){e=e.concat(i(t))}),e):x(t)?t.split(" "):b(t)?(o(t,function(t,n){t&&(e=e.concat(n.split(" ")))}),e):t}return{restrict:"AC",link:function(a,s,u){function c(t,e){var n=s.data("$classCounts")||ut(),r=[];return o(t,function(t){(e>0||n[t])&&(n[t]=(n[t]||0)+e,n[t]===+(e>0)&&r.push(t))}),s.data("$classCounts",n),r.join(" ")}function l(t){if(!0===e||a.$index%2===e){var o=i(t||[]);if(f){if(!I(t,f)){var l=i(f),h=r(o,l),o=r(l,o),h=c(h,1),o=c(o,-1);h&&h.length&&n.addClass(s,h),o&&o.length&&n.removeClass(s,o)}}else{var h=c(o,1);u.$addClass(h)}}f=D(t)}var f;a.$watch(u[t],l,!0),u.$observe("class",function(e){l(a.$eval(u[t]))}),"ngClass"!==t&&a.$watch("$index",function(n,r){var o=1&n;if(o!==(1&r)){var s=i(a.$eval(u[t]));o===e?(o=c(s,1),u.$addClass(o)):(o=c(s,-1),u.$removeClass(o))}})}}}]}function Rn(t){function e(t,e){e&&!a[t]?(l.addClass(o,t),a[t]=!0):!e&&a[t]&&(l.removeClass(o,t),a[t]=!1)}function r(t,n){t=t?"-"+et(t,"-"):"",e(to+t,!0===n),e(eo+t,!1===n)}var i=t.ctrl,o=t.$element,a={},s=t.set,u=t.unset,c=t.parentForm,l=t.$animate;a[eo]=!(a[to]=o.hasClass(to)),i.$setValidity=function(t,o,a){o===n?(i.$pending||(i.$pending={}),s(i.$pending,t,a)):(i.$pending&&u(i.$pending,t,a),qn(i.$pending)&&(i.$pending=n)),M(o)?o?(u(i.$error,t,a),s(i.$$success,t,a)):(s(i.$error,t,a),u(i.$$success,t,a)):(u(i.$error,t,a),u(i.$$success,t,a)),i.$pending?(e(io,!0),i.$valid=i.$invalid=n,r("",null)):(e(io,!1),i.$valid=qn(i.$error),i.$invalid=!i.$valid,r("",i.$valid)),o=i.$pending&&i.$pending[t]?n:i.$error[t]?!1:i.$$success[t]?!0:null,r(t,o),c.$setValidity(t,o,i)}}function qn(t){if(t)for(var e in t)return!1;return!0}var Un,Fn,_n,Bn,Ln=/^\/(.+)\/([a-z]*)$/,Hn=function(t){return x(t)?t.toLowerCase():t},zn=Object.prototype.hasOwnProperty,Wn=function(t){return x(t)?t.toUpperCase():t},Gn=[].slice,Jn=[].splice,Yn=[].push,Kn=Object.prototype.toString,Zn=Object.getPrototypeOf,Xn=r("ng"),Qn=t.angular||(t.angular={}),tr=0;Un=e.documentMode,d.$inject=[],m.$inject=[];var er,nr=Array.isArray,rr=/^\[object (Uint8(Clamped)?)|(Uint16)|(Uint32)|(Int8)|(Int16)|(Int32)|(Float(32)|(64))Array\]$/,ir=function(t){return x(t)?t.trim():t},or=function(t){return t.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")},ar=function(){if(y(ar.isActive_))return ar.isActive_;var t=!(!e.querySelector("[ng-csp]")&&!e.querySelector("[data-ng-csp]"));if(!t)try{new Function("")}catch(n){t=!0}return ar.isActive_=t},sr=function(){if(y(sr.name_))return sr.name_;var t,n,r,i,o=ur.length;for(n=0;o>n;++n)if(r=ur[n],t=e.querySelector("["+r.replace(":","\\:")+"jq]")){i=t.getAttribute(r+"jq");break}return sr.name_=i},ur=["ng-","data-ng-","ng:","x-ng-"],cr=/[A-Z]/g,lr=!1,fr=1,hr=3,pr={full:"1.4.0",major:1,minor:4,dot:0,codeName:"jaracimrman-existence"};$t.expando="ng339";var $r=$t.cache={},dr=1;$t._data=function(t){return this.cache[t[this.expando]]||{}};var mr=/([\:\-\_]+(.))/g,vr=/^moz([A-Z])/,gr={mouseleave:"mouseout",mouseenter:"mouseover"},yr=r("jqLite"),br=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,wr=/<|&#?\w+;/,xr=/<([\w:]+)/,Sr=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,Cr={option:[1,'<select multiple="multiple">',"</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Cr.optgroup=Cr.option,Cr.tbody=Cr.tfoot=Cr.colgroup=Cr.caption=Cr.thead,Cr.th=Cr.td;var Er=$t.prototype={ready:function(n){function r(){i||(i=!0,n())}var i=!1;"complete"===e.readyState?setTimeout(r):(this.on("DOMContentLoaded",r),$t(t).on("load",r))},toString:function(){var t=[];return o(this,function(e){t.push(""+e)}),"["+t.join(", ")+"]"},eq:function(t){return Fn(t>=0?this[t]:this[this.length+t])},length:0,push:Yn,sort:[].sort,splice:[].splice},kr={};o("multiple selected checked disabled readOnly required open".split(" "),function(t){kr[Hn(t)]=t});var Ar={};o("input select option textarea button form details".split(" "),function(t){Ar[t]=!0});var Or={ngMinlength:"minlength",ngMaxlength:"maxlength",ngMin:"min",ngMax:"max",ngPattern:"pattern"};o({data:bt,removeData:gt},function(t,e){$t[e]=t}),o({data:bt,inheritedData:kt,scope:function(t){return Fn.data(t,"$scope")||kt(t.parentNode||t,["$isolateScope","$scope"])},isolateScope:function(t){return Fn.data(t,"$isolateScope")||Fn.data(t,"$isolateScopeNoTemplate")},controller:Et,injector:function(t){return kt(t,"$injector")},removeAttr:function(t,e){t.removeAttribute(e)},hasClass:wt,css:function(t,e,n){return e=ft(e),y(n)?void(t.style[e]=n):t.style[e]},attr:function(t,e,r){var i=t.nodeType;if(i!==hr&&2!==i&&8!==i)if(i=Hn(e),kr[i]){if(!y(r))return t[e]||(t.attributes.getNamedItem(e)||d).specified?i:n;r?(t[e]=!0,t.setAttribute(e,i)):(t[e]=!1,t.removeAttribute(i))}else if(y(r))t.setAttribute(e,r);else if(t.getAttribute)return t=t.getAttribute(e,2),null===t?n:t},prop:function(t,e,n){return y(n)?void(t[e]=n):t[e]},text:function(){function t(t,e){if(g(e)){var n=t.nodeType;return n===fr||n===hr?t.textContent:""}t.textContent=e}return t.$dv="",t}(),val:function(t,e){if(g(e)){if(t.multiple&&"select"===N(t)){var n=[];return o(t.options,function(t){t.selected&&n.push(t.value||t.text)}),0===n.length?null:n}return t.value}t.value=e},html:function(t,e){return g(e)?t.innerHTML:(mt(t,!0),void(t.innerHTML=e))},empty:At},function(t,e){$t.prototype[e]=function(e,r){var i,o,a=this.length;if(t!==At&&(2==t.length&&t!==wt&&t!==Et?e:r)===n){if(b(e)){for(i=0;a>i;i++)if(t===bt)t(this[i],e);else for(o in e)t(this[i],o,e[o]);return this}for(i=t.$dv,a=i===n?Math.min(a,1):a,o=0;a>o;o++){var s=t(this[o],e,r);i=i?i+s:s}return i}for(i=0;a>i;i++)t(this[i],e,r);return this}}),o({removeData:gt,on:function Po(t,e,n,r){if(y(r))throw yr("onargs");if(ht(t)){var i=yt(t,!0);r=i.events;var o=i.handle;o||(o=i.handle=Nt(t,r));for(var i=0<=e.indexOf(" ")?e.split(" "):[e],a=i.length;a--;){e=i[a];var s=r[e];s||(r[e]=[],"mouseenter"===e||"mouseleave"===e?Po(t,gr[e],function(t){var n=t.relatedTarget;n&&(n===this||this.contains(n))||o(t,e)}):"$destroy"!==e&&t.addEventListener(e,o,!1),s=r[e]),s.push(n)}}},off:vt,one:function(t,e,n){t=Fn(t),t.on(e,function r(){t.off(e,n),t.off(e,r)}),t.on(e,n)},replaceWith:function(t,e){var n,r=t.parentNode;mt(t),o(new $t(e),function(e){n?r.insertBefore(e,n.nextSibling):r.replaceChild(e,t),n=e})},children:function(t){var e=[];return o(t.childNodes,function(t){t.nodeType===fr&&e.push(t)}),e},contents:function(t){return t.contentDocument||t.childNodes||[]},append:function(t,e){var n=t.nodeType;if(n===fr||11===n){e=new $t(e);for(var n=0,r=e.length;r>n;n++)t.appendChild(e[n])}},prepend:function(t,e){if(t.nodeType===fr){var n=t.firstChild;o(new $t(e),function(e){t.insertBefore(e,n)})}},wrap:function(t,e){e=Fn(e).eq(0).clone()[0];var n=t.parentNode;n&&n.replaceChild(e,t),e.appendChild(t)},remove:Ot,detach:function(t){Ot(t,!0)},after:function(t,e){var n=t,r=t.parentNode;e=new $t(e);for(var i=0,o=e.length;o>i;i++){var a=e[i];r.insertBefore(a,n.nextSibling),n=a}},addClass:St,removeClass:xt,toggleClass:function(t,e,n){e&&o(e.split(" "),function(e){var r=n;g(r)&&(r=!wt(t,e)),(r?St:xt)(t,e)})},parent:function(t){return(t=t.parentNode)&&11!==t.nodeType?t:null},next:function(t){return t.nextElementSibling},find:function(t,e){return t.getElementsByTagName?t.getElementsByTagName(e):[]},clone:dt,triggerHandler:function(t,e,n){var r,i,a=e.type||e,s=yt(t);(s=(s=s&&s.events)&&s[a])&&(r={preventDefault:function(){this.defaultPrevented=!0},isDefaultPrevented:function(){return!0===this.defaultPrevented},stopImmediatePropagation:function(){this.immediatePropagationStopped=!0},isImmediatePropagationStopped:function(){return!0===this.immediatePropagationStopped},stopPropagation:d,type:a,target:t},e.type&&(r=f(r,e)),e=D(s),i=n?[r].concat(n):[r],o(e,function(e){r.isImmediatePropagationStopped()||e.apply(t,i)}))}},function(t,e){$t.prototype[e]=function(e,n,r){for(var i,o=0,a=this.length;a>o;o++)g(i)?(i=t(this[o],e,n,r),y(i)&&(i=Fn(i))):Ct(i,t(this[o],e,n,r));return y(i)?i:this},$t.prototype.bind=$t.prototype.on,$t.prototype.unbind=$t.prototype.off}),Dt.prototype={put:function(t,e){this[Pt(t,this.nextUid)]=e},get:function(t){return this[Pt(t,this.nextUid)]},remove:function(t){var e=this[t=Pt(t,this.nextUid)];return delete this[t],e}};var Mr=[function(){this.$get=[function(){return Dt}]}],Tr=/^function\s*[^\(]*\(\s*([^\)]*)\)/m,Vr=/,/,Nr=/^\s*(_?)(\S+?)\1\s*$/,jr=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,Pr=r("$injector");Rt.$$annotate=function(t,e,n){var r;if("function"==typeof t){if(!(r=t.$inject)){if(r=[],t.length){if(e)throw x(n)&&n||(n=t.name||It(t)),Pr("strictdi",n);e=t.toString().replace(jr,""),e=e.match(Tr),o(e[1].split(Vr),function(t){t.replace(Nr,function(t,e,n){r.push(n)})})}t.$inject=r}}else nr(t)?(e=t.length-1,it(t[e],"fn"),r=t.slice(0,e)):it(t,"fn",!0);return r};var Dr=r("$animate"),Ir=function(){this.$get=["$q","$$rAF",function(t,e){function n(){}return n.all=d,n.chain=d,n.prototype={end:d,cancel:d,resume:d,pause:d,complete:d,then:function(n,r){return t(function(t){e(function(){t()})}).then(n,r)}},n}]},Rr=function(){var t=new Dt,e=[];this.$get=["$$AnimateRunner","$rootScope",function(n,r){function i(n,i,a){var s=t.get(n);s||(t.put(n,s={}),e.push(n)),i&&o(i.split(" "),function(t){t&&(s[t]=!0)}),a&&o(a.split(" "),function(t){t&&(s[t]=!1)}),1<e.length||r.$$postDigest(function(){o(e,function(e){var n=t.get(e);if(n){var r=Ft(e.attr("class")),i="",a="";o(n,function(t,e){t!==!!r[e]&&(t?i+=(i.length?" ":"")+e:a+=(a.length?" ":"")+e)}),o(e,function(t){i&&St(t,i),a&&xt(t,a)}),t.remove(e)}}),e.length=0})}return{enabled:d,on:d,off:d,pin:d,push:function(t,e,r,o){return o&&o(),r=r||{},r.from&&t.css(r.from),r.to&&t.css(r.to),(r.addClass||r.removeClass)&&i(t,r.addClass,r.removeClass),new n}}}]},qr=["$provide",function(t){var e=this;this.$$registeredAnimations=Object.create(null),this.register=function(n,r){if(n&&"."!==n.charAt(0))throw Dr("notcsel",n);var i=n+"-animation";e.$$registeredAnimations[n.substr(1)]=i,t.factory(i,r)},this.classNameFilter=function(t){if(1===arguments.length&&(this.$$classNameFilter=t instanceof RegExp?t:null)&&/(\s+|\/)ng-animate(\s+|\/)/.test(this.$$classNameFilter.toString()))throw Dr("nongcls","ng-animate");return this.$$classNameFilter},this.$get=["$$animateQueue",function(t){function e(t,e,n){if(n){var r;t:{for(r=0;r<n.length;r++){var i=n[r];if(1===i.nodeType){r=i;break t}}r=void 0}!r||r.parentNode||r.previousElementSibling||(n=null)}n?n.after(t):e.prepend(t)}return{on:t.on,off:t.off,pin:t.pin,enabled:t.enabled,cancel:function(t){t.end&&t.end()},enter:function(n,r,i,o){return r=r&&Fn(r),i=i&&Fn(i),r=r||i.parent(),e(n,r,i),t.push(n,"enter",_t(o))},move:function(n,r,i,o){return r=r&&Fn(r),i=i&&Fn(i),r=r||i.parent(),e(n,r,i),t.push(n,"move",_t(o))},leave:function(e,n){return t.push(e,"leave",_t(n),function(){e.remove()})},addClass:function(e,n,r){return r=_t(r),r.addClass=Ut(r.addclass,n),t.push(e,"addClass",r)},removeClass:function(e,n,r){return r=_t(r),r.removeClass=Ut(r.removeClass,n),t.push(e,"removeClass",r)},setClass:function(e,n,r,i){return i=_t(i),i.addClass=Ut(i.addClass,n),i.removeClass=Ut(i.removeClass,r),t.push(e,"setClass",i)},animate:function(e,n,r,i,o){return o=_t(o),o.from=o.from?f(o.from,n):n,o.to=o.to?f(o.to,r):r,o.tempClasses=Ut(o.tempClasses,i||"ng-inline-animate"),t.push(e,"animate",o)}}}]}],Ur=r("$compile");Gt.$inject=["$provide","$$sanitizeUriProvider"];var Fr=/^((?:x|data)[\:\-_])/i,_r=r("$controller"),Br=/^(\S+)(\s+as\s+(\w+))?$/,Lr="application/json",Hr={"Content-Type":Lr+";charset=utf-8"},zr=/^\[|^\{(?!\{)/,Wr={"[":/]$/,"{":/}$/},Gr=/^\)\]\}',?\n/,Jr=Qn.$interpolateMinErr=r("$interpolate");Jr.throwNoconcat=function(t){throw Jr("noconcat",t)},Jr.interr=function(t,e){return Jr("interr",t,e.toString())};var Yr=/^([^\?#]*)(\?([^#]*))?(#(.*))?$/,Kr={http:80,https:443,ftp:21},Zr=r("$location"),Xr={$$html5:!1,$$replace:!1,absUrl:Ce("$$absUrl"),url:function(t){if(g(t))return this.$$url;var e=Yr.exec(t);return(e[1]||""===t)&&this.path(decodeURIComponent(e[1])),(e[2]||e[1]||""===t)&&this.search(e[3]||""),this.hash(e[5]||""),this},protocol:Ce("$$protocol"),host:Ce("$$host"),port:Ce("$$port"),path:Ee("$$path",function(t){return t=null!==t?t.toString():"","/"==t.charAt(0)?t:"/"+t}),search:function(t,e){switch(arguments.length){case 0:return this.$$search;case 1:if(x(t)||S(t))t=t.toString(),this.$$search=W(t);else{if(!b(t))throw Zr("isrcharg");t=P(t,{}),o(t,function(e,n){null==e&&delete t[n]}),this.$$search=t}break;default:g(e)||null===e?delete this.$$search[t]:this.$$search[t]=e}return this.$$compose(),this},hash:Ee("$$hash",function(t){return null!==t?t.toString():""}),replace:function(){return this.$$replace=!0,this}};o([Se,xe,we],function(t){t.prototype=Object.create(Xr),t.prototype.state=function(e){if(!arguments.length)return this.$$state;if(t!==we||!this.$$html5)throw Zr("nostate");return this.$$state=g(e)?null:e,this}});var Qr=r("$parse"),ti=Function.prototype.call,ei=Function.prototype.apply,ni=Function.prototype.bind,ri=ut();o("+ - * / % === !== == != < > <= >= && || ! = |".split(" "),function(t){ri[t]=!0});var ii={n:"\n",f:"\f",r:"\r",t:"	",v:"","'":"'",'"':'"'},oi=function(t){this.options=t};oi.prototype={constructor:oi,lex:function(t){for(this.text=t,this.index=0,this.tokens=[];this.index<this.text.length;)if(t=this.text.charAt(this.index),'"'===t||"'"===t)this.readString(t);else if(this.isNumber(t)||"."===t&&this.isNumber(this.peek()))this.readNumber();else if(this.isIdent(t))this.readIdent();else if(this.is(t,"(){}[].,;:?"))this.tokens.push({index:this.index,text:t}),this.index++;else if(this.isWhitespace(t))this.index++;else{var e=t+this.peek(),n=e+this.peek(2),r=ri[e],i=ri[n];ri[t]||r||i?(t=i?n:r?e:t,this.tokens.push({index:this.index,text:t,operator:!0}),this.index+=t.length):this.throwError("Unexpected next character ",this.index,this.index+1);

}return this.tokens},is:function(t,e){return-1!==e.indexOf(t)},peek:function(t){return t=t||1,this.index+t<this.text.length?this.text.charAt(this.index+t):!1},isNumber:function(t){return t>="0"&&"9">=t&&"string"==typeof t},isWhitespace:function(t){return" "===t||"\r"===t||"	"===t||"\n"===t||""===t||" "===t},isIdent:function(t){return t>="a"&&"z">=t||t>="A"&&"Z">=t||"_"===t||"$"===t},isExpOperator:function(t){return"-"===t||"+"===t||this.isNumber(t)},throwError:function(t,e,n){throw n=n||this.index,e=y(e)?"s "+e+"-"+this.index+" ["+this.text.substring(e,n)+"]":" "+n,Qr("lexerr",t,e,this.text)},readNumber:function(){for(var t="",e=this.index;this.index<this.text.length;){var n=Hn(this.text.charAt(this.index));if("."==n||this.isNumber(n))t+=n;else{var r=this.peek();if("e"==n&&this.isExpOperator(r))t+=n;else if(this.isExpOperator(n)&&r&&this.isNumber(r)&&"e"==t.charAt(t.length-1))t+=n;else{if(!this.isExpOperator(n)||r&&this.isNumber(r)||"e"!=t.charAt(t.length-1))break;this.throwError("Invalid exponent")}}this.index++}this.tokens.push({index:e,text:t,constant:!0,value:Number(t)})},readIdent:function(){for(var t=this.index;this.index<this.text.length;){var e=this.text.charAt(this.index);if(!this.isIdent(e)&&!this.isNumber(e))break;this.index++}this.tokens.push({index:t,text:this.text.slice(t,this.index),identifier:!0})},readString:function(t){var e=this.index;this.index++;for(var n="",r=t,i=!1;this.index<this.text.length;){var o=this.text.charAt(this.index),r=r+o;if(i)"u"===o?(i=this.text.substring(this.index+1,this.index+5),i.match(/[\da-f]{4}/i)||this.throwError("Invalid unicode escape [\\u"+i+"]"),this.index+=4,n+=String.fromCharCode(parseInt(i,16))):n+=ii[o]||o,i=!1;else if("\\"===o)i=!0;else{if(o===t)return this.index++,void this.tokens.push({index:e,text:r,constant:!0,value:n});n+=o}this.index++}this.throwError("Unterminated quote",e)}};var ai=function(t,e){this.lexer=t,this.options=e};ai.Program="Program",ai.ExpressionStatement="ExpressionStatement",ai.AssignmentExpression="AssignmentExpression",ai.ConditionalExpression="ConditionalExpression",ai.LogicalExpression="LogicalExpression",ai.BinaryExpression="BinaryExpression",ai.UnaryExpression="UnaryExpression",ai.CallExpression="CallExpression",ai.MemberExpression="MemberExpression",ai.Identifier="Identifier",ai.Literal="Literal",ai.ArrayExpression="ArrayExpression",ai.Property="Property",ai.ObjectExpression="ObjectExpression",ai.ThisExpression="ThisExpression",ai.NGValueParameter="NGValueParameter",ai.prototype={ast:function(t){return this.text=t,this.tokens=this.lexer.lex(t),t=this.program(),0!==this.tokens.length&&this.throwError("is an unexpected token",this.tokens[0]),t},program:function(){for(var t=[];;)if(0<this.tokens.length&&!this.peek("}",")",";","]")&&t.push(this.expressionStatement()),!this.expect(";"))return{type:ai.Program,body:t}},expressionStatement:function(){return{type:ai.ExpressionStatement,expression:this.filterChain()}},filterChain:function(){for(var t=this.expression();this.expect("|");)t=this.filter(t);return t},expression:function(){return this.assignment()},assignment:function(){var t=this.ternary();return this.expect("=")&&(t={type:ai.AssignmentExpression,left:t,right:this.assignment(),operator:"="}),t},ternary:function(){var t,e,n=this.logicalOR();return this.expect("?")&&(t=this.expression(),this.consume(":"))?(e=this.expression(),{type:ai.ConditionalExpression,test:n,alternate:t,consequent:e}):n},logicalOR:function(){for(var t=this.logicalAND();this.expect("||");)t={type:ai.LogicalExpression,operator:"||",left:t,right:this.logicalAND()};return t},logicalAND:function(){for(var t=this.equality();this.expect("&&");)t={type:ai.LogicalExpression,operator:"&&",left:t,right:this.equality()};return t},equality:function(){for(var t,e=this.relational();t=this.expect("==","!=","===","!==");)e={type:ai.BinaryExpression,operator:t.text,left:e,right:this.relational()};return e},relational:function(){for(var t,e=this.additive();t=this.expect("<",">","<=",">=");)e={type:ai.BinaryExpression,operator:t.text,left:e,right:this.additive()};return e},additive:function(){for(var t,e=this.multiplicative();t=this.expect("+","-");)e={type:ai.BinaryExpression,operator:t.text,left:e,right:this.multiplicative()};return e},multiplicative:function(){for(var t,e=this.unary();t=this.expect("*","/","%");)e={type:ai.BinaryExpression,operator:t.text,left:e,right:this.unary()};return e},unary:function(){var t;return(t=this.expect("+","-","!"))?{type:ai.UnaryExpression,operator:t.text,prefix:!0,argument:this.unary()}:this.primary()},primary:function(){var t;this.expect("(")?(t=this.filterChain(),this.consume(")")):this.expect("[")?t=this.arrayDeclaration():this.expect("{")?t=this.object():this.constants.hasOwnProperty(this.peek().text)?t=P(this.constants[this.consume().text]):this.peek().identifier?t=this.identifier():this.peek().constant?t=this.constant():this.throwError("not a primary expression",this.peek());for(var e;e=this.expect("(","[",".");)"("===e.text?(t={type:ai.CallExpression,callee:t,arguments:this.parseArguments()},this.consume(")")):"["===e.text?(t={type:ai.MemberExpression,object:t,property:this.expression(),computed:!0},this.consume("]")):"."===e.text?t={type:ai.MemberExpression,object:t,property:this.identifier(),computed:!1}:this.throwError("IMPOSSIBLE");return t},filter:function(t){t=[t];for(var e={type:ai.CallExpression,callee:this.identifier(),arguments:t,filter:!0};this.expect(":");)t.push(this.expression());return e},parseArguments:function(){var t=[];if(")"!==this.peekToken().text)do t.push(this.expression());while(this.expect(","));return t},identifier:function(){var t=this.consume();return t.identifier||this.throwError("is not a valid identifier",t),{type:ai.Identifier,name:t.text}},constant:function(){return{type:ai.Literal,value:this.consume().value}},arrayDeclaration:function(){var t=[];if("]"!==this.peekToken().text)do{if(this.peek("]"))break;t.push(this.expression())}while(this.expect(","));return this.consume("]"),{type:ai.ArrayExpression,elements:t}},object:function(){var t,e=[];if("}"!==this.peekToken().text)do{if(this.peek("}"))break;t={type:ai.Property,kind:"init"},this.peek().constant?t.key=this.constant():this.peek().identifier?t.key=this.identifier():this.throwError("invalid key",this.peek()),this.consume(":"),t.value=this.expression(),e.push(t)}while(this.expect(","));return this.consume("}"),{type:ai.ObjectExpression,properties:e}},throwError:function(t,e){throw Qr("syntax",e.text,t,e.index+1,this.text,this.text.substring(e.index))},consume:function(t){if(0===this.tokens.length)throw Qr("ueoe",this.text);var e=this.expect(t);return e||this.throwError("is unexpected, expecting ["+t+"]",this.peek()),e},peekToken:function(){if(0===this.tokens.length)throw Qr("ueoe",this.text);return this.tokens[0]},peek:function(t,e,n,r){return this.peekAhead(0,t,e,n,r)},peekAhead:function(t,e,n,r,i){if(this.tokens.length>t){t=this.tokens[t];var o=t.text;if(o===e||o===n||o===r||o===i||!(e||n||r||i))return t}return!1},expect:function(t,e,n,r){return(t=this.peek(t,e,n,r))?(this.tokens.shift(),t):!1},constants:{"true":{type:ai.Literal,value:!0},"false":{type:ai.Literal,value:!1},"null":{type:ai.Literal,value:null},undefined:{type:ai.Literal,value:n},"this":{type:ai.ThisExpression}}},qe.prototype={compile:function(t,e){var r=this,i=this.astBuilder.ast(t);this.state={nextId:0,filters:{},expensiveChecks:e,fn:{vars:[],body:[],own:{}},assign:{vars:[],body:[],own:{}},inputs:[]},je(i,r.$filter);var a,s="";return this.stage="assign",(a=Ie(i))&&(this.state.computing="assign",s=this.nextId(),this.recurse(a,s),s="fn.assign="+this.generateFunction("assign","s,v,l")),a=Pe(i.body),r.stage="inputs",o(a,function(t,e){var n="fn"+e;r.state[n]={vars:[],body:[],own:{}},r.state.computing=n;var i=r.nextId();r.recurse(t,i),r.return_(i),r.state.inputs.push(n),t.watchId=e}),this.state.computing="fn",this.stage="main",this.recurse(i),s='"'+this.USE+" "+this.STRICT+'";\n'+this.filterPrefix()+"var fn="+this.generateFunction("fn","s,l,a,i")+s+this.watchFns()+"return fn;",s=new Function("$filter","ensureSafeMemberName","ensureSafeObject","ensureSafeFunction","ifDefined","plus","text",s)(this.$filter,Oe,Me,Te,Ve,Ne,t),this.state=this.stage=n,s.literal=Re(i),s.constant=i.constant,s},USE:"use",STRICT:"strict",watchFns:function(){var t=[],e=this.state.inputs,n=this;return o(e,function(e){t.push("var "+e+"="+n.generateFunction(e,"s"))}),e.length&&t.push("fn.inputs=["+e.join(",")+"];"),t.join("")},generateFunction:function(t,e){return"function("+e+"){"+this.varsPrefix(t)+this.body(t)+"};"},filterPrefix:function(){var t=[],e=this;return o(this.state.filters,function(n,r){t.push(n+"=$filter("+e.escape(r)+")")}),t.length?"var "+t.join(",")+";":""},varsPrefix:function(t){return this.state[t].vars.length?"var "+this.state[t].vars.join(",")+";":""},body:function(t){return this.state[t].body.join("")},recurse:function(t,e,r,i,a,s){var u,c,l,f,h=this;if(i=i||d,!s&&y(t.watchId))e=e||this.nextId(),this.if_("i",this.lazyAssign(e,this.computedMember("i",t.watchId)),this.lazyRecurse(t,e,r,i,a,!0));else switch(t.type){case ai.Program:o(t.body,function(e,r){h.recurse(e.expression,n,n,function(t){c=t}),r!==t.body.length-1?h.current().body.push(c,";"):h.return_(c)});break;case ai.Literal:f=this.escape(t.value),this.assign(e,f),i(f);break;case ai.UnaryExpression:this.recurse(t.argument,n,n,function(t){c=t}),f=t.operator+"("+this.ifDefined(c,0)+")",this.assign(e,f),i(f);break;case ai.BinaryExpression:this.recurse(t.left,n,n,function(t){u=t}),this.recurse(t.right,n,n,function(t){c=t}),f="+"===t.operator?this.plus(u,c):"-"===t.operator?this.ifDefined(u,0)+t.operator+this.ifDefined(c,0):"("+u+")"+t.operator+"("+c+")",this.assign(e,f),i(f);break;case ai.LogicalExpression:e=e||this.nextId(),h.recurse(t.left,e),h.if_("&&"===t.operator?e:h.not(e),h.lazyRecurse(t.right,e)),i(e);break;case ai.ConditionalExpression:e=e||this.nextId(),h.recurse(t.test,e),h.if_(e,h.lazyRecurse(t.alternate,e),h.lazyRecurse(t.consequent,e)),i(e);break;case ai.Identifier:e=e||this.nextId(),r&&(r.context="inputs"===h.stage?"s":this.assign(this.nextId(),this.getHasOwnProperty("l",t.name)+"?l:s"),r.computed=!1,r.name=t.name),Oe(t.name),h.if_("inputs"===h.stage||h.not(h.getHasOwnProperty("l",t.name)),function(){h.if_("inputs"===h.stage||"s",function(){a&&1!==a&&h.if_(h.not(h.nonComputedMember("s",t.name)),h.lazyAssign(h.nonComputedMember("s",t.name),"{}")),h.assign(e,h.nonComputedMember("s",t.name))})},e&&h.lazyAssign(e,h.nonComputedMember("l",t.name))),(h.state.expensiveChecks||_e(t.name))&&h.addEnsureSafeObject(e),i(e);break;case ai.MemberExpression:u=r&&(r.context=this.nextId())||this.nextId(),e=e||this.nextId(),h.recurse(t.object,u,n,function(){h.if_(h.notNull(u),function(){t.computed?(c=h.nextId(),h.recurse(t.property,c),h.addEnsureSafeMemberName(c),a&&1!==a&&h.if_(h.not(h.computedMember(u,c)),h.lazyAssign(h.computedMember(u,c),"{}")),f=h.ensureSafeObject(h.computedMember(u,c)),h.assign(e,f),r&&(r.computed=!0,r.name=c)):(Oe(t.property.name),a&&1!==a&&h.if_(h.not(h.nonComputedMember(u,t.property.name)),h.lazyAssign(h.nonComputedMember(u,t.property.name),"{}")),f=h.nonComputedMember(u,t.property.name),(h.state.expensiveChecks||_e(t.property.name))&&(f=h.ensureSafeObject(f)),h.assign(e,f),r&&(r.computed=!1,r.name=t.property.name)),i(e)})},!!a);break;case ai.CallExpression:e=e||this.nextId(),t.filter?(c=h.filter(t.callee.name),l=[],o(t.arguments,function(t){var e=h.nextId();h.recurse(t,e),l.push(e)}),f=c+"("+l.join(",")+")",h.assign(e,f),i(e)):(c=h.nextId(),u={},l=[],h.recurse(t.callee,c,u,function(){h.if_(h.notNull(c),function(){h.addEnsureSafeFunction(c),o(t.arguments,function(t){h.recurse(t,h.nextId(),n,function(t){l.push(h.ensureSafeObject(t))})}),u.name?(h.state.expensiveChecks||h.addEnsureSafeObject(u.context),f=h.member(u.context,u.name,u.computed)+"("+l.join(",")+")"):f=c+"("+l.join(",")+")",f=h.ensureSafeObject(f),h.assign(e,f),i(e)})}));break;case ai.AssignmentExpression:if(c=this.nextId(),u={},!De(t.left))throw Qr("lval");this.recurse(t.left,n,u,function(){h.if_(h.notNull(u.context),function(){h.recurse(t.right,c),h.addEnsureSafeObject(h.member(u.context,u.name,u.computed)),f=h.member(u.context,u.name,u.computed)+t.operator+c,h.assign(e,f),i(e||f)})},1);break;case ai.ArrayExpression:l=[],o(t.elements,function(t){h.recurse(t,h.nextId(),n,function(t){l.push(t)})}),f="["+l.join(",")+"]",this.assign(e,f),i(f);break;case ai.ObjectExpression:l=[],o(t.properties,function(t){h.recurse(t.value,h.nextId(),n,function(e){l.push(h.escape(t.key.type===ai.Identifier?t.key.name:""+t.key.value)+":"+e)})}),f="{"+l.join(",")+"}",this.assign(e,f),i(f);break;case ai.ThisExpression:this.assign(e,"s"),i("s");break;case ai.NGValueParameter:this.assign(e,"v"),i("v")}},getHasOwnProperty:function(t,e){var n=t+"."+e,r=this.current().own;return r.hasOwnProperty(n)||(r[n]=this.nextId(!1,t+"&&("+this.escape(e)+" in "+t+")")),r[n]},assign:function(t,e){return t?(this.current().body.push(t,"=",e,";"),t):void 0},filter:function(t){return this.state.filters.hasOwnProperty(t)||(this.state.filters[t]=this.nextId(!0)),this.state.filters[t]},ifDefined:function(t,e){return"ifDefined("+t+","+this.escape(e)+")"},plus:function(t,e){return"plus("+t+","+e+")"},return_:function(t){this.current().body.push("return ",t,";")},if_:function(t,e,n){if(!0===t)e();else{var r=this.current().body;r.push("if(",t,"){"),e(),r.push("}"),n&&(r.push("else{"),n(),r.push("}"))}},not:function(t){return"!("+t+")"},notNull:function(t){return t+"!=null"},nonComputedMember:function(t,e){return t+"."+e},computedMember:function(t,e){return t+"["+e+"]"},member:function(t,e,n){return n?this.computedMember(t,e):this.nonComputedMember(t,e)},addEnsureSafeObject:function(t){this.current().body.push(this.ensureSafeObject(t),";")},addEnsureSafeMemberName:function(t){this.current().body.push(this.ensureSafeMemberName(t),";")},addEnsureSafeFunction:function(t){this.current().body.push(this.ensureSafeFunction(t),";")},ensureSafeObject:function(t){return"ensureSafeObject("+t+",text)"},ensureSafeMemberName:function(t){return"ensureSafeMemberName("+t+",text)"},ensureSafeFunction:function(t){return"ensureSafeFunction("+t+",text)"},lazyRecurse:function(t,e,n,r,i,o){var a=this;return function(){a.recurse(t,e,n,r,i,o)}},lazyAssign:function(t,e){var n=this;return function(){n.assign(t,e)}},stringEscapeRegex:/[^ a-zA-Z0-9]/g,stringEscapeFn:function(t){return"\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4)},escape:function(t){if(x(t))return"'"+t.replace(this.stringEscapeRegex,this.stringEscapeFn)+"'";if(S(t))return t.toString();if(!0===t)return"true";if(!1===t)return"false";if(null===t)return"null";if("undefined"==typeof t)return"undefined";throw Qr("esc")},nextId:function(t,e){var n="v"+this.state.nextId++;return t||this.current().vars.push(n+(e?"="+e:"")),n},current:function(){return this.state[this.state.computing]}},Ue.prototype={compile:function(t,e){var n=this,r=this.astBuilder.ast(t);this.expression=t,this.expensiveChecks=e,je(r,n.$filter);var i,a;(i=Ie(r))&&(a=this.recurse(i)),i=Pe(r.body);var s;i&&(s=[],o(i,function(t,e){var r=n.recurse(t);t.input=r,s.push(r),t.watchId=e}));var u=[];return o(r.body,function(t){u.push(n.recurse(t.expression))}),i=0===r.body.length?function(){}:1===r.body.length?u[0]:function(t,e){var n;return o(u,function(r){n=r(t,e)}),n},a&&(i.assign=function(t,e,n){return a(t,n,e)}),s&&(i.inputs=s),i.literal=Re(r),i.constant=r.constant,i},recurse:function(t,e,r){var i,a,s,u=this;if(t.input)return this.inputs(t.input,t.watchId);switch(t.type){case ai.Literal:return this.value(t.value,e);case ai.UnaryExpression:return a=this.recurse(t.argument),this["unary"+t.operator](a,e);case ai.BinaryExpression:return i=this.recurse(t.left),a=this.recurse(t.right),this["binary"+t.operator](i,a,e);case ai.LogicalExpression:return i=this.recurse(t.left),a=this.recurse(t.right),this["binary"+t.operator](i,a,e);case ai.ConditionalExpression:return this["ternary?:"](this.recurse(t.test),this.recurse(t.alternate),this.recurse(t.consequent),e);case ai.Identifier:return Oe(t.name,u.expression),u.identifier(t.name,u.expensiveChecks||_e(t.name),e,r,u.expression);case ai.MemberExpression:return i=this.recurse(t.object,!1,!!r),t.computed||(Oe(t.property.name,u.expression),a=t.property.name),t.computed&&(a=this.recurse(t.property)),t.computed?this.computedMember(i,a,e,r,u.expression):this.nonComputedMember(i,a,u.expensiveChecks,e,r,u.expression);case ai.CallExpression:return s=[],o(t.arguments,function(t){s.push(u.recurse(t))}),t.filter&&(a=this.$filter(t.callee.name)),t.filter||(a=this.recurse(t.callee,!0)),t.filter?function(t,r,i,o){for(var u=[],c=0;c<s.length;++c)u.push(s[c](t,r,i,o));return t=a.apply(n,u,o),e?{context:n,name:n,value:t}:t}:function(t,n,r,i){var o,c=a(t,n,r,i);if(null!=c.value){Me(c.context,u.expression),Te(c.value,u.expression),o=[];for(var l=0;l<s.length;++l)o.push(Me(s[l](t,n,r,i),u.expression));o=Me(c.value.apply(c.context,o),u.expression)}return e?{value:o}:o};case ai.AssignmentExpression:return i=this.recurse(t.left,!0,1),a=this.recurse(t.right),function(t,n,r,o){var s=i(t,n,r,o);return t=a(t,n,r,o),Me(s.value,u.expression),s.context[s.name]=t,e?{value:t}:t};case ai.ArrayExpression:return s=[],o(t.elements,function(t){s.push(u.recurse(t))}),function(t,n,r,i){for(var o=[],a=0;a<s.length;++a)o.push(s[a](t,n,r,i));return e?{value:o}:o};case ai.ObjectExpression:return s=[],o(t.properties,function(t){s.push({key:t.key.type===ai.Identifier?t.key.name:""+t.key.value,value:u.recurse(t.value)})}),function(t,n,r,i){for(var o={},a=0;a<s.length;++a)o[s[a].key]=s[a].value(t,n,r,i);return e?{value:o}:o};case ai.ThisExpression:return function(t){return e?{value:t}:t};case ai.NGValueParameter:return function(t,n,r,i){return e?{value:r}:r}}},"unary+":function(t,e){return function(n,r,i,o){return n=t(n,r,i,o),n=y(n)?+n:0,e?{value:n}:n}},"unary-":function(t,e){return function(n,r,i,o){return n=t(n,r,i,o),n=y(n)?-n:0,e?{value:n}:n}},"unary!":function(t,e){return function(n,r,i,o){return n=!t(n,r,i,o),e?{value:n}:n}},"binary+":function(t,e,n){return function(r,i,o,a){var s=t(r,i,o,a);return r=e(r,i,o,a),s=Ne(s,r),n?{value:s}:s}},"binary-":function(t,e,n){return function(r,i,o,a){var s=t(r,i,o,a);return r=e(r,i,o,a),s=(y(s)?s:0)-(y(r)?r:0),n?{value:s}:s}},"binary*":function(t,e,n){return function(r,i,o,a){return r=t(r,i,o,a)*e(r,i,o,a),n?{value:r}:r}},"binary/":function(t,e,n){return function(r,i,o,a){return r=t(r,i,o,a)/e(r,i,o,a),n?{value:r}:r}},"binary%":function(t,e,n){return function(r,i,o,a){return r=t(r,i,o,a)%e(r,i,o,a),n?{value:r}:r}},"binary===":function(t,e,n){return function(r,i,o,a){return r=t(r,i,o,a)===e(r,i,o,a),n?{value:r}:r}},"binary!==":function(t,e,n){return function(r,i,o,a){return r=t(r,i,o,a)!==e(r,i,o,a),n?{value:r}:r}},"binary==":function(t,e,n){return function(r,i,o,a){return r=t(r,i,o,a)==e(r,i,o,a),n?{value:r}:r}},"binary!=":function(t,e,n){return function(r,i,o,a){return r=t(r,i,o,a)!=e(r,i,o,a),n?{value:r}:r}},"binary<":function(t,e,n){return function(r,i,o,a){return r=t(r,i,o,a)<e(r,i,o,a),n?{value:r}:r}},"binary>":function(t,e,n){return function(r,i,o,a){return r=t(r,i,o,a)>e(r,i,o,a),n?{value:r}:r}},"binary<=":function(t,e,n){return function(r,i,o,a){return r=t(r,i,o,a)<=e(r,i,o,a),n?{value:r}:r}},"binary>=":function(t,e,n){return function(r,i,o,a){return r=t(r,i,o,a)>=e(r,i,o,a),n?{value:r}:r}},"binary&&":function(t,e,n){return function(r,i,o,a){return r=t(r,i,o,a)&&e(r,i,o,a),n?{value:r}:r}},"binary||":function(t,e,n){return function(r,i,o,a){return r=t(r,i,o,a)||e(r,i,o,a),n?{value:r}:r}},"ternary?:":function(t,e,n,r){return function(i,o,a,s){return i=t(i,o,a,s)?e(i,o,a,s):n(i,o,a,s),r?{value:i}:i}},value:function(t,e){return function(){return e?{context:n,name:n,value:t}:t}},identifier:function(t,e,r,i,o){return function(a,s,u,c){return a=s&&t in s?s:a,i&&1!==i&&a&&!a[t]&&(a[t]={}),s=a?a[t]:n,e&&Me(s,o),r?{context:a,name:t,value:s}:s}},computedMember:function(t,e,n,r,i){return function(o,a,s,u){var c,l,f=t(o,a,s,u);return null!=f&&(c=e(o,a,s,u),Oe(c,i),r&&1!==r&&f&&!f[c]&&(f[c]={}),l=f[c],Me(l,i)),n?{context:f,name:c,value:l}:l}},nonComputedMember:function(t,e,r,i,o,a){return function(s,u,c,l){return s=t(s,u,c,l),o&&1!==o&&s&&!s[e]&&(s[e]={}),u=null!=s?s[e]:n,(r||_e(e))&&Me(u,a),i?{context:s,name:e,value:u}:u}},inputs:function(t,e){return function(n,r,i,o){return o?o[e]:t(n,r,i)}}};var si=function(t,e,n){this.lexer=t,this.$filter=e,this.options=n,this.ast=new ai(this.lexer),this.astCompiler=n.csp?new Ue(this.ast,e):new qe(this.ast,e)};si.prototype={constructor:si,parse:function(t){return this.astCompiler.compile(t,this.options.expensiveChecks)}},ut(),ut();var ui=Object.prototype.valueOf,ci=r("$sce"),li={HTML:"html",CSS:"css",URL:"url",RESOURCE_URL:"resourceUrl",JS:"js"},Ur=r("$compile"),fi=e.createElement("a"),hi=on(t.location.href);un.$inject=["$document"],ln.$inject=["$provide"],dn.$inject=["$locale"],mn.$inject=["$locale"];var pi=".",$i={yyyy:yn("FullYear",4),yy:yn("FullYear",2,0,!0),y:yn("FullYear",1),MMMM:bn("Month"),MMM:bn("Month",!0),MM:yn("Month",2,1),M:yn("Month",1,1),dd:yn("Date",2),d:yn("Date",1),HH:yn("Hours",2),H:yn("Hours",1),hh:yn("Hours",2,-12),h:yn("Hours",1,-12),mm:yn("Minutes",2),m:yn("Minutes",1),ss:yn("Seconds",2),s:yn("Seconds",1),sss:yn("Milliseconds",3),EEEE:bn("Day"),EEE:bn("Day",!0),a:function(t,e){return 12>t.getHours()?e.AMPMS[0]:e.AMPMS[1]},Z:function(t,e,n){return t=-1*n,t=(t>=0?"+":"")+(gn(Math[t>0?"floor":"ceil"](t/60),2)+gn(Math.abs(t%60),2))},ww:xn(2),w:xn(1),G:Sn,GG:Sn,GGG:Sn,GGGG:function(t,e){return 0>=t.getFullYear()?e.ERANAMES[0]:e.ERANAMES[1]}},di=/((?:[^yMdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,mi=/^\-?\d+$/;Cn.$inject=["$locale"];var vi=v(Hn),gi=v(Wn);An.$inject=["$parse"];var yi=v({restrict:"E",compile:function(t,e){return e.href||e.xlinkHref?void 0:function(t,e){if("a"===e[0].nodeName.toLowerCase()){var n="[object SVGAnimatedString]"===Kn.call(e.prop("href"))?"xlink:href":"href";e.on("click",function(t){e.attr(n)||t.preventDefault()})}}}}),bi={};o(kr,function(t,e){function n(t,n,i){t.$watch(i[r],function(t){i.$set(e,!!t)})}if("multiple"!=t){var r=Jt("ng-"+e),i=n;"checked"===t&&(i=function(t,e,i){i.ngModel!==i[r]&&n(t,e,i)}),bi[r]=function(){return{restrict:"A",priority:100,link:i}}}}),o(Or,function(t,e){bi[e]=function(){return{priority:100,link:function(t,n,r){return"ngPattern"===e&&"/"==r.ngPattern.charAt(0)&&(n=r.ngPattern.match(Ln))?void r.$set("ngPattern",new RegExp(n[1],n[2])):void t.$watch(r[e],function(t){r.$set(e,t)})}}}}),o(["src","srcset","href"],function(t){var e=Jt("ng-"+t);bi[e]=function(){return{priority:99,link:function(n,r,i){var o=t,a=t;"href"===t&&"[object SVGAnimatedString]"===Kn.call(r.prop("href"))&&(a="xlinkHref",i.$attr[a]="xlink:href",o=null),i.$observe(e,function(e){e?(i.$set(a,e),Un&&o&&r.prop(o,i[a])):"href"===t&&i.$set(a,null)})}}}});var wi={$addControl:d,$$renameControl:function(t,e){t.$name=e},$removeControl:d,$setValidity:d,$setDirty:d,$setPristine:d,$setSubmitted:d};Mn.$inject=["$element","$attrs","$scope","$animate","$interpolate"];var xi=function(t){return["$timeout",function(e){return{name:"form",restrict:t?"EAC":"E",controller:Mn,compile:function(r,i){r.addClass(no).addClass(to);var o=i.name?"name":t&&i.ngForm?"ngForm":!1;return{pre:function(t,r,i,a){if(!("action"in i)){var s=function(e){t.$apply(function(){a.$commitViewValue(),a.$setSubmitted()}),e.preventDefault()};r[0].addEventListener("submit",s,!1),r.on("$destroy",function(){e(function(){r[0].removeEventListener("submit",s,!1)},0,!1)})}var u=a.$$parentForm;o&&(Fe(t,a.$name,a,a.$name),i.$observe(o,function(e){a.$name!==e&&(Fe(t,a.$name,n,a.$name),u.$$renameControl(a,e),Fe(t,a.$name,a,a.$name))})),r.on("$destroy",function(){u.$removeControl(a),o&&Fe(t,i[o],n,a.$name),f(a,wi)})}}}}}]},Si=xi(),Ci=xi(!0),Ei=/\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z)/,ki=/^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/,Ai=/^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,Oi=/^\s*(\-|\+)?(\d+|(\d*(\.\d*)))\s*$/,Mi=/^(\d{4})-(\d{2})-(\d{2})$/,Ti=/^(\d{4})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,Vi=/^(\d{4})-W(\d\d)$/,Ni=/^(\d{4})-(\d\d)$/,ji=/^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,Pi={text:function(t,e,n,r,i,o){Vn(t,e,n,r,i,o),Tn(r)},date:jn("date",Mi,Nn(Mi,["yyyy","MM","dd"]),"yyyy-MM-dd"),"datetime-local":jn("datetimelocal",Ti,Nn(Ti,"yyyy MM dd HH mm ss sss".split(" ")),"yyyy-MM-ddTHH:mm:ss.sss"),time:jn("time",ji,Nn(ji,["HH","mm","ss","sss"]),"HH:mm:ss.sss"),week:jn("week",Vi,function(t,e){if(C(t))return t;if(x(t)){Vi.lastIndex=0;var n=Vi.exec(t);if(n){var r=+n[1],i=+n[2],o=n=0,a=0,s=0,u=wn(r),i=7*(i-1);return e&&(n=e.getHours(),o=e.getMinutes(),a=e.getSeconds(),s=e.getMilliseconds()),new Date(r,0,u.getDate()+i,n,o,a,s)}}return 0/0},"yyyy-Www"),month:jn("month",Ni,Nn(Ni,["yyyy","MM"]),"yyyy-MM"),number:function(t,e,r,i,o,a){if(Pn(t,e,r,i),Vn(t,e,r,i,o,a),i.$$parserName="number",i.$parsers.push(function(t){return i.$isEmpty(t)?null:Oi.test(t)?parseFloat(t):n}),i.$formatters.push(function(t){if(!i.$isEmpty(t)){if(!S(t))throw oo("numfmt",t);t=t.toString()}return t}),y(r.min)||r.ngMin){var s;i.$validators.min=function(t){return i.$isEmpty(t)||g(s)||t>=s},r.$observe("min",function(t){y(t)&&!S(t)&&(t=parseFloat(t,10)),s=S(t)&&!isNaN(t)?t:n,i.$validate()})}if(y(r.max)||r.ngMax){var u;i.$validators.max=function(t){return i.$isEmpty(t)||g(u)||u>=t},r.$observe("max",function(t){y(t)&&!S(t)&&(t=parseFloat(t,10)),u=S(t)&&!isNaN(t)?t:n,i.$validate()})}},url:function(t,e,n,r,i,o){Vn(t,e,n,r,i,o),Tn(r),r.$$parserName="url",r.$validators.url=function(t,e){var n=t||e;return r.$isEmpty(n)||ki.test(n)}},email:function(t,e,n,r,i,o){Vn(t,e,n,r,i,o),Tn(r),r.$$parserName="email",r.$validators.email=function(t,e){var n=t||e;return r.$isEmpty(n)||Ai.test(n)}},radio:function(t,e,n,r){g(n.name)&&e.attr("name",++tr),e.on("click",function(t){e[0].checked&&r.$setViewValue(n.value,t&&t.type)}),r.$render=function(){e[0].checked=n.value==r.$viewValue},n.$observe("value",r.$render)},checkbox:function(t,e,n,r,i,o,a,s){var u=Dn(s,t,"ngTrueValue",n.ngTrueValue,!0),c=Dn(s,t,"ngFalseValue",n.ngFalseValue,!1);e.on("click",function(t){r.$setViewValue(e[0].checked,t&&t.type)}),r.$render=function(){e[0].checked=r.$viewValue},r.$isEmpty=function(t){return!1===t},r.$formatters.push(function(t){return I(t,u)}),r.$parsers.push(function(t){return t?u:c})},hidden:d,button:d,submit:d,reset:d,file:d},Di=["$browser","$sniffer","$filter","$parse",function(t,e,n,r){return{restrict:"E",require:["?ngModel"],link:{pre:function(i,o,a,s){s[0]&&(Pi[Hn(a.type)]||Pi.text)(i,o,a,s[0],e,t,n,r)}}}}],Ii=/^(true|false|\d+)$/,Ri=function(){return{restrict:"A",priority:100,compile:function(t,e){return Ii.test(e.ngValue)?function(t,e,n){n.$set("value",t.$eval(n.ngValue))}:function(t,e,n){t.$watch(n.ngValue,function(t){n.$set("value",t)})}}}},qi=["$compile",function(t){return{restrict:"AC",compile:function(e){return t.$$addBindingClass(e),function(e,r,i){t.$$addBindingInfo(r,i.ngBind),r=r[0],e.$watch(i.ngBind,function(t){r.textContent=t===n?"":t})}}}}],Ui=["$interpolate","$compile",function(t,e){return{compile:function(r){return e.$$addBindingClass(r),function(r,i,o){r=t(i.attr(o.$attr.ngBindTemplate)),e.$$addBindingInfo(i,r.expressions),i=i[0],o.$observe("ngBindTemplate",function(t){i.textContent=t===n?"":t})}}}}],Fi=["$sce","$parse","$compile",function(t,e,n){return{restrict:"A",compile:function(r,i){var o=e(i.ngBindHtml),a=e(i.ngBindHtml,function(t){return(t||"").toString()});return n.$$addBindingClass(r),function(e,r,i){n.$$addBindingInfo(r,i.ngBindHtml),e.$watch(a,function(){r.html(t.getTrustedHtml(o(e))||"")})}}}}],_i=v({restrict:"A",require:"ngModel",link:function(t,e,n,r){r.$viewChangeListeners.push(function(){t.$eval(n.ngChange)})}}),Bi=In("",!0),Li=In("Odd",0),Hi=In("Even",1),zi=On({compile:function(t,e){e.$set("ngCloak",n),t.removeClass("ng-cloak")}}),Wi=[function(){return{restrict:"A",scope:!0,controller:"@",priority:500}}],Gi={},Ji={blur:!0,focus:!0};o("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "),function(t){var e=Jt("ng-"+t);Gi[e]=["$parse","$rootScope",function(n,r){return{restrict:"A",compile:function(i,o){var a=n(o[e],null,!0);return function(e,n){n.on(t,function(n){var i=function(){a(e,{$event:n})};Ji[t]&&r.$$phase?e.$evalAsync(i):e.$apply(i)})}}}}]});var Yi=["$animate",function(t){return{multiElement:!0,transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(n,r,i,o,a){var s,u,c;n.$watch(i.ngIf,function(n){n?u||a(function(n,o){u=o,n[n.length++]=e.createComment(" end ngIf: "+i.ngIf+" "),s={clone:n},t.enter(n,r.parent(),r)}):(c&&(c.remove(),c=null),u&&(u.$destroy(),u=null),s&&(c=st(s.clone),t.leave(c).then(function(){c=null}),s=null))})}}}],Ki=["$templateRequest","$anchorScroll","$animate","$sce",function(t,e,n,r){return{restrict:"ECA",priority:400,terminal:!0,transclude:"element",controller:Qn.noop,compile:function(i,o){var a=o.ngInclude||o.src,s=o.onload||"",u=o.autoscroll;return function(i,o,c,l,f){var h,p,$,d=0,m=function(){p&&(p.remove(),p=null),h&&(h.$destroy(),h=null),$&&(n.leave($).then(function(){p=null}),p=$,$=null)};i.$watch(r.parseAsResourceUrl(a),function(r){var a=function(){!y(u)||u&&!i.$eval(u)||e()},c=++d;r?(t(r,!0).then(function(t){if(c===d){var e=i.$new();l.template=t,t=f(e,function(t){m(),n.enter(t,null,o).then(a)}),h=e,$=t,h.$emit("$includeContentLoaded",r),i.$eval(s)}},function(){c===d&&(m(),i.$emit("$includeContentError",r))}),i.$emit("$includeContentRequested",r)):(m(),l.template=null)})}}}}],Zi=["$compile",function(t){return{restrict:"ECA",priority:-400,require:"ngInclude",link:function(n,r,i,o){/SVG/.test(r[0].toString())?(r.empty(),t(pt(o.template,e).childNodes)(n,function(t){r.append(t)},{futureParentElement:r})):(r.html(o.template),t(r.contents())(n))}}}],Xi=On({priority:450,compile:function(){return{pre:function(t,e,n){t.$eval(n.ngInit)}}}}),Qi=function(){return{restrict:"A",priority:100,require:"ngModel",link:function(t,e,r,i){var a=e.attr(r.$attr.ngList)||", ",s="false"!==r.ngTrim,u=s?ir(a):a;i.$parsers.push(function(t){if(!g(t)){var e=[];return t&&o(t.split(u),function(t){t&&e.push(s?ir(t):t)}),e}}),i.$formatters.push(function(t){return nr(t)?t.join(a):n}),i.$isEmpty=function(t){return!t||!t.length}}}},to="ng-valid",eo="ng-invalid",no="ng-pristine",ro="ng-dirty",io="ng-pending",oo=new r("ngModel"),ao=["$scope","$exceptionHandler","$attrs","$element","$parse","$animate","$timeout","$rootScope","$q","$interpolate",function(t,e,r,i,a,s,u,c,l,f){this.$modelValue=this.$viewValue=Number.NaN,this.$$rawModelValue=n,this.$validators={},this.$asyncValidators={},this.$parsers=[],this.$formatters=[],this.$viewChangeListeners=[],this.$untouched=!0,this.$touched=!1,this.$pristine=!0,this.$dirty=!1,this.$valid=!0,this.$invalid=!1,this.$error={},this.$$success={},this.$pending=n,this.$name=f(r.name||"",!1)(t);var h,p=a(r.ngModel),$=p.assign,m=p,v=$,b=null,w=this;this.$$setOptions=function(t){if((w.$options=t)&&t.getterSetter){var e=a(r.ngModel+"()"),n=a(r.ngModel+"($$$p)");m=function(t){var n=p(t);return E(n)&&(n=e(t)),n},v=function(t,e){E(p(t))?n(t,{$$$p:w.$modelValue}):$(t,w.$modelValue)}}else if(!p.assign)throw oo("nonassign",r.ngModel,H(i))},this.$render=d,this.$isEmpty=function(t){return g(t)||""===t||null===t||t!==t};var x=i.inheritedData("$formController")||wi,C=0;Rn({ctrl:this,$element:i,set:function(t,e){t[e]=!0},unset:function(t,e){delete t[e]},parentForm:x,$animate:s}),this.$setPristine=function(){w.$dirty=!1,w.$pristine=!0,s.removeClass(i,ro),s.addClass(i,no)},this.$setDirty=function(){w.$dirty=!0,w.$pristine=!1,s.removeClass(i,no),s.addClass(i,ro),x.$setDirty()},this.$setUntouched=function(){w.$touched=!1,w.$untouched=!0,s.setClass(i,"ng-untouched","ng-touched");

},this.$setTouched=function(){w.$touched=!0,w.$untouched=!1,s.setClass(i,"ng-touched","ng-untouched")},this.$rollbackViewValue=function(){u.cancel(b),w.$viewValue=w.$$lastCommittedViewValue,w.$render()},this.$validate=function(){if(!S(w.$modelValue)||!isNaN(w.$modelValue)){var t=w.$$rawModelValue,e=w.$valid,r=w.$modelValue,i=w.$options&&w.$options.allowInvalid;w.$$runValidators(t,w.$$lastCommittedViewValue,function(o){i||e===o||(w.$modelValue=o?t:n,w.$modelValue!==r&&w.$$writeModelToScope())})}},this.$$runValidators=function(t,e,r){function i(){var n=!0;return o(w.$validators,function(r,i){var o=r(t,e);n=n&&o,s(i,o)}),n?!0:(o(w.$asyncValidators,function(t,e){s(e,null)}),!1)}function a(){var r=[],i=!0;o(w.$asyncValidators,function(o,a){var u=o(t,e);if(!u||!E(u.then))throw oo("$asyncValidators",u);s(a,n),r.push(u.then(function(){s(a,!0)},function(t){i=!1,s(a,!1)}))}),r.length?l.all(r).then(function(){u(i)},d):u(!0)}function s(t,e){c===C&&w.$setValidity(t,e)}function u(t){c===C&&r(t)}C++;var c=C;(function(){var t=w.$$parserName||"parse";return h!==n?(h||(o(w.$validators,function(t,e){s(e,null)}),o(w.$asyncValidators,function(t,e){s(e,null)})),s(t,h),h):(s(t,null),!0)})()&&i()?a():u(!1)},this.$commitViewValue=function(){var t=w.$viewValue;u.cancel(b),(w.$$lastCommittedViewValue!==t||""===t&&w.$$hasNativeValidators)&&(w.$$lastCommittedViewValue=t,w.$pristine&&this.$setDirty(),this.$$parseAndValidate())},this.$$parseAndValidate=function(){var e=w.$$lastCommittedViewValue;if(h=g(e)?n:!0)for(var r=0;r<w.$parsers.length;r++)if(e=w.$parsers[r](e),g(e)){h=!1;break}S(w.$modelValue)&&isNaN(w.$modelValue)&&(w.$modelValue=m(t));var i=w.$modelValue,o=w.$options&&w.$options.allowInvalid;w.$$rawModelValue=e,o&&(w.$modelValue=e,w.$modelValue!==i&&w.$$writeModelToScope()),w.$$runValidators(e,w.$$lastCommittedViewValue,function(t){o||(w.$modelValue=t?e:n,w.$modelValue!==i&&w.$$writeModelToScope())})},this.$$writeModelToScope=function(){v(t,w.$modelValue),o(w.$viewChangeListeners,function(t){try{t()}catch(n){e(n)}})},this.$setViewValue=function(t,e){w.$viewValue=t,w.$options&&!w.$options.updateOnDefault||w.$$debounceViewValueCommit(e)},this.$$debounceViewValueCommit=function(e){var n=0,r=w.$options;r&&y(r.debounce)&&(r=r.debounce,S(r)?n=r:S(r[e])?n=r[e]:S(r["default"])&&(n=r["default"])),u.cancel(b),n?b=u(function(){w.$commitViewValue()},n):c.$$phase?w.$commitViewValue():t.$apply(function(){w.$commitViewValue()})},t.$watch(function(){var e=m(t);if(e!==w.$modelValue&&(w.$modelValue===w.$modelValue||e===e)){w.$modelValue=w.$$rawModelValue=e,h=n;for(var r=w.$formatters,i=r.length,o=e;i--;)o=r[i](o);w.$viewValue!==o&&(w.$viewValue=w.$$lastCommittedViewValue=o,w.$render(),w.$$runValidators(e,o,d))}return e})}],so=["$rootScope",function(t){return{restrict:"A",require:["ngModel","^?form","^?ngModelOptions"],controller:ao,priority:1,compile:function(e){return e.addClass(no).addClass("ng-untouched").addClass(to),{pre:function(t,e,n,r){var i=r[0],o=r[1]||wi;i.$$setOptions(r[2]&&r[2].$options),o.$addControl(i),n.$observe("name",function(t){i.$name!==t&&o.$$renameControl(i,t)}),t.$on("$destroy",function(){o.$removeControl(i)})},post:function(e,n,r,i){var o=i[0];o.$options&&o.$options.updateOn&&n.on(o.$options.updateOn,function(t){o.$$debounceViewValueCommit(t&&t.type)}),n.on("blur",function(n){o.$touched||(t.$$phase?e.$evalAsync(o.$setTouched):e.$apply(o.$setTouched))})}}}}}],uo=/(\s+|^)default(\s+|$)/,co=function(){return{restrict:"A",controller:["$scope","$attrs",function(t,e){var r=this;this.$options=P(t.$eval(e.ngModelOptions)),this.$options.updateOn!==n?(this.$options.updateOnDefault=!1,this.$options.updateOn=ir(this.$options.updateOn.replace(uo,function(){return r.$options.updateOnDefault=!0," "}))):this.$options.updateOnDefault=!0}]}},lo=On({terminal:!0,priority:1e3}),fo=r("ngOptions"),ho=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,po=["$compile","$parse",function(t,n){function r(t,e,r){function o(t,e,n,r,i){this.selectValue=t,this.viewValue=e,this.label=n,this.group=r,this.disabled=i}var a=t.match(ho);if(!a)throw fo("iexp",t,H(e));var s=a[5]||a[7],u=a[6];t=/ as /.test(a[0])&&a[1];var c=a[9];e=n(a[2]?a[1]:s);var l=t&&n(t)||e,f=c&&n(c),h=c?function(t,e){return f(r,e)}:function(t){return Pt(t)},p=function(t,e){return h(t,y(t,e))},$=n(a[2]||a[1]),d=n(a[3]||""),m=n(a[4]||""),v=n(a[8]),g={},y=u?function(t,e){return g[u]=e,g[s]=t,g}:function(t){return g[s]=t,g};return{trackBy:c,getTrackByValue:p,getWatchables:n(v,function(t){var e=[];return t=t||[],Object.keys(t).forEach(function(n){var i=y(t[n],n);n=h(t[n],i),e.push(n),(a[2]||a[1])&&(n=$(r,i),e.push(n)),a[4]&&(i=m(r,i),e.push(i))}),e}),getOptions:function(){var t,e=[],n={},a=v(r)||[];if(!u&&i(a))t=a;else{t=[];for(var s in a)a.hasOwnProperty(s)&&"$"!==s.charAt(0)&&t.push(s)}s=t.length;for(var f=0;s>f;f++){var g=a===t?f:t[f],b=y(a[g],g),w=l(r,b),g=h(w,b),x=$(r,b),S=d(r,b),b=m(r,b),w=new o(g,w,x,S,b);e.push(w),n[g]=w}return{items:e,selectValueMap:n,getOptionFromViewValue:function(t){return n[p(t)]},getViewValueFromOption:function(t){return c?Qn.copy(t.viewValue):t.viewValue}}}}}var a=e.createElement("option"),s=e.createElement("optgroup");return{restrict:"A",terminal:!0,require:["select","?ngModel"],link:function(e,n,i,u){function c(t,e){t.element=e,e.disabled=t.disabled,t.value!==e.value&&(e.value=t.selectValue),t.label!==e.label&&(e.label=t.label,e.textContent=t.label)}function l(t,e,n,r){return e&&Hn(e.nodeName)===n?n=e:(n=r.cloneNode(!1),e?t.insertBefore(n,e):t.appendChild(n)),n}function f(t){for(var e;t;)e=t.nextSibling,Ot(t),t=e}function h(t){var e=m&&m[0],n=w&&w[0];if(e||n)for(;t&&(t===e||t===n);)t=t.nextSibling;return t}function p(){var t=x&&d.readValue();x=S.getOptions();var e={},r=n[0].firstChild;if(b&&n.prepend(m),r=h(r),x.items.forEach(function(t){var i,o;t.group?(i=e[t.group],i||(i=l(n[0],r,"optgroup",s),r=i.nextSibling,i.label=t.group,i=e[t.group]={groupElement:i,currentOptionElement:i.firstChild}),o=l(i.groupElement,i.currentOptionElement,"option",a),c(t,o),i.currentOptionElement=o.nextSibling):(o=l(n[0],r,"option",a),c(t,o),r=o.nextSibling)}),Object.keys(e).forEach(function(t){f(e[t].currentOptionElement)}),f(r),$.$render(),!$.$isEmpty(t)){var i=d.readValue();(S.trackBy&&!I(t,i)||t!==i)&&($.$setViewValue(i),$.$render())}}var $=u[1];if($){var d=u[0];u=i.multiple;for(var m,v=0,g=n.children(),y=g.length;y>v;v++)if(""===g[v].value){m=g.eq(v);break}var b=!!m,w=Fn(a.cloneNode(!1));w.val("?");var x,S=r(i.ngOptions,n,e);u?($.$isEmpty=function(t){return!t||0===t.length},d.writeValue=function(t){x.items.forEach(function(t){t.element.selected=!1}),t&&t.forEach(function(t){(t=x.getOptionFromViewValue(t))&&!t.disabled&&(t.element.selected=!0)})},d.readValue=function(){var t=n.val()||[],e=[];return o(t,function(t){t=x.selectValueMap[t],t.disabled||e.push(x.getViewValueFromOption(t))}),e},S.trackBy&&e.$watchCollection(function(){return nr($.$viewValue)?$.$viewValue.map(function(t){return S.getTrackByValue(t)}):void 0},function(){$.$render()})):(d.writeValue=function(t){var e=x.getOptionFromViewValue(t);e&&!e.disabled?n[0].value!==e.selectValue&&(w.remove(),b||m.remove(),n[0].value=e.selectValue,e.element.selected=!0,e.element.setAttribute("selected","selected")):null===t||b?(w.remove(),b||n.prepend(m),n.val(""),m.prop("selected",!0),m.attr("selected",!0)):(b||m.remove(),n.prepend(w),n.val("?"),w.prop("selected",!0),w.attr("selected",!0))},d.readValue=function(){var t=x.selectValueMap[n.val()];return t&&!t.disabled?(b||m.remove(),w.remove(),x.getViewValueFromOption(t)):null},S.trackBy&&e.$watch(function(){return S.getTrackByValue($.$viewValue)},function(){$.$render()})),b?(m.remove(),t(m)(e),m.removeClass("ng-scope")):m=Fn(a.cloneNode(!1)),p(),e.$watchCollection(S.getWatchables,p)}}}}],$o=["$locale","$interpolate","$log",function(t,e,n){var r=/{}/g,i=/^when(Minus)?(.+)$/;return{link:function(a,s,u){function c(t){s.text(t||"")}var l,f=u.count,h=u.$attr.when&&s.attr(u.$attr.when),p=u.offset||0,$=a.$eval(h)||{},m={},v=e.startSymbol(),y=e.endSymbol(),b=v+f+"-"+p+y,w=Qn.noop;o(u,function(t,e){var n=i.exec(e);n&&(n=(n[1]?"-":"")+Hn(n[2]),$[n]=s.attr(u.$attr[e]))}),o($,function(t,n){m[n]=e(t.replace(r,b))}),a.$watch(f,function(e){var r=parseFloat(e),i=isNaN(r);i||r in $||(r=t.pluralCat(r-p)),r===l||i&&S(l)&&isNaN(l)||(w(),i=m[r],g(i)?(null!=e&&n.debug("ngPluralize: no rule defined for '"+r+"' in "+h),w=d,c()):w=a.$watch(i,c),l=r)})}}}],mo=["$parse","$animate",function(t,a){var s=r("ngRepeat"),u=function(t,e,n,r,i,o,a){t[n]=r,i&&(t[i]=o),t.$index=e,t.$first=0===e,t.$last=e===a-1,t.$middle=!(t.$first||t.$last),t.$odd=!(t.$even=0===(1&e))};return{restrict:"A",multiElement:!0,transclude:"element",priority:1e3,terminal:!0,$$tlb:!0,compile:function(r,c){var l=c.ngRepeat,f=e.createComment(" end ngRepeat: "+l+" "),h=l.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);if(!h)throw s("iexp",l);var p=h[1],$=h[2],d=h[3],m=h[4],h=p.match(/^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/);if(!h)throw s("iidexp",p);var v=h[3]||h[1],g=h[2];if(d&&(!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(d)||/^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(d)))throw s("badident",d);var y,b,w,x,S={$id:Pt};return m?y=t(m):(w=function(t,e){return Pt(e)},x=function(t){return t}),function(t,e,r,c,h){y&&(b=function(e,n,r){return g&&(S[g]=e),S[v]=n,S.$index=r,y(t,S)});var p=ut();t.$watchCollection($,function(r){var c,$,m,y,S,C,E,k,A,O,M=e[0],T=ut();if(d&&(t[d]=r),i(r))k=r,$=b||w;else for(O in $=b||x,k=[],r)r.hasOwnProperty(O)&&"$"!==O.charAt(0)&&k.push(O);for(y=k.length,O=Array(y),c=0;y>c;c++)if(S=r===k?c:k[c],C=r[S],E=$(S,C,c),p[E])A=p[E],delete p[E],T[E]=A,O[c]=A;else{if(T[E])throw o(O,function(t){t&&t.scope&&(p[t.id]=t)}),s("dupes",l,E,C);O[c]={id:E,scope:n,clone:n},T[E]=!0}for(m in p){if(A=p[m],E=st(A.clone),a.leave(E),E[0].parentNode)for(c=0,$=E.length;$>c;c++)E[c].$$NG_REMOVED=!0;A.scope.$destroy()}for(c=0;y>c;c++)if(S=r===k?c:k[c],C=r[S],A=O[c],A.scope){m=M;do m=m.nextSibling;while(m&&m.$$NG_REMOVED);A.clone[0]!=m&&a.move(st(A.clone),null,Fn(M)),M=A.clone[A.clone.length-1],u(A.scope,c,v,C,g,S,y)}else h(function(t,e){A.scope=e;var n=f.cloneNode(!1);t[t.length++]=n,a.enter(t,null,Fn(M)),M=n,A.clone=t,T[A.id]=A,u(A.scope,c,v,C,g,S,y)});p=T})}}}}],vo=["$animate",function(t){return{restrict:"A",multiElement:!0,link:function(e,n,r){e.$watch(r.ngShow,function(e){t[e?"removeClass":"addClass"](n,"ng-hide",{tempClasses:"ng-hide-animate"})})}}}],go=["$animate",function(t){return{restrict:"A",multiElement:!0,link:function(e,n,r){e.$watch(r.ngHide,function(e){t[e?"addClass":"removeClass"](n,"ng-hide",{tempClasses:"ng-hide-animate"})})}}}],yo=On(function(t,e,n){t.$watch(n.ngStyle,function(t,n){n&&t!==n&&o(n,function(t,n){e.css(n,"")}),t&&e.css(t)},!0)}),bo=["$animate",function(t){return{require:"ngSwitch",controller:["$scope",function(){this.cases={}}],link:function(n,r,i,a){var s=[],u=[],c=[],l=[],f=function(t,e){return function(){t.splice(e,1)}};n.$watch(i.ngSwitch||i.on,function(n){var r,i;for(r=0,i=c.length;i>r;++r)t.cancel(c[r]);for(r=c.length=0,i=l.length;i>r;++r){var h=st(u[r].clone);l[r].$destroy(),(c[r]=t.leave(h)).then(f(c,r))}u.length=0,l.length=0,(s=a.cases["!"+n]||a.cases["?"])&&o(s,function(n){n.transclude(function(r,i){l.push(i);var o=n.element;r[r.length++]=e.createComment(" end ngSwitchWhen: "),u.push({clone:r}),t.enter(r,o.parent(),o)})})})}}}],wo=On({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(t,e,n,r,i){r.cases["!"+n.ngSwitchWhen]=r.cases["!"+n.ngSwitchWhen]||[],r.cases["!"+n.ngSwitchWhen].push({transclude:i,element:e})}}),xo=On({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(t,e,n,r,i){r.cases["?"]=r.cases["?"]||[],r.cases["?"].push({transclude:i,element:e})}}),So=On({restrict:"EAC",link:function(t,e,n,i,o){if(!o)throw r("ngTransclude")("orphan",H(e));o(function(t){e.empty(),e.append(t)})}}),Co=["$templateCache",function(t){return{restrict:"E",terminal:!0,compile:function(e,n){"text/ng-template"==n.type&&t.put(n.id,e[0].text)}}}],Eo={$setViewValue:d,$render:d},ko=["$element","$scope","$attrs",function(t,r,i){var o=this,a=new Dt;o.ngModelCtrl=Eo,o.unknownOption=Fn(e.createElement("option")),o.renderUnknownOption=function(e){e="? "+Pt(e)+" ?",o.unknownOption.val(e),t.prepend(o.unknownOption),t.val(e)},r.$on("$destroy",function(){o.renderUnknownOption=d}),o.removeUnknownOption=function(){o.unknownOption.parent()&&o.unknownOption.remove()},o.readValue=function(){return o.removeUnknownOption(),t.val()},o.writeValue=function(e){o.hasOption(e)?(o.removeUnknownOption(),t.val(e),""===e&&o.emptyOption.prop("selected",!0)):null==e&&o.emptyOption?(o.removeUnknownOption(),t.val("")):o.renderUnknownOption(e)},o.addOption=function(t,e){ot(t,'"option value"'),""===t&&(o.emptyOption=e);var n=a.get(t)||0;a.put(t,n+1)},o.removeOption=function(t){var e=a.get(t);e&&(1===e?(a.remove(t),""===t&&(o.emptyOption=n)):a.put(t,e-1))},o.hasOption=function(t){return!!a.get(t)}}],Ao=function(){return{restrict:"E",require:["select","?ngModel"],controller:ko,link:function(t,e,n,r){var i=r[1];if(i){var a=r[0];if(a.ngModelCtrl=i,i.$render=function(){a.writeValue(i.$viewValue)},e.on("change",function(){t.$apply(function(){i.$setViewValue(a.readValue())})}),n.multiple){a.readValue=function(){var t=[];return o(e.find("option"),function(e){e.selected&&t.push(e.value)}),t},a.writeValue=function(t){var n=new Dt(t);o(e.find("option"),function(t){t.selected=y(n.get(t.value))})};var s,u=0/0;t.$watch(function(){u!==i.$viewValue||I(s,i.$viewValue)||(s=D(i.$viewValue),i.$render()),u=i.$viewValue}),i.$isEmpty=function(t){return!t||0===t.length}}}}}},Oo=["$interpolate",function(t){function e(t){t[0].hasAttribute("selected")&&(t[0].selected=!0)}return{restrict:"E",priority:100,compile:function(n,r){if(g(r.value)){var i=t(n.text(),!0);i||r.$set("value",n.text())}return function(t,n,r){var o=n.parent(),a=o.data("$selectController")||o.parent().data("$selectController");a&&a.ngModelCtrl&&(i?t.$watch(i,function(t,i){r.$set("value",t),i!==t&&a.removeOption(i),a.addOption(t,n),a.ngModelCtrl.$render(),e(n)}):(a.addOption(r.value,n),a.ngModelCtrl.$render(),e(n)),n.on("$destroy",function(){a.removeOption(r.value),a.ngModelCtrl.$render()}))}}}}],Mo=v({restrict:"E",terminal:!1}),To=function(){return{restrict:"A",require:"?ngModel",link:function(t,e,n,r){r&&(n.required=!0,r.$validators.required=function(t,e){return!n.required||!r.$isEmpty(e)},n.$observe("required",function(){r.$validate()}))}}},Vo=function(){return{restrict:"A",require:"?ngModel",link:function(t,e,i,o){if(o){var a,s=i.ngPattern||i.pattern;i.$observe("pattern",function(t){if(x(t)&&0<t.length&&(t=new RegExp("^"+t+"$")),t&&!t.test)throw r("ngPattern")("noregexp",s,t,H(e));a=t||n,o.$validate()}),o.$validators.pattern=function(t){return o.$isEmpty(t)||g(a)||a.test(t)}}}}},No=function(){return{restrict:"A",require:"?ngModel",link:function(t,e,n,r){if(r){var i=-1;n.$observe("maxlength",function(t){t=p(t),i=isNaN(t)?-1:t,r.$validate()}),r.$validators.maxlength=function(t,e){return 0>i||r.$isEmpty(e)||e.length<=i}}}}},jo=function(){return{restrict:"A",require:"?ngModel",link:function(t,e,n,r){if(r){var i=0;n.$observe("minlength",function(t){i=p(t)||0,r.$validate()}),r.$validators.minlength=function(t,e){return r.$isEmpty(e)||e.length>=i}}}}};t.angular.bootstrap?console.log("WARNING: Tried to load angular more than once."):(nt(),lt(Qn),Fn(e).ready(function(){Z(e,X)}))}(window,document),!window.angular.$$csp()&&window.angular.element(document).find("head").prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');
!function(e,n,t){"use strict";function c(e,t,c){o.directive(e,["$parse","$swipe",function(o,i){return function(a,u,r){function s(e){if(!l)return!1;var n=Math.abs(e.y-l.y);return e=(e.x-l.x)*t,h&&75>n&&e>0&&e>30&&.3>n/e}var l,h,f=o(r[e]),v=["touch"];n.isDefined(r.ngSwipeDisableMouse)||v.push("mouse"),i.bind(u,{start:function(e,n){l=e,h=!0},cancel:function(e){h=!1},end:function(e,n){s(e)&&a.$apply(function(){u.triggerHandler(c),f(a,{$event:n})})}},v)}}])}var o=n.module("ngTouch",[]);o.factory("$swipe",[function(){function e(e){e=e.originalEvent||e;var n=e.touches&&e.touches.length?e.touches:[e];return e=e.changedTouches&&e.changedTouches[0]||n[0],{x:e.clientX,y:e.clientY}}function t(e,t){var o=[];return n.forEach(e,function(e){(e=c[e][t])&&o.push(e)}),o.join(" ")}var c={mouse:{start:"mousedown",move:"mousemove",end:"mouseup"},touch:{start:"touchstart",move:"touchmove",end:"touchend",cancel:"touchcancel"}};return{bind:function(n,c,o){var i,a,u,r,s=!1;o=o||["mouse","touch"],n.on(t(o,"start"),function(n){u=e(n),s=!0,a=i=0,r=u,c.start&&c.start(u,n)});var l=t(o,"cancel");l&&n.on(l,function(e){s=!1,c.cancel&&c.cancel(e)}),n.on(t(o,"move"),function(n){if(s&&u){var t=e(n);i+=Math.abs(t.x-r.x),a+=Math.abs(t.y-r.y),r=t,10>i&&10>a||(a>i?(s=!1,c.cancel&&c.cancel(n)):(n.preventDefault(),c.move&&c.move(t,n)))}}),n.on(t(o,"end"),function(n){s&&(s=!1,c.end&&c.end(e(n),n))})}}}]),o.config(["$provide",function(e){e.decorator("ngClickDirective",["$delegate",function(e){return e.shift(),e}])}]),o.directive("ngClick",["$parse","$timeout","$rootElement",function(e,t,c){function o(e,n,t){for(var c=0;c<e.length;c+=2){var o=e[c+1],i=t;if(25>Math.abs(e[c]-n)&&25>Math.abs(o-i))return e.splice(c,c+2),!0}return!1}function i(e){if(!(2500<Date.now()-u)){var t=e.touches&&e.touches.length?e.touches:[e],c=t[0].clientX,t=t[0].clientY;if(!(1>c&&1>t||s&&s[0]===c&&s[1]===t)){s&&(s=null);var i=e.target;"label"===n.lowercase(i.nodeName||i[0]&&i[0].nodeName)&&(s=[c,t]),o(r,c,t)||(e.stopPropagation(),e.preventDefault(),e.target&&e.target.blur&&e.target.blur())}}}function a(e){e=e.touches&&e.touches.length?e.touches:[e];var n=e[0].clientX,c=e[0].clientY;r.push(n,c),t(function(){for(var e=0;e<r.length;e+=2)if(r[e]==n&&r[e+1]==c){r.splice(e,e+2);break}},2500,!1)}var u,r,s;return function(t,s,l){var h,f,v,d,g=e(l.ngClick),p=!1;s.on("touchstart",function(e){p=!0,h=e.target?e.target:e.srcElement,3==h.nodeType&&(h=h.parentNode),s.addClass("ng-click-active"),f=Date.now(),e=e.originalEvent||e,e=(e.touches&&e.touches.length?e.touches:[e])[0],v=e.clientX,d=e.clientY}),s.on("touchcancel",function(e){p=!1,s.removeClass("ng-click-active")}),s.on("touchend",function(e){var t=Date.now()-f,g=e.originalEvent||e,m=(g.changedTouches&&g.changedTouches.length?g.changedTouches:g.touches&&g.touches.length?g.touches:[g])[0],g=m.clientX,m=m.clientY,w=Math.sqrt(Math.pow(g-v,2)+Math.pow(m-d,2));p&&750>t&&12>w&&(r||(c[0].addEventListener("click",i,!0),c[0].addEventListener("touchstart",a,!0),r=[]),u=Date.now(),o(r,g,m),h&&h.blur(),n.isDefined(l.disabled)&&!1!==l.disabled||s.triggerHandler("click",[e])),p=!1,s.removeClass("ng-click-active")}),s.onclick=function(e){},s.on("click",function(e,n){t.$apply(function(){g(t,{$event:n||e})})}),s.on("mousedown",function(e){s.addClass("ng-click-active")}),s.on("mousemove mouseup",function(e){s.removeClass("ng-click-active")})}}]),c("ngSwipeLeft",-1,"swipeleft"),c("ngSwipeRight",1,"swiperight")}(window,window.angular);
!function(n,t,e){"use strict";function a(n,t,e){if(!n)throw ngMinErr("areq","Argument '{0}' is {1}",t||"?",e||"required");return n}function r(n,t){return n||t?n?t?(E(n)&&(n=n.join(" ")),E(t)&&(t=t.join(" ")),n+" "+t):n:t:""}function i(n){var t={};return n&&(n.to||n.from)&&(t.to=n.to,t.from=n.from),t}function o(n,t,e){var a="";return n=E(n)?n:n&&N(n)&&n.length?n.split(/\s+/):[],q(n,function(n,r){n&&n.length>0&&(a+=r>0?" ":"",a+=e?t+n:n+t)}),a}function s(n,t){var e=n.indexOf(t);t>=0&&n.splice(e,1)}function u(n){if(n instanceof R)switch(n.length){case 0:return[];case 1:if(n[0].nodeType===K)return n;break;default:return R(l(n))}return n.nodeType===K?R(n):void 0}function l(n){if(!n[0])return n;for(var t=0;t<n.length;t++){var e=n[t];if(e.nodeType==K)return e}}function c(n,t,e){q(t,function(t){n.addClass(t,e)})}function f(n,t,e){q(t,function(t){n.removeClass(t,e)})}function m(n){return function(t,e){e.addClass&&(c(n,t,e.addClass),e.addClass=null),e.removeClass&&(f(n,t,e.removeClass),e.removeClass=null)}}function v(n){if(n=n||{},!n.$$prepared){var t=n.domOperation||M;n.domOperation=function(){n.$$domOperationFired=!0,t(),t=M},n.$$prepared=!0}return n}function d(n,t){h(n,t),p(n,t)}function h(n,t){t.from&&(n.css(t.from),t.from=null)}function p(n,t){t.to&&(n.css(t.to),t.to=null)}function g(n,t,e){var a=(t.addClass||"")+" "+(e.addClass||""),r=(t.removeClass||"")+" "+(e.removeClass||""),i=$(n.attr("class"),a,r);return _(t,e),t.addClass=i.addClass?i.addClass:null,t.removeClass=i.removeClass?i.removeClass:null,t}function $(n,t,e){function a(n){N(n)&&(n=n.split(" "));var t={};return q(n,function(n){n.length&&(t[n]=!0)}),t}var r=1,i=-1,o={};n=a(n),t=a(t),q(t,function(n,t){o[t]=r}),e=a(e),q(e,function(n,t){o[t]=o[t]===r?null:i});var s={addClass:"",removeClass:""};return q(o,function(t,e){var a,o;t===r?(a="addClass",o=!n[e]):t===i&&(a="removeClass",o=n[e]),o&&(s[a].length&&(s[a]+=" "),s[a]+=e)}),s}function C(n){return n instanceof t.element?n[0]:n}function y(n,t,e){var a=Object.create(null),r=n.getComputedStyle(t)||{};return q(e,function(n,t){var e=r[n];if(e){var i=e.charAt(0);("-"===i||"+"===i||i>=0)&&(e=D(e)),0===e&&(e=null),a[t]=e}}),a}function D(n){var t=0,e=n.split(/\s*,\s*/);return q(e,function(n){"s"==n.charAt(n.length-1)&&(n=n.substring(0,n.length-1)),n=parseFloat(n)||0,t=t?Math.max(n,t):n}),t}function A(n){return 0===n||null!=n}function b(n,t){var e=F,a=n+"s";return t?e+=X:a+=" linear all",[e,a]}function k(n){return[ln,n+"s"]}function w(n,t){var e=t?un:cn;return[e,n+"s"]}function T(n,t){var e=t?"-"+t+"s":"";return x(n,[cn,e]),[cn,e]}function S(n,t){var e=t?"paused":"",a=I+en;return x(n,[a,e]),[a,e]}function x(n,t){var e=t[0],a=t[1];n.style[e]=a}function j(){var n=Object.create(null);return{flush:function(){n=Object.create(null)},count:function(t){var e=n[t];return e?e.total:0},get:function(t){var e=n[t];return e&&e.value},put:function(t,e){n[t]?n[t].total++:n[t]={total:1,value:e}}}}var F,O,I,P,M=t.noop,_=t.extend,R=t.element,q=t.forEach,E=t.isArray,N=t.isString,L=t.isObject,H=t.isUndefined,B=t.isDefined,J=t.isFunction,U=t.isElement,K=1,Q="ng-animate",W="$$ngAnimateChildren",z=["$$rAF",function(n){function t(n){i.push([].concat(n)),e()}function e(){if(i.length){for(var t=[],o=0;o<i.length;o++){var s=i[o];a(s),s.length&&t.push(s)}i=t,r||n(function(){r||e()})}}function a(n){var t=n.shift();t()}var r,i=[];return t.waitUntilQuiet=function(t){r&&r(),r=n(function(){r=null,t(),e()})},t}],G=[function(){return function(n,e,a){var r=a.ngAnimateChildren;t.isString(r)&&0===r.length?e.data(W,!0):a.$observe("ngAnimateChildren",function(n){n="on"===n||"true"===n,e.data(W,n)})}}],V="";n.ontransitionend===e&&n.onwebkittransitionend!==e?(V="-webkit-",F="WebkitTransition",O="webkitTransitionEnd transitionend"):(F="transition",O="transitionend"),n.onanimationend===e&&n.onwebkitanimationend!==e?(V="-webkit-",I="WebkitAnimation",P="webkitAnimationEnd animationend"):(I="animation",P="animationend");var X="Duration",Y="Property",Z="Delay",nn="TimingFunction",tn="IterationCount",en="PlayState",an=3,rn=1.5,on=1e3,sn=9999,un=I+Z,ln=I+X,cn=F+Z,fn=F+X,mn={transitionDuration:fn,transitionDelay:cn,transitionProperty:F+Y,animationDuration:ln,animationDelay:un,animationIterationCount:I+tn},vn={transitionDuration:fn,transitionDelay:cn,animationDuration:ln,animationDelay:un},dn=["$animateProvider",function(n){var t=j(),e=j();this.$get=["$window","$$jqLite","$$AnimateRunner","$timeout","$document","$sniffer","$$rAFScheduler",function(n,a,r,u,l,c,f){function g(n,t){var e="$$ngAnimateParentKey",a=n.parentNode,r=a[e]||(a[e]=++N);return r+"-"+n.getAttribute("class")+"-"+t}function $(e,a,r,i){var o=t.get(r);return o||(o=y(n,e,i),"infinite"===o.animationIterationCount&&(o.animationIterationCount=1)),t.put(r,o),o}function D(r,i,s,u){var l;if(t.count(s)>0&&(l=e.get(s),!l)){var c=o(i,"-stagger");a.addClass(r,c),l=y(n,r,u),l.animationDuration=Math.max(l.animationDuration,0),l.transitionDuration=Math.max(l.transitionDuration,0),a.removeClass(r,c),e.put(s,l)}return l||{}}function j(n){H.push(n),f.waitUntilQuiet(function(){t.flush(),e.flush();for(var n=L.offsetWidth+1,a=0;a<H.length;a++)H[a](n);H.length=0})}function M(n,t,e){var a=$(n,t,e,mn),r=a.animationDelay,i=a.transitionDelay;return a.maxDelay=r&&i?Math.max(r,i):r||i,a.maxDuration=Math.max(a.animationDuration*a.animationIterationCount,a.transitionDuration),a}function _(n,e){function l(){m()}function f(){m(!0)}function m(t){L||B&&H||(L=!0,H=!1,a.removeClass(n,ln),a.removeClass(n,fn),S(N,!1),T(N,!1),q(G,function(n){N.style[n[0]]=""}),R(n,e),d(n,e),e.onDone&&e.onDone(),J&&J.complete(!t))}function $(n){wn.blockTransition&&T(N,n),wn.blockKeyframeAnimation&&S(N,!!n)}function y(){return J=new r({end:l,cancel:f}),m(),{$$willAnimate:!1,start:function(){return J},end:l}}function _(){function t(){if(!L){if($(!1),q(G,function(n){var t=n[0],e=n[1];N.style[t]=e}),R(n,e),a.addClass(n,fn),wn.recalculateTimingStyles){if(cn=N.className+" "+ln,dn=g(N,cn),bn=M(N,cn,dn),kn=bn.maxDelay,K=Math.max(kn,0),W=bn.maxDuration,0===W)return void m();wn.hasTransitions=bn.transitionDuration>0,wn.hasAnimations=bn.animationDuration>0}if(wn.applyTransitionDelay||wn.applyAnimationDelay){kn="boolean"!=typeof e.delay&&A(e.delay)?parseFloat(e.delay):kn,K=Math.max(kn,0);var t;wn.applyTransitionDelay&&(bn.transitionDelay=kn,t=w(kn),G.push(t),N.style[t[0]]=t[1]),wn.applyAnimationDelay&&(bn.animationDelay=kn,t=w(kn,!0),G.push(t),N.style[t[0]]=t[1])}if(Q=K*on,z=W*on,e.easing){var s,c=e.easing;wn.hasTransitions&&(s=F+nn,G.push([s,c]),N.style[s]=c),wn.hasAnimations&&(s=I+nn,G.push([s,c]),N.style[s]=c)}bn.transitionDuration&&l.push(O),bn.animationDuration&&l.push(P),o=Date.now(),n.on(l.join(" "),i),u(r,Q+rn*z),p(n,e)}}function r(){m()}function i(n){n.stopPropagation();var t=n.originalEvent||n,e=t.$manualTimeStamp||t.timeStamp||Date.now(),a=parseFloat(t.elapsedTime.toFixed(an));Math.max(e-o,0)>=Q&&a>=W&&(B=!0,m())}if(!L){var o,l=[],c=function(n){if(B)H&&n&&(H=!1,m());else if(H=!n,bn.animationDuration){var t=S(N,H);H?G.push(t):s(G,t)}},f=Dn>0&&(bn.transitionDuration&&0===hn.transitionDuration||bn.animationDuration&&0===hn.animationDuration)&&Math.max(hn.animationDelay,hn.transitionDelay);f?u(t,Math.floor(f*Dn*on),!1):t(),U.resume=function(){c(!0)},U.pause=function(){c(!1)}}}var N=C(n);e=v(e);var L,H,B,J,U,K,Q,W,z,G=[],V=n.attr("class"),X=i(e);if(0===e.duration||!c.animations&&!c.transitions)return y();var Z=e.event&&E(e.event)?e.event.join(" "):e.event,tn=Z&&e.structural,en="",un="";tn?en=o(Z,"ng-",!0):Z&&(en=Z),e.addClass&&(un+=o(e.addClass,"-add")),e.removeClass&&(un.length&&(un+=" "),un+=o(e.removeClass,"-remove")),e.applyClassesEarly&&un.length&&(R(n,e),un="");var ln=[en,un].join(" ").trim(),cn=V+" "+ln,fn=o(ln,"-active"),mn=X.to&&Object.keys(X.to).length>0;if(!mn&&!ln)return y();var dn,hn;if(e.stagger>0){var pn=parseFloat(e.stagger);hn={transitionDelay:pn,animationDelay:pn,transitionDuration:0,animationDuration:0}}else dn=g(N,cn),hn=D(N,ln,dn,vn);a.addClass(n,ln);var gn;if(e.transitionStyle){var $n=[F,e.transitionStyle];x(N,$n),G.push($n)}if(e.duration>=0){gn=N.style[F].length>0;var Cn=b(e.duration,gn);x(N,Cn),G.push(Cn)}if(e.keyframeStyle){var yn=[I,e.keyframeStyle];x(N,yn),G.push(yn)}var Dn=hn?e.staggerIndex>=0?e.staggerIndex:t.count(dn):0,An=0===Dn;An&&T(N,sn);var bn=M(N,cn,dn),kn=bn.maxDelay;K=Math.max(kn,0),W=bn.maxDuration;var wn={};return wn.hasTransitions=bn.transitionDuration>0,wn.hasAnimations=bn.animationDuration>0,wn.hasTransitionAll=wn.hasTransitions&&"all"==bn.transitionProperty,wn.applyTransitionDuration=mn&&(wn.hasTransitions&&!wn.hasTransitionAll||wn.hasAnimations&&!wn.hasTransitions),wn.applyAnimationDuration=e.duration&&wn.hasAnimations,wn.applyTransitionDelay=A(e.delay)&&(wn.applyTransitionDuration||wn.hasTransitions),wn.applyAnimationDelay=A(e.delay)&&wn.hasAnimations,wn.recalculateTimingStyles=un.length>0,(wn.applyTransitionDuration||wn.applyAnimationDuration)&&(W=e.duration?parseFloat(e.duration):W,wn.applyTransitionDuration&&(wn.hasTransitions=!0,bn.transitionDuration=W,gn=N.style[F+Y].length>0,G.push(b(W,gn))),wn.applyAnimationDuration&&(wn.hasAnimations=!0,bn.animationDuration=W,G.push(k(W)))),0!==W||wn.recalculateTimingStyles?(null==e.duration&&bn.transitionDuration>0&&(wn.recalculateTimingStyles=wn.recalculateTimingStyles||An),Q=K*on,z=W*on,e.skipBlocking||(wn.blockTransition=bn.transitionDuration>0,wn.blockKeyframeAnimation=bn.animationDuration>0&&hn.animationDelay>0&&0===hn.animationDuration),h(n,e),wn.blockTransition||T(N,!1),$(W),{$$willAnimate:!0,end:l,start:function(){return L?void 0:(U={end:l,cancel:f,resume:null,pause:null},J=new r(U),j(_),J)}}):y()}var R=m(a),N=0,L=C(l).body,H=[];return _}]}],hn=["$$animationProvider",function(n){n.drivers.push("$$animateCssDriver");var t="ng-animate-shim",e="ng-anchor",a="ng-anchor-out",r="ng-anchor-in";this.$get=["$animateCss","$rootScope","$$AnimateRunner","$rootElement","$document","$sniffer",function(n,i,o,s,u,l){function c(n){return n.replace(/\bng-\S+\b/g,"")}function f(n,t){return N(n)&&(n=n.split(" ")),N(t)&&(t=t.split(" ")),n.filter(function(n){return-1===t.indexOf(n)}).join(" ")}function m(i,s,u){function l(n){var t={},e=C(n).getBoundingClientRect();return q(["width","height","top","left"],function(n){var a=e[n];switch(n){case"top":a+=h.scrollTop;break;case"left":a+=h.scrollLeft}t[n]=Math.floor(a)+"px"}),t}function m(){var t=n($,{addClass:a,delay:!0,from:l(s)});return t.$$willAnimate?t:null}function v(n){return n.attr("class")||""}function d(){var t=c(v(u)),e=f(t,y),i=f(y,t),o=n($,{to:l(u),addClass:r+" "+e,removeClass:a+" "+i,delay:!0});return o.$$willAnimate?o:null}function p(){$.remove(),s.removeClass(t),u.removeClass(t)}var $=R(C(s).cloneNode(!0)),y=c(v($));s.addClass(t),u.addClass(t),$.addClass(e),g.append($);var D,A=m();if(!A&&(D=d(),!D))return p();var b=A||D;return{start:function(){function n(){e&&e.end()}var t,e=b.start();return e.done(function(){return e=null,!D&&(D=d())?(e=D.start(),e.done(function(){e=null,p(),t.complete()}),e):(p(),void t.complete())}),t=new o({end:n,cancel:n})}}}function v(n,t,e,a){var r=d(n),i=d(t),s=[];return q(a,function(n){var t=n.out,a=n["in"],r=m(e,t,a);r&&s.push(r)}),r||i||0!==s.length?{start:function(){function n(){q(t,function(n){n.end()})}var t=[];r&&t.push(r.start()),i&&t.push(i.start()),q(s,function(n){t.push(n.start())});var e=new o({end:n,cancel:n});return o.all(t,function(n){e.complete(n)}),e}}:void 0}function d(t){var e=t.element,a=t.options||{};t.structural?(a.structural=a.applyClassesEarly=!0,a.event=t.event,"leave"===a.event&&(a.onDone=a.domOperation)):a.event=null;var r=n(e,a);return r.$$willAnimate?r:null}if(!l.animations&&!l.transitions)return M;var h=C(u).body,p=C(s),g=R(h.parentNode===p?h:p);return function(n){return n.from&&n.to?v(n.from,n.to,n.classes,n.anchors):d(n)}}]}],pn=["$animateProvider",function(n){this.$get=["$injector","$$AnimateRunner","$$rAFMutex","$$jqLite",function(t,e,a,r){function i(e){e=E(e)?e:e.split(" ");for(var a=[],r={},i=0;i<e.length;i++){var o=e[i],s=n.$$registeredAnimations[o];s&&!r[o]&&(a.push(t.get(s)),r[o]=!0)}return a}var o=m(r);return function(n,t,a,r){function s(){r.domOperation(),o(n,r)}function u(n,t,a,r,i){var o;switch(a){case"animate":o=[t,r.from,r.to,i];break;case"setClass":o=[t,h,p,i];break;case"addClass":o=[t,h,i];break;case"removeClass":o=[t,p,i];break;default:o=[t,i]}o.push(r);var s=n.apply(n,o);if(s)if(J(s.start)&&(s=s.start()),s instanceof e)s.done(i);else if(J(s))return s;return M}function l(n,t,a,r,i){var o=[];return q(r,function(r){var s=r[i];s&&o.push(function(){var r,i,o=!1,l=function(n){o||(o=!0,(i||M)(n),r.complete(!n))};return r=new e({end:function(){l()},cancel:function(){l(!0)}}),i=u(s,n,t,a,function(n){var t=n===!1;l(t)}),r})}),o}function c(n,t,a,r,i){var o=l(n,t,a,r,i);if(0===o.length){var s,u;"beforeSetClass"===i?(s=l(n,"removeClass",a,r,"beforeRemoveClass"),u=l(n,"addClass",a,r,"beforeAddClass")):"setClass"===i&&(s=l(n,"removeClass",a,r,"removeClass"),u=l(n,"addClass",a,r,"addClass")),s&&(o=o.concat(s)),u&&(o=o.concat(u))}if(0!==o.length)return function(n){var t=[];return o.length&&q(o,function(n){t.push(n())}),t.length?e.all(t,n):n(),function(n){q(t,function(t){n?t.cancel():t.end()})}}}3===arguments.length&&L(a)&&(r=a,a=null),r=v(r),a||(a=n.attr("class")||"",r.addClass&&(a+=" "+r.addClass),r.removeClass&&(a+=" "+r.removeClass));var f,m,h=r.addClass,p=r.removeClass,g=i(a);if(g.length){var $,C;"leave"==t?(C="leave",$="afterLeave"):(C="before"+t.charAt(0).toUpperCase()+t.substr(1),$=t),"enter"!==t&&"move"!==t&&(f=c(n,t,r,g,C)),m=c(n,t,r,g,$)}return f||m?{start:function(){function t(t){u=!0,s(),d(n,r),l.complete(t)}function a(n){u||((i||M)(n),t(n))}var i,o=[];f&&o.push(function(n){i=f(n)}),o.length?o.push(function(n){s(),n(!0)}):s(),m&&o.push(function(n){i=m(n)});var u=!1,l=new e({end:function(){a()},cancel:function(){a(!0)}});return e.chain(o,t),l}}:void 0}}]}],gn=["$$animationProvider",function(n){n.drivers.push("$$animateJsDriver"),this.$get=["$$animateJs","$$AnimateRunner",function(n,t){function e(t){var e=t.element,a=t.event,r=t.options,i=t.classes;return n(e,a,i,r)}return function(n){if(n.from&&n.to){var a=e(n.from),r=e(n.to);if(!a&&!r)return;return{start:function(){function n(){return function(){q(i,function(n){n.end()})}}function e(n){o.complete(n)}var i=[];a&&i.push(a.start()),r&&i.push(r.start()),t.all(i,e);var o=new t({end:n(),cancel:n()});return o}}}return e(n)}}]}],$n="data-ng-animate",Cn="$ngAnimatePin",yn=["$animateProvider",function(n){function t(n,t,e,a){return o[n].some(function(n){return n(t,e,a)})}function e(n,t){n=n||{};var e=(n.addClass||"").length>0,a=(n.removeClass||"").length>0;return t?e&&a:e||a}var r=1,i=2,o=this.rules={skip:[],cancel:[],join:[]};o.join.push(function(n,t,a){return!t.structural&&e(t.options)}),o.skip.push(function(n,t,a){return!t.structural&&!e(t.options)}),o.skip.push(function(n,t,e){return"leave"==e.event&&t.structural}),o.skip.push(function(n,t,e){return e.structural&&!t.structural}),o.cancel.push(function(n,t,e){return e.structural&&t.structural}),o.cancel.push(function(n,t,e){return e.state===i&&t.structural}),o.cancel.push(function(n,t,e){var a=t.options,r=e.options;return a.addClass&&a.addClass===r.removeClass||a.removeClass&&a.removeClass===r.addClass}),this.$get=["$$rAF","$rootScope","$rootElement","$document","$$HashMap","$$animation","$$AnimateRunner","$templateRequest","$$jqLite",function(o,s,c,f,h,p,$,y,D){function A(n,t){return g(n,t,{})}function b(n,t){var e=C(n),a=[],r=Q[t];return r&&q(r,function(n){n.node.contains(e)&&a.push(n.callback)}),a}function k(n,t,e,a){o(function(){q(b(t,n),function(n){n(t,e,a)})})}function w(n,a,o){function l(t,e,a,r){k(e,n,a,r),t.progress(e,a,r)}function c(t){V(n,o),d(n,o),o.domOperation(),h.complete(!t)}var f,m;n=u(n),n&&(f=C(n),m=n.parent()),o=v(o);var h=new $;if(!f)return c(),h;E(o.addClass)&&(o.addClass=o.addClass.join(" ")),E(o.removeClass)&&(o.removeClass=o.removeClass.join(" ")),o.from&&!L(o.from)&&(o.from=null),o.to&&!L(o.to)&&(o.to=null);var y=[f.className,o.addClass,o.removeClass].join(" ");if(!G(y))return c(),h;var D=["enter","move","leave"].indexOf(a)>=0,b=!M||P.get(f),w=!b&&I.get(f)||{},x=!!w.state;if(b||x&&w.state==r||(b=!F(n,m,a)),b)return c(),h;D&&T(n);var _={structural:D,element:n,event:a,close:c,options:o,runner:h};if(x){var R=t("skip",n,_,w);if(R)return w.state===i?(c(),h):(g(n,w.options,o),w.runner);var q=t("cancel",n,_,w);if(q)w.state===i?w.runner.end():w.structural?w.close():g(n,_.options,w.options);else{var N=t("join",n,_,w);if(N){if(w.state!==i)return a=_.event=w.event,o=g(n,w.options,_.options),h;A(n,o)}}}else A(n,o);var H=_.structural;if(H||(H="animate"===_.event&&Object.keys(_.options.to||{}).length>0||e(_.options)),!H)return c(),S(n),h;D&&j(m);var B=(w.counter||0)+1;return _.counter=B,O(n,r,_),s.$$postDigest(function(){var t=I.get(f),r=!t;t=t||{};var s=n.parent()||[],u=s.length>0&&("animate"===t.event||t.structural||e(t.options));if(r||t.counter!==B||!u)return r&&(V(n,o),d(n,o)),(r||D&&t.event!==a)&&(o.domOperation(),h.end()),void(u||S(n));a=!t.structural&&e(t.options,!0)?"setClass":t.event,t.structural&&j(s),O(n,i);var m=p(n,a,t.options);m.done(function(t){c(!t);var e=I.get(f);e&&e.counter===B&&S(C(n)),l(h,a,"close",{})}),h.setHost(m),l(h,a,"start",{})}),h}function T(n){var t=C(n),e=t.querySelectorAll("["+$n+"]");q(e,function(n){var t=parseInt(n.getAttribute($n)),e=I.get(n);switch(t){case i:e.runner.end();case r:e&&I.remove(n)}})}function S(n){var t=C(n);t.removeAttribute($n),I.remove(t)}function x(n,t){return C(n)===C(t)}function j(n){function t(n,t){!t.structural&&e(t.options)&&(t.state===i&&t.runner.end(),S(n))}for(var a=C(n);;){if(!a||a.nodeType!==K)break;var r=I.get(a);r&&t(a,r),a=a.parentNode}}function F(n,t,e){var a,r=!1,i=!1,o=!1,s=n.data(Cn);for(s&&(t=s);t&&t.length;){i||(i=x(t,c));var u=t[0];if(u.nodeType!==K)break;var l=I.get(u)||{};if(o||(o=l.structural||P.get(u)),H(a)||a===!0){var f=t.data(W);B(f)&&(a=f)}if(o&&a===!1)break;i||(i=x(t,c),i||(s=t.data(Cn),s&&(t=s))),r||(r=x(t,J)),t=t.parent()}var m=!o||a;return m&&i&&r}function O(n,t,e){e=e||{},e.state=t;var a=C(n);a.setAttribute($n,t);var r=I.get(a),i=r?_(r,e):e;I.put(a,i)}var I=new h,P=new h,M=null,N=s.$watch(function(){return 0===y.totalPendingRequests},function(n){n&&(N(),s.$$postDigest(function(){s.$$postDigest(function(){null===M&&(M=!0)})}))}),J=R(f[0].body),Q={},z=n.classNameFilter(),G=z?function(n){return z.test(n)}:function(){return!0},V=m(D);return{on:function(n,t,e){var a=l(t);Q[n]=Q[n]||[],Q[n].push({node:a,callback:e})},off:function(n,t,e){function a(n,t,e){var a=l(t);return n.filter(function(n){var t=n.node===a&&(!e||n.callback===e);return!t})}var r=Q[n];r&&(Q[n]=1===arguments.length?null:a(r,t,e))},pin:function(n,t){a(U(n),"element","not an element"),a(U(t),"parentElement","not an element"),n.data(Cn,t)},push:function(n,t,e,a){return e=e||{},e.domOperation=a,w(n,t,e)},enabled:function(n,t){var e=arguments.length;if(0===e)t=!!M;else{var a=U(n);if(a){var r=C(n),i=P.get(r);1===e?t=!i:(t=!!t,t?i&&P.remove(r):P.put(r,!0))}else t=M=!!n}return t}}}]}],Dn=["$$rAF",function(n){return function(){var t=!1;return n(function(){t=!0}),function(e){t?e():n(e)}}}],An=["$q","$$rAFMutex",function(n,t){function e(n){this.setHost(n),this._doneCallbacks=[],this._runInAnimationFrame=t(),this._state=0}var a=0,r=1,i=2;return e.chain=function(n,t){function e(){return a===n.length?void t(!0):void n[a](function(n){return n===!1?void t(!1):(a++,void e())})}var a=0;e()},e.all=function(n,t){function e(e){r=r&&e,++a===n.length&&t(r)}var a=0,r=!0;q(n,function(n){n.done(e)})},e.prototype={setHost:function(n){this.host=n||{}},done:function(n){this._state===i?n():this._doneCallbacks.push(n)},progress:M,getPromise:function(){if(!this.promise){var t=this;this.promise=n(function(n,e){t.done(function(t){t===!1?e():n()})})}return this.promise},then:function(n,t){return this.getPromise().then(n,t)},"catch":function(n){return this.getPromise()["catch"](n)},"finally":function(n){return this.getPromise()["finally"](n)},pause:function(){this.host.pause&&this.host.pause()},resume:function(){this.host.resume&&this.host.resume()},end:function(){this.host.end&&this.host.end(),this._resolve(!0)},cancel:function(){this.host.cancel&&this.host.cancel(),this._resolve(!1)},complete:function(n){var t=this;t._state===a&&(t._state=r,t._runInAnimationFrame(function(){t._resolve(n)}))},_resolve:function(n){this._state!==i&&(q(this._doneCallbacks,function(t){t(n)}),this._doneCallbacks.length=0,this._state=i)}},e}],bn=["$animateProvider",function(n){function t(n,t){n.data(s,t)}function e(n){n.removeData(s)}function a(n){return n.data(s)}var i="ng-animate-ref",o=this.drivers=[],s="$$animationRunner";this.$get=["$$jqLite","$rootScope","$injector","$$AnimateRunner","$$rAFScheduler",function(n,s,u,l,c){var f=[],h=m(n),p=0,g=0,$=[];return function(m,y,D){function A(n){var t="["+i+"]",e=n.hasAttribute(i)?[n]:n.querySelectorAll(t),a=[];return q(e,function(n){var t=n.getAttribute(i);t&&t.length&&a.push(n)}),a}function b(n){var t=[],e={};q(n,function(n,a){var r=n.element,o=C(r),s=n.event,u=["enter","move"].indexOf(s)>=0,l=n.structural?A(o):[];if(l.length){var c=u?"to":"from";q(l,function(n){var t=n.getAttribute(i);e[t]=e[t]||{},e[t][c]={animationID:a,element:R(n)}})}else t.push(n)});var a={},r={};return q(e,function(e,i){var o=e.from,s=e.to;if(!o||!s){var u=o?o.animationID:s.animationID,l=u.toString();return void(a[l]||(a[l]=!0,t.push(n[u])))}var c=n[o.animationID],f=n[s.animationID],m=o.animationID.toString();if(!r[m]){var v=r[m]={structural:!0,beforeStart:function(){c.beforeStart(),f.beforeStart()},close:function(){c.close(),f.close()},classes:k(c.classes,f.classes),from:c,to:f,anchors:[]};v.classes.length?t.push(v):(t.push(c),t.push(f))}r[m].anchors.push({out:o.element,"in":s.element})}),t}function k(n,t){n=n.split(" "),t=t.split(" ");for(var e=[],a=0;a<n.length;a++){var r=n[a];if("ng-"!==r.substring(0,3))for(var i=0;i<t.length;i++)if(r===t[i]){e.push(r);break}}return e.join(" ")}function w(n){for(var t=o.length-1;t>=0;t--){var e=o[t];if(u.has(e)){var a=u.get(e),r=a(n);if(r)return r}}}function T(){m.addClass(Q),P&&n.addClass(m,P)}function S(n,t){function e(n){a(n).setHost(t)}n.from&&n.to?(e(n.from.element),e(n.to.element)):e(n.element)}function x(){var n=a(m);!n||"leave"===y&&D.$$domOperationFired||n.end()}function j(t){m.off("$destroy",x),e(m),h(m,D),d(m,D),D.domOperation(),P&&n.removeClass(m,P),m.removeClass(Q),O.complete(!t)}D=v(D);var F=["enter","move","leave"].indexOf(y)>=0,O=new l({end:function(){j()},cancel:function(){j(!0)}});if(!o.length)return j(),O;t(m,O);var I=r(m.attr("class"),r(D.addClass,D.removeClass)),P=D.tempClasses;P&&(I+=" "+P,D.tempClasses=null);var M;return F||(M=p,p+=1),f.push({element:m,classes:I,event:y,classBasedIndex:M,structural:F,options:D,beforeStart:T,close:j}),m.on("$destroy",x),f.length>1?O:(s.$$postDigest(function(){g=p,p=0,$.length=0;var n=[];q(f,function(t){a(t.element)&&n.push(t)}),f.length=0,q(b(n),function(n){function t(){n.beforeStart();var t,e=n.close,r=n.anchors?n.from.element||n.to.element:n.element;if(a(r)){var i=w(n);i&&(t=i.start)}if(t){var o=t();o.done(function(n){e(!n)}),S(n,o)}else e()}n.structural?t():($.push({node:C(n.element),fn:t}),n.classBasedIndex===g-1&&($=$.sort(function(n,t){return t.node.contains(n.node)}).map(function(n){return n.fn}),c($)))})}),O)}}]}];t.module("ngAnimate",[]).directive("ngAnimateChildren",G).factory("$$rAFMutex",Dn).factory("$$rAFScheduler",z).factory("$$AnimateRunner",An).provider("$$animateQueue",yn).provider("$$animation",bn).provider("$animateCss",dn).provider("$$animateCssDriver",hn).provider("$$animateJs",pn).provider("$$animateJsDriver",gn)}(window,window.angular);
!function(e,t,n){"use strict";function a(e,n,a,o,i,r){function s(e,n){return angular.element((n||t).querySelectorAll(e))}function l(e){return u[e]?u[e]:u[e]=n.get(e,{cache:r}).then(function(e){return e.data})}this.compile=function(t){t.template&&/\.html$/.test(t.template)&&(console.warn("Deprecated use of `template` option to pass a file. Please use the `templateUrl` option instead."),t.templateUrl=t.template,t.template="");var n=t.templateUrl,r=t.template||"",u=t.controller,c=t.controllerAs,d=angular.copy(t.resolve||{}),f=angular.copy(t.locals||{}),p=t.transformTemplate||angular.identity,g=t.bindToController;return angular.forEach(d,function(e,t){d[t]=angular.isString(e)?a.get(e):a.invoke(e)}),angular.extend(d,f),d.$template=n?l(n):e.when(r),t.contentTemplate&&(d.$template=e.all([d.$template,l(t.contentTemplate)]).then(function(e){var n=angular.element(e[0]),a=s('[ng-bind="content"]',n[0]).removeAttr("ng-bind").html(e[1]);return t.templateUrl||a.next().remove(),n[0].outerHTML})),e.all(d).then(function(e){var n=p(e.$template);t.html&&(n=n.replace(/ng-bind="/gi,'ng-bind-html="'));var a=angular.element("<div>").html(n.trim()).contents(),r=o(a);return{locals:e,element:a,link:function(t){if(e.$scope=t,u){var n=i(u,e,!0);g&&angular.extend(n.instance,e);var o=angular.isObject(n)?n:n();a.data("$ngControllerController",o),a.children().data("$ngControllerController",o),c&&(t[c]=o)}return r.apply(null,arguments)}}})};var u={}}angular.module("mgcrea.ngStrap",["mgcrea.ngStrap.modal","mgcrea.ngStrap.aside","mgcrea.ngStrap.alert","mgcrea.ngStrap.button","mgcrea.ngStrap.select","mgcrea.ngStrap.datepicker","mgcrea.ngStrap.timepicker","mgcrea.ngStrap.navbar","mgcrea.ngStrap.tooltip","mgcrea.ngStrap.popover","mgcrea.ngStrap.dropdown","mgcrea.ngStrap.typeahead","mgcrea.ngStrap.scrollspy","mgcrea.ngStrap.affix","mgcrea.ngStrap.tab","mgcrea.ngStrap.collapse"]),angular.module("mgcrea.ngStrap.affix",["mgcrea.ngStrap.helpers.dimensions","mgcrea.ngStrap.helpers.debounce"]).provider("$affix",function(){var e=this.defaults={offsetTop:"auto",inlineStyles:!0};this.$get=["$window","debounce","dimensions",function(t,n,a){function o(o,s){function l(e,t,n){var a=u(),o=c();return v>=a?"top":null!==e&&a+e<=t.top?"middle":null!==w&&t.top+n+$>=o-w?"bottom":"middle"}function u(){return p[0]===t?t.pageYOffset:p[0].scrollTop}function c(){return p[0]===t?t.document.body.scrollHeight:p[0].scrollHeight}var d={},f=angular.extend({},e,s),p=f.target,g="affix affix-top affix-bottom",m=!1,$=0,h=0,v=0,w=0,y=null,b=null,D=o.parent();if(f.offsetParent)if(f.offsetParent.match(/^\d+$/))for(var k=0;k<1*f.offsetParent-1;k++)D=D.parent();else D=angular.element(f.offsetParent);return d.init=function(){this.$parseOffsets(),h=a.offset(o[0]).top+$,m=!o[0].style.width,p.on("scroll",this.checkPosition),p.on("click",this.checkPositionWithEventLoop),r.on("resize",this.$debouncedOnResize),this.checkPosition(),this.checkPositionWithEventLoop()},d.destroy=function(){p.off("scroll",this.checkPosition),p.off("click",this.checkPositionWithEventLoop),r.off("resize",this.$debouncedOnResize)},d.checkPositionWithEventLoop=function(){setTimeout(d.checkPosition,1)},d.checkPosition=function(){var e=u(),t=a.offset(o[0]),n=a.height(o[0]),r=l(b,t,n);y!==r&&(y=r,o.removeClass(g).addClass("affix"+("middle"!==r?"-"+r:"")),"top"===r?(b=null,m&&o.css("width",""),f.inlineStyles&&(o.css("position",f.offsetParent?"":"relative"),o.css("top",""))):"bottom"===r?(b=f.offsetUnpin?-(1*f.offsetUnpin):t.top-e,m&&o.css("width",""),f.inlineStyles&&(o.css("position",f.offsetParent?"":"relative"),o.css("top",f.offsetParent?"":i[0].offsetHeight-w-n-h+"px"))):(b=null,m&&o.css("width",o[0].offsetWidth+"px"),f.inlineStyles&&(o.css("position","fixed"),o.css("top",$+"px"))))},d.$onResize=function(){d.$parseOffsets(),d.checkPosition()},d.$debouncedOnResize=n(d.$onResize,50),d.$parseOffsets=function(){var e=o.css("position");f.inlineStyles&&o.css("position",f.offsetParent?"":"relative"),f.offsetTop&&("auto"===f.offsetTop&&(f.offsetTop="+0"),f.offsetTop.match(/^[-+]\d+$/)?($=1*-f.offsetTop,v=f.offsetParent?a.offset(D[0]).top+1*f.offsetTop:a.offset(o[0]).top-a.css(o[0],"marginTop",!0)+1*f.offsetTop):v=1*f.offsetTop),f.offsetBottom&&(w=f.offsetParent&&f.offsetBottom.match(/^[-+]\d+$/)?c()-(a.offset(D[0]).top+a.height(D[0]))+1*f.offsetBottom+1:1*f.offsetBottom),f.inlineStyles&&o.css("position",e)},d.init(),d}var i=angular.element(t.document.body),r=angular.element(t);return o}]}).directive("bsAffix",["$affix","$window",function(e,t){return{restrict:"EAC",require:"^?bsAffixTarget",link:function(n,a,o,i){var r={scope:n,target:i?i.$element:angular.element(t)};angular.forEach(["offsetTop","offsetBottom","offsetParent","offsetUnpin","inlineStyles"],function(e){if(angular.isDefined(o[e])){var t=o[e];/true/i.test(t)&&(t=!0),/false/i.test(t)&&(t=!1),r[e]=t}});var s=e(a,r);n.$on("$destroy",function(){s&&s.destroy(),r=null,s=null})}}}]).directive("bsAffixTarget",function(){return{controller:["$element",function(e){this.$element=e}]}}),angular.module("mgcrea.ngStrap.alert",["mgcrea.ngStrap.modal"]).provider("$alert",function(){var e=this.defaults={animation:"am-fade",prefixClass:"alert",prefixEvent:"alert",placement:null,templateUrl:"alert/alert.tpl.html",container:!1,element:null,backdrop:!1,keyboard:!0,show:!0,duration:!1,type:!1,dismissable:!0};this.$get=["$modal","$timeout",function(t,n){function a(a){var o={},i=angular.extend({},e,a);o=t(i),o.$scope.dismissable=!!i.dismissable,i.type&&(o.$scope.type=i.type);var r=o.show;return i.duration&&(o.show=function(){r(),n(function(){o.hide()},1e3*i.duration)}),o}return a}]}).directive("bsAlert",["$window","$sce","$alert",function(e,t,n){return e.requestAnimationFrame||e.setTimeout,{restrict:"EAC",scope:!0,link:function(e,a,o,i){var r={scope:e,element:a,show:!1};angular.forEach(["template","templateUrl","controller","controllerAs","placement","keyboard","html","container","animation","duration","dismissable"],function(e){angular.isDefined(o[e])&&(r[e]=o[e])});var s=/^(false|0|)$/i;angular.forEach(["keyboard","html","container","dismissable"],function(e){angular.isDefined(o[e])&&s.test(o[e])&&(r[e]=!1)}),e.hasOwnProperty("title")||(e.title=""),angular.forEach(["title","content","type"],function(n){o[n]&&o.$observe(n,function(a,o){e[n]=t.trustAsHtml(a)})}),o.bsAlert&&e.$watch(o.bsAlert,function(t,n){angular.isObject(t)?angular.extend(e,t):e.content=t},!0);var l=n(r);a.on(o.trigger||"click",l.toggle),e.$on("$destroy",function(){l&&l.destroy(),r=null,l=null})}}}]),angular.module("mgcrea.ngStrap.aside",["mgcrea.ngStrap.modal"]).provider("$aside",function(){var e=this.defaults={animation:"am-fade-and-slide-right",prefixClass:"aside",prefixEvent:"aside",placement:"right",templateUrl:"aside/aside.tpl.html",contentTemplate:!1,container:!1,element:null,backdrop:!0,keyboard:!0,html:!1,show:!0};this.$get=["$modal",function(t){function n(n){var a={},o=angular.extend({},e,n);return a=t(o)}return n}]}).directive("bsAside",["$window","$sce","$aside",function(e,t,n){return e.requestAnimationFrame||e.setTimeout,{restrict:"EAC",scope:!0,link:function(e,a,o,i){var r={scope:e,element:a,show:!1};angular.forEach(["template","templateUrl","controller","controllerAs","contentTemplate","placement","backdrop","keyboard","html","container","animation"],function(e){angular.isDefined(o[e])&&(r[e]=o[e])});var s=/^(false|0|)$/i;angular.forEach(["backdrop","keyboard","html","container"],function(e){angular.isDefined(o[e])&&s.test(o[e])&&(r[e]=!1)}),angular.forEach(["title","content"],function(n){o[n]&&o.$observe(n,function(a,o){e[n]=t.trustAsHtml(a)})}),o.bsAside&&e.$watch(o.bsAside,function(t,n){angular.isObject(t)?angular.extend(e,t):e.content=t},!0);var l=n(r);a.on(o.trigger||"click",l.toggle),e.$on("$destroy",function(){l&&l.destroy(),r=null,l=null})}}}]),angular.module("mgcrea.ngStrap.button",[]).provider("$button",function(){var e=this.defaults={activeClass:"active",toggleEvent:"click"};this.$get=function(){return{defaults:e}}}).directive("bsCheckboxGroup",function(){return{restrict:"A",require:"ngModel",compile:function(e,t){e.attr("data-toggle","buttons"),e.removeAttr("ng-model");var n=e[0].querySelectorAll('input[type="checkbox"]');angular.forEach(n,function(e){var n=angular.element(e);n.attr("bs-checkbox",""),n.attr("ng-model",t.ngModel+"."+n.attr("value"))})}}}).directive("bsCheckbox",["$button","$$rAF",function(e,t){var n=e.defaults,a=/^(true|false|\d+)$/;return{restrict:"A",require:"ngModel",link:function(e,o,i,r){var s=n,l="INPUT"===o[0].nodeName,u=l?o.parent():o,c=angular.isDefined(i.trueValue)?i.trueValue:!0;a.test(i.trueValue)&&(c=e.$eval(i.trueValue));var d=angular.isDefined(i.falseValue)?i.falseValue:!1;a.test(i.falseValue)&&(d=e.$eval(i.falseValue));var f="boolean"!=typeof c||"boolean"!=typeof d;f&&(r.$parsers.push(function(e){return e?c:d}),r.$formatters.push(function(e){return angular.equals(e,c)}),e.$watch(i.ngModel,function(e,t){r.$render()})),r.$render=function(){var e=angular.equals(r.$modelValue,c);t(function(){l&&(o[0].checked=e),u.toggleClass(s.activeClass,e)})},o.bind(s.toggleEvent,function(){e.$apply(function(){l||r.$setViewValue(!u.hasClass("active")),f||r.$render()})})}}}]).directive("bsRadioGroup",function(){return{restrict:"A",require:"ngModel",compile:function(e,t){e.attr("data-toggle","buttons"),e.removeAttr("ng-model");var n=e[0].querySelectorAll('input[type="radio"]');angular.forEach(n,function(e){angular.element(e).attr("bs-radio",""),angular.element(e).attr("ng-model",t.ngModel)})}}}).directive("bsRadio",["$button","$$rAF",function(e,t){var n=e.defaults,a=/^(true|false|\d+)$/;return{restrict:"A",require:"ngModel",link:function(e,o,i,r){var s,l=n,u="INPUT"===o[0].nodeName,c=u?o.parent():o;i.$observe("value",function(t){s=a.test(t)?e.$eval(t):t,r.$render()}),r.$render=function(){var e=angular.equals(r.$modelValue,s);t(function(){u&&(o[0].checked=e),c.toggleClass(l.activeClass,e)})},o.bind(l.toggleEvent,function(){e.$apply(function(){r.$setViewValue(s),r.$render()})})}}}]),angular.module("mgcrea.ngStrap.collapse",[]).provider("$collapse",function(){var e=this.defaults={animation:"am-collapse",disallowToggle:!1,activeClass:"in",startCollapsed:!1,allowMultiple:!1},t=this.controller=function(t,n,a){function o(e){for(var t=l.$targets.$active,n=0;n<t.length;n++)e<t[n]&&(t[n]=t[n]-1),t[n]===l.$targets.length&&(t[n]=l.$targets.length-1)}function i(e){var t=l.$targets.$active;return-1===t.indexOf(e)?!1:!0}function r(e){var t=l.$targets.$active.indexOf(e);-1!==t&&l.$targets.$active.splice(t,1)}function s(e){l.$options.allowMultiple||l.$targets.$active.splice(0,1),-1===l.$targets.$active.indexOf(e)&&l.$targets.$active.push(e)}var l=this;l.$options=angular.copy(e),angular.forEach(["animation","disallowToggle","activeClass","startCollapsed","allowMultiple"],function(e){angular.isDefined(a[e])&&(l.$options[e]=a[e])});var u=/^(false|0|)$/i;angular.forEach(["disallowToggle","startCollapsed","allowMultiple"],function(e){angular.isDefined(a[e])&&u.test(a[e])&&(l.$options[e]=!1)}),l.$toggles=[],l.$targets=[],l.$viewChangeListeners=[],l.$registerToggle=function(e){l.$toggles.push(e)},l.$registerTarget=function(e){l.$targets.push(e)},l.$unregisterToggle=function(e){var t=l.$toggles.indexOf(e);l.$toggles.splice(t,1)},l.$unregisterTarget=function(e){var t=l.$targets.indexOf(e);l.$targets.splice(t,1),l.$options.allowMultiple&&r(e),o(t),l.$viewChangeListeners.forEach(function(e){e()})},l.$targets.$active=l.$options.startCollapsed?[]:[0],l.$setActive=t.$setActive=function(e){angular.isArray(e)?l.$targets.$active=e:l.$options.disallowToggle?s(e):i(e)?r(e):s(e),l.$viewChangeListeners.forEach(function(e){e()})},l.$activeIndexes=function(){return l.$options.allowMultiple?l.$targets.$active:1===l.$targets.$active.length?l.$targets.$active[0]:-1}};this.$get=function(){var n={};return n.defaults=e,n.controller=t,n}}).directive("bsCollapse",["$window","$animate","$collapse",function(e,t,n){return n.defaults,{require:["?ngModel","bsCollapse"],controller:["$scope","$element","$attrs",n.controller],link:function(e,t,n,a){var o=a[0],i=a[1];o&&(i.$viewChangeListeners.push(function(){o.$setViewValue(i.$activeIndexes())}),o.$formatters.push(function(e){if(angular.isArray(e))i.$setActive(e);else{var t=i.$activeIndexes();angular.isArray(t)?-1===t.indexOf(1*e)&&i.$setActive(1*e):t!==1*e&&i.$setActive(1*e)}return e}))}}}]).directive("bsCollapseToggle",function(){return{require:["^?ngModel","^bsCollapse"],link:function(e,t,n,a){var o=(a[0],a[1]);t.attr("data-toggle","collapse"),o.$registerToggle(t),e.$on("$destroy",function(){o.$unregisterToggle(t)}),t.on("click",function(){var a=n.bsCollapseToggle&&"bs-collapse-toggle"!==n.bsCollapseToggle?n.bsCollapseToggle:o.$toggles.indexOf(t);o.$setActive(1*a),e.$apply()})}}}).directive("bsCollapseTarget",["$animate",function(e){return{require:["^?ngModel","^bsCollapse"],link:function(t,n,a,o){function i(){var t=r.$targets.indexOf(n),a=r.$activeIndexes(),o="removeClass";angular.isArray(a)?-1!==a.indexOf(t)&&(o="addClass"):t===a&&(o="addClass"),e[o](n,r.$options.activeClass)}var r=(o[0],o[1]);n.addClass("collapse"),r.$options.animation&&n.addClass(r.$options.animation),r.$registerTarget(n),t.$on("$destroy",function(){r.$unregisterTarget(n)}),r.$viewChangeListeners.push(function(){i()}),i()}}}]),angular.module("mgcrea.ngStrap.datepicker",["mgcrea.ngStrap.helpers.dateParser","mgcrea.ngStrap.helpers.dateFormatter","mgcrea.ngStrap.tooltip"]).provider("$datepicker",function(){var e=this.defaults={animation:"am-fade",prefixClass:"datepicker",placement:"bottom-left",templateUrl:"datepicker/datepicker.tpl.html",trigger:"focus",container:!1,keyboard:!0,html:!1,delay:0,useNative:!1,dateType:"date",dateFormat:"shortDate",timezone:null,modelDateFormat:null,dayFormat:"dd",monthFormat:"MMM",yearFormat:"yyyy",monthTitleFormat:"MMMM yyyy",yearTitleFormat:"yyyy",strictFormat:!1,autoclose:!1,minDate:-(1/0),maxDate:+(1/0),startView:0,minView:0,startWeek:0,daysOfWeekDisabled:"",iconLeft:"glyphicon glyphicon-chevron-left",iconRight:"glyphicon glyphicon-chevron-right"};this.$get=["$window","$document","$rootScope","$sce","$dateFormatter","datepickerViews","$tooltip","$timeout",function(t,n,a,o,i,r,s,l){function u(t,n,a){function o(e){e.selected=u.$isSelected(e.date)}function i(){t[0].focus()}var u=s(t,angular.extend({},e,a)),f=a.scope,p=u.$options,g=u.$scope;p.startView&&(p.startView-=p.minView);var m=r(u);u.$views=m.views;var $=m.viewDate;g.$mode=p.startView,g.$iconLeft=p.iconLeft,g.$iconRight=p.iconRight;var h=u.$views[g.$mode];g.$select=function(e){u.select(e)},g.$selectPane=function(e){u.$selectPane(e)},g.$toggleMode=function(){u.setMode((g.$mode+1)%u.$views.length)},u.update=function(e){angular.isDate(e)&&!isNaN(e.getTime())&&(u.$date=e,h.update.call(h,e)),u.$build(!0)},u.updateDisabledDates=function(e){p.disabledDateRanges=e;for(var t=0,n=g.rows.length;n>t;t++)angular.forEach(g.rows[t],u.$setDisabledEl)},u.select=function(e,t){angular.isDate(n.$dateValue)||(n.$dateValue=new Date(e)),!g.$mode||t?(n.$setViewValue(angular.copy(e)),n.$render(),p.autoclose&&!t&&l(function(){u.hide(!0)})):(angular.extend($,{year:e.getFullYear(),month:e.getMonth(),date:e.getDate()}),u.setMode(g.$mode-1),u.$build())},u.setMode=function(e){g.$mode=e,h=u.$views[g.$mode],u.$build()},u.$build=function(e){e===!0&&h.built||(e!==!1||h.built)&&h.build.call(h)},u.$updateSelected=function(){for(var e=0,t=g.rows.length;t>e;e++)angular.forEach(g.rows[e],o)},u.$isSelected=function(e){return h.isSelected(e)},u.$setDisabledEl=function(e){e.disabled=h.isDisabled(e.date)},u.$selectPane=function(e){var t=h.steps,n=new Date(Date.UTC($.year+(t.year||0)*e,$.month+(t.month||0)*e,1));angular.extend($,{year:n.getUTCFullYear(),month:n.getUTCMonth(),date:n.getUTCDate()}),u.$build()},u.$onMouseDown=function(e){if(e.preventDefault(),e.stopPropagation(),d){var t=angular.element(e.target);"button"!==t[0].nodeName.toLowerCase()&&(t=t.parent()),t.triggerHandler("click")}},u.$onKeyDown=function(e){if(/(38|37|39|40|13)/.test(e.keyCode)&&!e.shiftKey&&!e.altKey){if(e.preventDefault(),e.stopPropagation(),13===e.keyCode)return g.$mode?g.$apply(function(){u.setMode(g.$mode-1)}):u.hide(!0);h.onKeyDown(e),f.$digest()}};var v=u.init;u.init=function(){return c&&p.useNative?(t.prop("type","date"),void t.css("-webkit-appearance","textfield")):(d&&(t.prop("type","text"),t.attr("readonly","true"),t.on("click",i)),void v())};var w=u.destroy;u.destroy=function(){c&&p.useNative&&t.off("click",i),w()};var y=u.show;u.show=function(){!d&&t.attr("readonly")||t.attr("disabled")||(y(),l(function(){u.$isShown&&(u.$element.on(d?"touchstart":"mousedown",u.$onMouseDown),p.keyboard&&t.on("keydown",u.$onKeyDown))},0,!1))};var b=u.hide;return u.hide=function(e){u.$isShown&&(u.$element.off(d?"touchstart":"mousedown",u.$onMouseDown),p.keyboard&&t.off("keydown",u.$onKeyDown),b(e))},u}var c=(angular.element(t.document.body),/(ip(a|o)d|iphone|android)/gi.test(t.navigator.userAgent)),d="createTouch"in t.document&&c;return e.lang||(e.lang=i.getDefaultLocale()),u.defaults=e,u}]}).directive("bsDatepicker",["$window","$parse","$q","$dateFormatter","$dateParser","$datepicker",function(e,t,n,a,o,i){var r=(i.defaults,/(ip(a|o)d|iphone|android)/gi.test(e.navigator.userAgent));return{restrict:"EAC",require:"ngModel",link:function(e,t,n,s){function l(e){return e&&e.length?e:null}function u(e){if(angular.isDate(e)){var t=isNaN(p.$options.minDate)||e.getTime()>=p.$options.minDate,n=isNaN(p.$options.maxDate)||e.getTime()<=p.$options.maxDate,a=t&&n;s.$setValidity("date",a),s.$setValidity("min",t),s.$setValidity("max",n),a&&(s.$dateValue=e)}}function c(){return!s.$dateValue||isNaN(s.$dateValue.getTime())?"":m(s.$dateValue,d.dateFormat)}var d={scope:e};angular.forEach(["template","templateUrl","controller","controllerAs","placement","container","delay","trigger","html","animation","autoclose","dateType","dateFormat","timezone","modelDateFormat","dayFormat","strictFormat","startWeek","startDate","useNative","lang","startView","minView","iconLeft","iconRight","daysOfWeekDisabled","id","prefixClass","prefixEvent"],function(e){angular.isDefined(n[e])&&(d[e]=n[e])});var f=/^(false|0|)$/i;angular.forEach(["html","container","autoclose","useNative"],function(e){angular.isDefined(n[e])&&f.test(n[e])&&(d[e]=!1)}),n.bsShow&&e.$watch(n.bsShow,function(e,t){p&&angular.isDefined(e)&&(angular.isString(e)&&(e=!!e.match(/true|,?(datepicker),?/i)),e===!0?p.show():p.hide())});var p=i(t,s,d);d=p.$options,r&&d.useNative&&(d.dateFormat="yyyy-MM-dd");var g=d.lang,m=function(e,t){return a.formatDate(e,t,g)},$=o({format:d.dateFormat,lang:g,strict:d.strictFormat});angular.forEach(["minDate","maxDate"],function(e){angular.isDefined(n[e])&&n.$observe(e,function(t){p.$options[e]=$.getDateForAttribute(e,t),!isNaN(p.$options[e])&&p.$build(!1),u(s.$dateValue)})}),e.$watch(n.ngModel,function(e,t){p.update(s.$dateValue)},!0),angular.isDefined(n.disabledDates)&&e.$watch(n.disabledDates,function(e,t){e=l(e),t=l(t),e&&p.updateDisabledDates(e)}),s.$parsers.unshift(function(e){var t;if(!e)return s.$setValidity("date",!0),null;var n=$.parse(e,s.$dateValue);return!n||isNaN(n.getTime())?void s.$setValidity("date",!1):(u(n),"string"===d.dateType?(t=$.timezoneOffsetAdjust(n,d.timezone,!0),m(t,d.modelDateFormat||d.dateFormat)):(t=$.timezoneOffsetAdjust(s.$dateValue,d.timezone,!0),"number"===d.dateType?t.getTime():"unix"===d.dateType?t.getTime()/1e3:"iso"===d.dateType?t.toISOString():new Date(t)))}),s.$formatters.push(function(e){var t;return t=angular.isUndefined(e)||null===e?0/0:angular.isDate(e)?e:"string"===d.dateType?$.parse(e,null,d.modelDateFormat):new Date("unix"===d.dateType?1e3*e:e),s.$dateValue=$.timezoneOffsetAdjust(t,d.timezone),c()}),s.$render=function(){t.val(c())},e.$on("$destroy",function(){p&&p.destroy(),d=null,p=null})}}}]).provider("datepickerViews",function(){function e(e,t){for(var n=[];e.length>0;)n.push(e.splice(0,t));return n}function t(e,t){return(e%t+t)%t}this.defaults={dayFormat:"dd",daySplit:7},this.$get=["$dateFormatter","$dateParser","$sce",function(n,a,o){return function(i){var r=i.$scope,s=i.$options,l=s.lang,u=function(e,t){return n.formatDate(e,t,l)},c=a({format:s.dateFormat,lang:l,strict:s.strictFormat}),d=n.weekdaysShort(l),f=d.slice(s.startWeek).concat(d.slice(0,s.startWeek)),p=o.trustAsHtml('<th class="dow text-center">'+f.join('</th><th class="dow text-center">')+"</th>"),g=i.$date||(s.startDate?c.getDateForAttribute("startDate",s.startDate):new Date),m={year:g.getFullYear(),month:g.getMonth(),date:g.getDate()},$=[{format:s.dayFormat,split:7,steps:{month:1},update:function(e,t){!this.built||t||e.getFullYear()!==m.year||e.getMonth()!==m.month?(angular.extend(m,{year:i.$date.getFullYear(),month:i.$date.getMonth(),date:i.$date.getDate()}),i.$build()):(e.getDate()!==m.date||1===e.getDate())&&(m.date=i.$date.getDate(),i.$updateSelected())},build:function(){var n=new Date(m.year,m.month,1),a=n.getTimezoneOffset(),o=new Date(+n-864e5*t(n.getDay()-s.startWeek,7)),l=o.getTimezoneOffset(),d=c.timezoneOffsetAdjust(new Date,s.timezone).toDateString();l!==a&&(o=new Date(+o+6e4*(l-a)));for(var f,g=[],$=0;42>$;$++)f=c.daylightSavingAdjust(new Date(o.getFullYear(),o.getMonth(),o.getDate()+$)),g.push({date:f,isToday:f.toDateString()===d,label:u(f,this.format),selected:i.$date&&this.isSelected(f),muted:f.getMonth()!==m.month,disabled:this.isDisabled(f)});r.title=u(n,s.monthTitleFormat),r.showLabels=!0,r.labels=p,r.rows=e(g,this.split),this.built=!0},isSelected:function(e){return i.$date&&e.getFullYear()===i.$date.getFullYear()&&e.getMonth()===i.$date.getMonth()&&e.getDate()===i.$date.getDate()},isDisabled:function(e){var t=e.getTime();if(t<s.minDate||t>s.maxDate)return!0;if(-1!==s.daysOfWeekDisabled.indexOf(e.getDay()))return!0;if(s.disabledDateRanges)for(var n=0;n<s.disabledDateRanges.length;n++)if(t>=s.disabledDateRanges[n].start&&t<=s.disabledDateRanges[n].end)return!0;return!1},onKeyDown:function(e){if(i.$date){var t,n=i.$date.getTime();37===e.keyCode?t=new Date(n-864e5):38===e.keyCode?t=new Date(n-6048e5):39===e.keyCode?t=new Date(n+864e5):40===e.keyCode&&(t=new Date(n+6048e5)),this.isDisabled(t)||i.select(t,!0)}}},{name:"month",format:s.monthFormat,split:4,steps:{year:1},update:function(e,t){this.built&&e.getFullYear()===m.year?e.getMonth()!==m.month&&(angular.extend(m,{month:i.$date.getMonth(),date:i.$date.getDate()}),i.$updateSelected()):(angular.extend(m,{year:i.$date.getFullYear(),month:i.$date.getMonth(),date:i.$date.getDate()}),i.$build())},build:function(){for(var t,n=(new Date(m.year,0,1),[]),a=0;12>a;a++)t=new Date(m.year,a,1),n.push({date:t,label:u(t,this.format),selected:i.$isSelected(t),disabled:this.isDisabled(t)});r.title=u(t,s.yearTitleFormat),r.showLabels=!1,r.rows=e(n,this.split),this.built=!0},isSelected:function(e){return i.$date&&e.getFullYear()===i.$date.getFullYear()&&e.getMonth()===i.$date.getMonth()},isDisabled:function(e){var t=+new Date(e.getFullYear(),e.getMonth()+1,0);return t<s.minDate||e.getTime()>s.maxDate},onKeyDown:function(e){if(i.$date){var t=i.$date.getMonth(),n=new Date(i.$date);37===e.keyCode?n.setMonth(t-1):38===e.keyCode?n.setMonth(t-4):39===e.keyCode?n.setMonth(t+1):40===e.keyCode&&n.setMonth(t+4),this.isDisabled(n)||i.select(n,!0)}}},{name:"year",format:s.yearFormat,split:4,steps:{year:12},update:function(e,t){!this.built||t||parseInt(e.getFullYear()/20,10)!==parseInt(m.year/20,10)?(angular.extend(m,{year:i.$date.getFullYear(),month:i.$date.getMonth(),date:i.$date.getDate()}),i.$build()):e.getFullYear()!==m.year&&(angular.extend(m,{year:i.$date.getFullYear(),month:i.$date.getMonth(),date:i.$date.getDate()}),i.$updateSelected())},build:function(){for(var t,n=m.year-m.year%(3*this.split),a=[],o=0;12>o;o++)t=new Date(n+o,0,1),a.push({date:t,label:u(t,this.format),selected:i.$isSelected(t),disabled:this.isDisabled(t)});r.title=a[0].label+"-"+a[a.length-1].label,r.showLabels=!1,r.rows=e(a,this.split),this.built=!0},isSelected:function(e){return i.$date&&e.getFullYear()===i.$date.getFullYear()},isDisabled:function(e){var t=+new Date(e.getFullYear()+1,0,0);return t<s.minDate||e.getTime()>s.maxDate},onKeyDown:function(e){if(i.$date){var t=i.$date.getFullYear(),n=new Date(i.$date);37===e.keyCode?n.setYear(t-1):38===e.keyCode?n.setYear(t-4):39===e.keyCode?n.setYear(t+1):40===e.keyCode&&n.setYear(t+4),this.isDisabled(n)||i.select(n,!0)}}}];return{views:s.minView?Array.prototype.slice.call($,s.minView):$,viewDate:m}}}]}),angular.module("mgcrea.ngStrap.dropdown",["mgcrea.ngStrap.tooltip"]).provider("$dropdown",function(){var e=this.defaults={animation:"am-fade",prefixClass:"dropdown",prefixEvent:"dropdown",placement:"bottom-left",templateUrl:"dropdown/dropdown.tpl.html",trigger:"click",container:!1,keyboard:!0,html:!1,delay:0};this.$get=["$window","$rootScope","$tooltip","$timeout",function(t,n,a,o){function i(t,i){function l(e){return e.target!==t[0]?e.target!==t[0]&&u.hide():void 0}var u={},c=angular.extend({},e,i);u.$scope=c.scope&&c.scope.$new()||n.$new(),u=a(t,c);var d=t.parent();u.$onKeyDown=function(e){if(/(38|40)/.test(e.keyCode)){e.preventDefault(),e.stopPropagation();var t=angular.element(u.$element[0].querySelectorAll("li:not(.divider) a"));if(t.length){var n;angular.forEach(t,function(e,t){s&&s.call(e,":focus")&&(n=t)}),38===e.keyCode&&n>0?n--:40===e.keyCode&&n<t.length-1?n++:angular.isUndefined(n)&&(n=0),t.eq(n)[0].focus()}}};var f=u.show;u.show=function(){f(),o(function(){c.keyboard&&u.$element&&u.$element.on("keydown",u.$onKeyDown),r.on("click",l)},0,!1),d.hasClass("dropdown")&&d.addClass("open")};var p=u.hide;u.hide=function(){u.$isShown&&(c.keyboard&&u.$element&&u.$element.off("keydown",u.$onKeyDown),r.off("click",l),d.hasClass("dropdown")&&d.removeClass("open"),p())};var g=u.destroy;return u.destroy=function(){r.off("click",l),g()},u}var r=angular.element(t.document.body),s=Element.prototype.matchesSelector||Element.prototype.webkitMatchesSelector||Element.prototype.mozMatchesSelector||Element.prototype.msMatchesSelector||Element.prototype.oMatchesSelector;return i}]}).directive("bsDropdown",["$window","$sce","$dropdown",function(e,t,n){return{restrict:"EAC",scope:!0,link:function(e,t,a,o){var i={scope:e};angular.forEach(["template","templateUrl","controller","controllerAs","placement","container","delay","trigger","keyboard","html","animation","id"],function(e){angular.isDefined(a[e])&&(i[e]=a[e])});var r=/^(false|0|)$/i;angular.forEach(["html","container"],function(e){angular.isDefined(a[e])&&r.test(a[e])&&(i[e]=!1)}),a.bsDropdown&&e.$watch(a.bsDropdown,function(t,n){e.content=t},!0),a.bsShow&&e.$watch(a.bsShow,function(e,t){s&&angular.isDefined(e)&&(angular.isString(e)&&(e=!!e.match(/true|,?(dropdown),?/i)),e===!0?s.show():s.hide())});var s=n(t,i);e.$on("$destroy",function(){s&&s.destroy(),i=null,s=null})}}}]),angular.module("mgcrea.ngStrap.core",[]).service("$bsCompiler",a),a.$inject=["$q","$http","$injector","$compile","$controller","$templateCache"],angular.module("mgcrea.ngStrap.helpers.dateFormatter",[]).service("$dateFormatter",["$locale","dateFilter",function(e,t){function n(e){return/(h+)([:\.])?(m+)([:\.])?(s*)[ ]?(a?)/i.exec(e).slice(1)}this.getDefaultLocale=function(){return e.id},this.getDatetimeFormat=function(t,n){return e.DATETIME_FORMATS[t]||t},this.weekdaysShort=function(t){return e.DATETIME_FORMATS.SHORTDAY},this.hoursFormat=function(e){return n(e)[0]},this.minutesFormat=function(e){return n(e)[2]},this.secondsFormat=function(e){return n(e)[4]},this.timeSeparator=function(e){return n(e)[1]},this.showSeconds=function(e){return!!n(e)[4]},this.showAM=function(e){return!!n(e)[5]},this.formatDate=function(e,n,a,o){return t(e,n,o)}}]),angular.module("mgcrea.ngStrap.helpers.dateParser",[]).provider("$dateParser",["$localeProvider",function(e){function t(){this.year=1970,this.month=0,this.day=1,this.hours=0,this.minutes=0,this.seconds=0,this.milliseconds=0}function n(){}function a(e){return!isNaN(parseFloat(e))&&isFinite(e)}function o(e,t){for(var n=e.length,a=t.toString().toLowerCase(),o=0;n>o;o++)if(e[o].toLowerCase()===a)return o;return-1}t.prototype.setMilliseconds=function(e){this.milliseconds=e},t.prototype.setSeconds=function(e){this.seconds=e},t.prototype.setMinutes=function(e){this.minutes=e},t.prototype.setHours=function(e){this.hours=e},t.prototype.getHours=function(){return this.hours},t.prototype.setDate=function(e){this.day=e},t.prototype.setMonth=function(e){this.month=e},t.prototype.setFullYear=function(e){this.year=e},t.prototype.fromDate=function(e){return this.year=e.getFullYear(),this.month=e.getMonth(),this.day=e.getDate(),this.hours=e.getHours(),this.minutes=e.getMinutes(),this.seconds=e.getSeconds(),this.milliseconds=e.getMilliseconds(),this},t.prototype.toDate=function(){return new Date(this.year,this.month,this.day,this.hours,this.minutes,this.seconds,this.milliseconds)};var i=t.prototype,r=this.defaults={format:"shortDate",strict:!1};this.$get=["$locale","dateFilter",function(e,s){var l=function(l){function u(e){var t,n=Object.keys(h),a=[],o=[],i=e;for(t=0;t<n.length;t++)if(e.split(n[t]).length>1){var r=i.search(n[t]);e=e.split(n[t]).join(""),h[n[t]]&&(a[r]=h[n[t]])}return angular.forEach(a,function(e){e&&o.push(e)}),o}function c(e){return e.replace(/\//g,"[\\/]").replace("/-/g","[-]").replace(/\./g,"[.]").replace(/\\s/g,"[\\s]")}function d(e){var t,n=Object.keys($),a=e;for(t=0;t<n.length;t++)a=a.split(n[t]).join("${"+t+"}");for(t=0;t<n.length;t++)a=a.split("${"+t+"}").join("("+$[n[t]]+")");return e=c(e),new RegExp("^"+a+"$",["i"])}var f,p,g=angular.extend({},r,l),m={},$={sss:"[0-9]{3}",ss:"[0-5][0-9]",s:g.strict?"[1-5]?[0-9]":"[0-9]|[0-5][0-9]",mm:"[0-5][0-9]",m:g.strict?"[1-5]?[0-9]":"[0-9]|[0-5][0-9]",HH:"[01][0-9]|2[0-3]",H:g.strict?"1?[0-9]|2[0-3]":"[01]?[0-9]|2[0-3]",hh:"[0][1-9]|[1][012]",h:g.strict?"[1-9]|1[012]":"0?[1-9]|1[012]",a:"AM|PM",EEEE:e.DATETIME_FORMATS.DAY.join("|"),EEE:e.DATETIME_FORMATS.SHORTDAY.join("|"),dd:"0[1-9]|[12][0-9]|3[01]",d:g.strict?"[1-9]|[1-2][0-9]|3[01]":"0?[1-9]|[1-2][0-9]|3[01]",MMMM:e.DATETIME_FORMATS.MONTH.join("|"),MMM:e.DATETIME_FORMATS.SHORTMONTH.join("|"),MM:"0[1-9]|1[012]",M:g.strict?"[1-9]|1[012]":"0?[1-9]|1[012]",yyyy:"[1]{1}[0-9]{3}|[2]{1}[0-9]{3}",yy:"[0-9]{2}",y:g.strict?"-?(0|[1-9][0-9]{0,3})":"-?0*[0-9]{1,4}"},h={sss:i.setMilliseconds,ss:i.setSeconds,s:i.setSeconds,mm:i.setMinutes,m:i.setMinutes,HH:i.setHours,H:i.setHours,hh:i.setHours,h:i.setHours,EEEE:n,EEE:n,dd:i.setDate,d:i.setDate,a:function(e){var t=this.getHours()%12;return this.setHours(e.match(/pm/i)?t+12:t)},MMMM:function(t){return this.setMonth(o(e.DATETIME_FORMATS.MONTH,t))},MMM:function(t){return this.setMonth(o(e.DATETIME_FORMATS.SHORTMONTH,t))},MM:function(e){return this.setMonth(1*e-1)},M:function(e){return this.setMonth(1*e-1)},yyyy:i.setFullYear,yy:function(e){return this.setFullYear(2e3+1*e)},y:function(e){return this.setFullYear(50>=1*e&&2===e.length?2e3+1*e:1*e)}};return m.init=function(){m.$format=e.DATETIME_FORMATS[g.format]||g.format,f=d(m.$format),p=u(m.$format)},m.isValid=function(e){return angular.isDate(e)?!isNaN(e.getTime()):f.test(e)},m.parse=function(n,a,o,i){o&&(o=e.DATETIME_FORMATS[o]||o),angular.isDate(n)&&(n=s(n,o||m.$format,i));var r=o?d(o):f,l=o?u(o):p,c=r.exec(n);if(!c)return!1;for(var g=(new t).fromDate(a&&!isNaN(a.getTime())?a:new Date(1970,0,1,0)),$=0;$<c.length-1;$++)l[$]&&l[$].call(g,c[$+1]);var h=g.toDate();return parseInt(g.day,10)!==h.getDate()?!1:h},m.getDateForAttribute=function(e,t){var n;if("today"===t){var o=new Date;n=new Date(o.getFullYear(),o.getMonth(),o.getDate()+("maxDate"===e?1:0),0,0,0,"minDate"===e?0:-1)}else n=angular.isString(t)&&t.match(/^".+"$/)?new Date(t.substr(1,t.length-2)):a(t)?new Date(parseInt(t,10)):angular.isString(t)&&0===t.length?"minDate"===e?-(1/0):+(1/0):new Date(t);return n},m.getTimeForAttribute=function(e,t){var n;return n="now"===t?(new Date).setFullYear(1970,0,1):angular.isString(t)&&t.match(/^".+"$/)?new Date(t.substr(1,t.length-2)).setFullYear(1970,0,1):a(t)?new Date(parseInt(t,10)).setFullYear(1970,0,1):angular.isString(t)&&0===t.length?"minTime"===e?-(1/0):+(1/0):m.parse(t,new Date(1970,0,1,0));

},m.daylightSavingAdjust=function(e){return e?(e.setHours(e.getHours()>12?e.getHours()+2:0),e):null},m.timezoneOffsetAdjust=function(e,t,n){return e?(t&&"UTC"===t&&(e=new Date(e.getTime()),e.setMinutes(e.getMinutes()+(n?-1:1)*e.getTimezoneOffset())),e):null},m.init(),m};return l}]}]),angular.module("mgcrea.ngStrap.helpers.debounce",[]).factory("debounce",["$timeout",function(e){return function(t,n,a){var o=null;return function(){var i=this,r=arguments,s=a&&!o;return o&&e.cancel(o),o=e(function(){o=null,a||t.apply(i,r)},n,!1),s&&t.apply(i,r),o}}}]).factory("throttle",["$timeout",function(e){return function(t,n,a){var o=null;return a||(a={}),function(){var i=this,r=arguments;o||(a.leading!==!1&&t.apply(i,r),o=e(function(){o=null,a.trailing!==!1&&t.apply(i,r)},n,!1))}}}]),angular.module("mgcrea.ngStrap.helpers.dimensions",[]).factory("dimensions",["$document","$window",function(t,n){var a=(angular.element,{}),o=a.nodeName=function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()};a.css=function(t,n,a){var o;return o=t.currentStyle?t.currentStyle[n]:e.getComputedStyle?e.getComputedStyle(t)[n]:t.style[n],a===!0?parseFloat(o)||0:o},a.offset=function(t){var n=t.getBoundingClientRect(),a=t.ownerDocument;return{width:n.width||t.offsetWidth,height:n.height||t.offsetHeight,top:n.top+(e.pageYOffset||a.documentElement.scrollTop)-(a.documentElement.clientTop||0),left:n.left+(e.pageXOffset||a.documentElement.scrollLeft)-(a.documentElement.clientLeft||0)}},a.setOffset=function(e,t,n){var o,i,r,s,l,u,c,d=a.css(e,"position"),f=angular.element(e),p={};"static"===d&&(e.style.position="relative"),l=a.offset(e),r=a.css(e,"top"),u=a.css(e,"left"),c=("absolute"===d||"fixed"===d)&&(r+u).indexOf("auto")>-1,c?(o=a.position(e),s=o.top,i=o.left):(s=parseFloat(r)||0,i=parseFloat(u)||0),angular.isFunction(t)&&(t=t.call(e,n,l)),null!==t.top&&(p.top=t.top-l.top+s),null!==t.left&&(p.left=t.left-l.left+i),"using"in t?t.using.call(f,p):f.css({top:p.top+"px",left:p.left+"px"})},a.position=function(e){var t,n,r={top:0,left:0};return"fixed"===a.css(e,"position")?n=e.getBoundingClientRect():(t=i(e),n=a.offset(e),o(t,"html")||(r=a.offset(t)),r.top+=a.css(t,"borderTopWidth",!0),r.left+=a.css(t,"borderLeftWidth",!0)),{width:e.offsetWidth,height:e.offsetHeight,top:n.top-r.top-a.css(e,"marginTop",!0),left:n.left-r.left-a.css(e,"marginLeft",!0)}};var i=function(e){var t=e.ownerDocument,n=e.offsetParent||t;if(o(n,"#document"))return t.documentElement;for(;n&&!o(n,"html")&&"static"===a.css(n,"position");)n=n.offsetParent;return n||t.documentElement};return a.height=function(e,t){var n=e.offsetHeight;return t?n+=a.css(e,"marginTop",!0)+a.css(e,"marginBottom",!0):n-=a.css(e,"paddingTop",!0)+a.css(e,"paddingBottom",!0)+a.css(e,"borderTopWidth",!0)+a.css(e,"borderBottomWidth",!0),n},a.width=function(e,t){var n=e.offsetWidth;return t?n+=a.css(e,"marginLeft",!0)+a.css(e,"marginRight",!0):n-=a.css(e,"paddingLeft",!0)+a.css(e,"paddingRight",!0)+a.css(e,"borderLeftWidth",!0)+a.css(e,"borderRightWidth",!0),n},a}]),angular.module("mgcrea.ngStrap.helpers.parseOptions",[]).provider("$parseOptions",function(){var e=this.defaults={regexp:/^\s*(.*?)(?:\s+as\s+(.*?))?(?:\s+group\s+by\s+(.*))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+(.*?)(?:\s+track\s+by\s+(.*?))?$/};this.$get=["$parse","$q",function(t,n){function a(a,o){function i(e,t){return e.map(function(e,n){var a,o,i={};return i[c]=e,a=u(t,i),o=p(t,i),{label:a,value:o,index:n}})}var r={},s=angular.extend({},e,o);r.$values=[];var l,u,c,d,f,p,g;return r.init=function(){r.$match=l=a.match(s.regexp),u=t(l[2]||l[1]),c=l[4]||l[6],d=l[5],f=t(l[3]||""),p=t(l[2]?l[1]:c),g=t(l[7])},r.valuesFn=function(e,t){return n.when(g(e,t)).then(function(t){return angular.isArray(t)||(t=[]),r.$values=t.length?i(t,e):[],r.$values})},r.displayValue=function(e){var t={};return t[c]=e,u(t)},r.init(),r}return a}]}),angular.version.minor<3&&angular.version.dot<14&&angular.module("ng").factory("$$rAF",["$window","$timeout",function(e,t){var n=e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame,a=e.cancelAnimationFrame||e.webkitCancelAnimationFrame||e.mozCancelAnimationFrame||e.webkitCancelRequestAnimationFrame,o=!!n,i=o?function(e){var t=n(e);return function(){a(t)}}:function(e){var n=t(e,16.66,!1);return function(){t.cancel(n)}};return i.supported=o,i}]),angular.module("mgcrea.ngStrap.modal",["mgcrea.ngStrap.core","mgcrea.ngStrap.helpers.dimensions"]).provider("$modal",function(){var e=this.defaults={animation:"am-fade",backdropAnimation:"am-fade",prefixClass:"modal",prefixEvent:"modal",placement:"top",templateUrl:"modal/modal.tpl.html",template:"",contentTemplate:!1,container:!1,element:null,backdrop:!0,keyboard:!0,html:!1,show:!0};this.$get=["$window","$rootScope","$bsCompiler","$q","$templateCache","$http","$animate","$timeout","$sce","dimensions",function(n,a,o,i,r,s,l,u,c,d){function f(t){function n(){k.$emit(b.prefixEvent+".show",y)}function i(){k.$emit(b.prefixEvent+".hide",y),h.removeClass(b.prefixClass+"-open"),b.animation&&h.removeClass(b.prefixClass+"-with-"+b.animation)}function r(){b.backdrop&&(x.on("click",f),C.on("click",f),C.on("wheel",v))}function s(){b.backdrop&&(x.off("click",f),C.off("click",f),C.off("wheel",v))}function u(){b.keyboard&&x.on("keyup",y.$onKeyUp)}function d(){b.keyboard&&x.off("keyup",y.$onKeyUp)}function f(e){e.target===e.currentTarget&&("static"===b.backdrop?y.focus():y.hide())}function v(e){e.preventDefault()}function w(){y.$isShown&&null!==x&&(s(),d()),T&&(T.$destroy(),T=null),x&&(x.remove(),x=y.$element=null)}var y={},b=y.$options=angular.extend({},e,t),D=y.$promise=o.compile(b),k=y.$scope=b.scope&&b.scope.$new()||a.$new();b.element||b.container||(b.container="body"),y.$id=b.id||b.element&&b.element.attr("id")||"",m(["title","content"],function(e){b[e]&&(k[e]=c.trustAsHtml(b[e]))}),k.$hide=function(){k.$$postDigest(function(){y.hide()})},k.$show=function(){k.$$postDigest(function(){y.show()})},k.$toggle=function(){k.$$postDigest(function(){y.toggle()})},y.$isShown=k.$isShown=!1;var S,x,T,C=angular.element('<div class="'+b.prefixClass+'-backdrop"/>');return C.css({position:"fixed",top:"0px",left:"0px",bottom:"0px",right:"0px","z-index":1038}),D.then(function(e){S=e,y.init()}),y.init=function(){b.show&&k.$$postDigest(function(){y.show()})},y.destroy=function(){w(),C&&(C.remove(),C=null),k.$destroy()},y.show=function(){if(!y.$isShown){var e,t;if(angular.isElement(b.container)?(e=b.container,t=b.container[0].lastChild?angular.element(b.container[0].lastChild):null):b.container?(e=g(b.container),t=e[0]&&e[0].lastChild?angular.element(e[0].lastChild):null):(e=null,t=b.element),x&&w(),T=y.$scope.$new(),x=y.$element=S.link(T,function(e,t){}),!k.$emit(b.prefixEvent+".show.before",y).defaultPrevented){x.css({display:"block"}).addClass(b.placement),b.animation&&(b.backdrop&&C.addClass(b.backdropAnimation),x.addClass(b.animation)),b.backdrop&&l.enter(C,h,null),angular.version.minor<=2?l.enter(x,e,t,n):l.enter(x,e,t).then(n),y.$isShown=k.$isShown=!0,p(k);var a=x[0];$(function(){a.focus()}),h.addClass(b.prefixClass+"-open"),b.animation&&h.addClass(b.prefixClass+"-with-"+b.animation),r(),u()}}},y.hide=function(){y.$isShown&&(k.$emit(b.prefixEvent+".hide.before",y).defaultPrevented||(angular.version.minor<=2?l.leave(x,i):l.leave(x).then(i),b.backdrop&&l.leave(C),y.$isShown=k.$isShown=!1,p(k),s(),d()))},y.toggle=function(){y.$isShown?y.hide():y.show()},y.focus=function(){x[0].focus()},y.$onKeyUp=function(e){27===e.which&&y.$isShown&&(y.hide(),e.stopPropagation())},y}function p(e){e.$$phase||e.$root&&e.$root.$$phase||e.$digest()}function g(e,n){return angular.element((n||t).querySelectorAll(e))}var m=angular.forEach,$=(String.prototype.trim,n.requestAnimationFrame||n.setTimeout),h=angular.element(n.document.body);return f}]}).directive("bsModal",["$window","$sce","$modal",function(e,t,n){return{restrict:"EAC",scope:!0,link:function(e,a,o,i){var r={scope:e,element:a,show:!1};angular.forEach(["template","templateUrl","controller","controllerAs","contentTemplate","controller","placement","backdrop","keyboard","html","container","animation","id","prefixEvent","prefixClass"],function(e){angular.isDefined(o[e])&&(r[e]=o[e])});var s=/^(false|0|)$/i;angular.forEach(["backdrop","keyboard","html","container"],function(e){angular.isDefined(o[e])&&s.test(o[e])&&(r[e]=!1)}),angular.forEach(["title","content"],function(n){o[n]&&o.$observe(n,function(a,o){e[n]=t.trustAsHtml(a)})}),o.bsModal&&e.$watch(o.bsModal,function(t,n){angular.isObject(t)?angular.extend(e,t):e.content=t},!0);var l=n(r);a.on(o.trigger||"click",l.toggle),e.$on("$destroy",function(){l&&l.destroy(),r=null,l=null})}}}]),angular.module("mgcrea.ngStrap.navbar",[]).provider("$navbar",function(){var e=this.defaults={activeClass:"active",routeAttr:"data-match-route",strict:!1};this.$get=function(){return{defaults:e}}}).directive("bsNavbar",["$window","$location","$navbar",function(e,t,n){var a=n.defaults;return{restrict:"A",link:function(e,n,o,i){var r=angular.copy(a);angular.forEach(Object.keys(a),function(e){angular.isDefined(o[e])&&(r[e]=o[e])}),e.$watch(function(){return t.path()},function(e,t){var a=n[0].querySelectorAll("li["+r.routeAttr+"]");angular.forEach(a,function(t){var n=angular.element(t),a=n.attr(r.routeAttr).replace("/","\\/");r.strict&&(a="^"+a+"$");var o=new RegExp(a,"i");o.test(e)?n.addClass(r.activeClass):n.removeClass(r.activeClass)})})}}}]),angular.module("mgcrea.ngStrap.popover",["mgcrea.ngStrap.tooltip"]).provider("$popover",function(){var e=this.defaults={animation:"am-fade",customClass:"",container:!1,target:!1,placement:"right",templateUrl:"popover/popover.tpl.html",contentTemplate:!1,trigger:"click",keyboard:!0,html:!1,title:"",content:"",delay:0,autoClose:!1};this.$get=["$tooltip",function(t){function n(n,a){var o=angular.extend({},e,a),i=t(n,o);return o.content&&(i.$scope.content=o.content),i}return n}]}).directive("bsPopover",["$window","$sce","$popover",function(e,t,n){var a=e.requestAnimationFrame||e.setTimeout;return{restrict:"EAC",scope:!0,link:function(e,o,i){var r={scope:e};angular.forEach(["template","templateUrl","controller","controllerAs","contentTemplate","placement","container","delay","trigger","html","animation","customClass","autoClose","id","prefixClass","prefixEvent"],function(e){angular.isDefined(i[e])&&(r[e]=i[e])});var s=/^(false|0|)$/i;angular.forEach(["html","container","autoClose"],function(e){angular.isDefined(i[e])&&s.test(i[e])&&(r[e]=!1)});var l=o.attr("data-target");angular.isDefined(l)&&(r.target=s.test(l)?!1:l),angular.forEach(["title","content"],function(n){i[n]&&i.$observe(n,function(o,i){e[n]=t.trustAsHtml(o),angular.isDefined(i)&&a(function(){u&&u.$applyPlacement()})})}),i.bsPopover&&e.$watch(i.bsPopover,function(t,n){angular.isObject(t)?angular.extend(e,t):e.content=t,angular.isDefined(n)&&a(function(){u&&u.$applyPlacement()})},!0),i.bsShow&&e.$watch(i.bsShow,function(e,t){u&&angular.isDefined(e)&&(angular.isString(e)&&(e=!!e.match(/true|,?(popover),?/i)),e===!0?u.show():u.hide())}),i.viewport&&e.$watch(i.viewport,function(e){u&&angular.isDefined(e)&&u.setViewport(e)});var u=n(o,r);e.$on("$destroy",function(){u&&u.destroy(),r=null,u=null})}}}]),angular.module("mgcrea.ngStrap.scrollspy",["mgcrea.ngStrap.helpers.debounce","mgcrea.ngStrap.helpers.dimensions"]).provider("$scrollspy",function(){var e=this.$$spies={},n=this.defaults={debounce:150,throttle:100,offset:100};this.$get=["$window","$document","$rootScope","dimensions","debounce","throttle",function(a,o,i,r,s,l){function u(e,t){return e[0].nodeName&&e[0].nodeName.toLowerCase()===t.toLowerCase()}function c(o){var c=angular.extend({},n,o);c.element||(c.element=p);var g=u(c.element,"body"),m=g?d:c.element,$=g?"window":c.id;if(e[$])return e[$].$$count++,e[$];var h,v,w,y,b,D,k,S,x={},T=x.$trackedElements=[],C=[];return x.init=function(){this.$$count=1,y=s(this.checkPosition,c.debounce),b=l(this.checkPosition,c.throttle),m.on("click",this.checkPositionWithEventLoop),d.on("resize",y),m.on("scroll",b),D=s(this.checkOffsets,c.debounce),h=i.$on("$viewContentLoaded",D),v=i.$on("$includeContentLoaded",D),D(),$&&(e[$]=x)},x.destroy=function(){this.$$count--,this.$$count>0||(m.off("click",this.checkPositionWithEventLoop),d.off("resize",y),m.off("scroll",b),h(),v(),$&&delete e[$])},x.checkPosition=function(){if(C.length){if(S=(g?a.pageYOffset:m.prop("scrollTop"))||0,k=Math.max(a.innerHeight,f.prop("clientHeight")),S<C[0].offsetTop&&w!==C[0].target)return x.$activateElement(C[0]);for(var e=C.length;e--;)if(!angular.isUndefined(C[e].offsetTop)&&null!==C[e].offsetTop&&w!==C[e].target&&!(S<C[e].offsetTop||C[e+1]&&S>C[e+1].offsetTop))return x.$activateElement(C[e])}},x.checkPositionWithEventLoop=function(){setTimeout(x.checkPosition,1)},x.$activateElement=function(e){if(w){var t=x.$getTrackedElement(w);t&&(t.source.removeClass("active"),u(t.source,"li")&&u(t.source.parent().parent(),"li")&&t.source.parent().parent().removeClass("active"))}w=e.target,e.source.addClass("active"),u(e.source,"li")&&u(e.source.parent().parent(),"li")&&e.source.parent().parent().addClass("active")},x.$getTrackedElement=function(e){return T.filter(function(t){return t.target===e})[0]},x.checkOffsets=function(){angular.forEach(T,function(e){var n=t.querySelector(e.target);e.offsetTop=n?r.offset(n).top:null,c.offset&&null!==e.offsetTop&&(e.offsetTop-=1*c.offset)}),C=T.filter(function(e){return null!==e.offsetTop}).sort(function(e,t){return e.offsetTop-t.offsetTop}),y()},x.trackElement=function(e,t){T.push({target:e,source:t})},x.untrackElement=function(e,t){for(var n,a=T.length;a--;)if(T[a].target===e&&T[a].source===t){n=a;break}T=T.splice(n,1)},x.activate=function(e){T[e].addClass("active")},x.init(),x}var d=angular.element(a),f=angular.element(o.prop("documentElement")),p=angular.element(a.document.body);return c}]}).directive("bsScrollspy",["$rootScope","debounce","dimensions","$scrollspy",function(e,t,n,a){return{restrict:"EAC",link:function(e,t,n){var o={scope:e};angular.forEach(["offset","target"],function(e){angular.isDefined(n[e])&&(o[e]=n[e])});var i=a(o);i.trackElement(o.target,t),e.$on("$destroy",function(){i&&(i.untrackElement(o.target,t),i.destroy()),o=null,i=null})}}}]).directive("bsScrollspyList",["$rootScope","debounce","dimensions","$scrollspy",function(e,t,n,a){return{restrict:"A",compile:function(e,t){var n=e[0].querySelectorAll("li > a[href]");angular.forEach(n,function(e){var t=angular.element(e);t.parent().attr("bs-scrollspy","").attr("data-target",t.attr("href"))})}}}]),angular.module("mgcrea.ngStrap.select",["mgcrea.ngStrap.tooltip","mgcrea.ngStrap.helpers.parseOptions"]).provider("$select",function(){var e=this.defaults={animation:"am-fade",prefixClass:"select",prefixEvent:"$select",placement:"bottom-left",templateUrl:"select/select.tpl.html",trigger:"focus",container:!1,keyboard:!0,html:!1,delay:0,multiple:!1,allNoneButtons:!1,sort:!0,caretHtml:'&nbsp;<span class="caret"></span>',placeholder:"Choose among the following...",allText:"All",noneText:"None",maxLength:3,maxLengthHtml:"selected",iconCheckmark:"glyphicon glyphicon-ok"};this.$get=["$window","$document","$rootScope","$tooltip","$timeout",function(t,n,a,o,i){function r(t,n,a){var r={},s=angular.extend({},e,a);r=o(t,s);var u=r.$scope;u.$matches=[],u.$activeIndex=s.multiple?[]:-1,u.$isMultiple=s.multiple,u.$showAllNoneButtons=s.allNoneButtons&&s.multiple,u.$iconCheckmark=s.iconCheckmark,u.$allText=s.allText,u.$noneText=s.noneText,u.$activate=function(e){u.$$postDigest(function(){r.activate(e)})},u.$select=function(e,t){u.$$postDigest(function(){r.select(e)})},u.$isVisible=function(){return r.$isVisible()},u.$isActive=function(e){return r.$isActive(e)},u.$selectAll=function(){for(var e=0;e<u.$matches.length;e++)u.$isActive(e)||u.$select(e)},u.$selectNone=function(){for(var e=0;e<u.$matches.length;e++)u.$isActive(e)&&u.$select(e)},r.update=function(e){u.$matches=e,r.$updateActiveIndex()},r.activate=function(e){return s.multiple?(r.$isActive(e)?u.$activeIndex.splice(u.$activeIndex.indexOf(e),1):u.$activeIndex.push(e),s.sort&&u.$activeIndex.sort(function(e,t){return e-t})):u.$activeIndex=e,u.$activeIndex},r.select=function(e){var t=u.$matches[e].value;u.$apply(function(){r.activate(e),s.multiple?n.$setViewValue(u.$activeIndex.map(function(e){return u.$matches[e].value})):(n.$setViewValue(t),r.hide())}),u.$emit(s.prefixEvent+".select",t,e,r)},r.$updateActiveIndex=function(){n.$modelValue&&u.$matches.length?u.$activeIndex=s.multiple&&angular.isArray(n.$modelValue)?n.$modelValue.map(function(e){return r.$getIndex(e)}):r.$getIndex(n.$modelValue):u.$activeIndex>=u.$matches.length&&(u.$activeIndex=s.multiple?[]:0)},r.$isVisible=function(){return s.minLength&&n?u.$matches.length&&n.$viewValue.length>=s.minLength:u.$matches.length},r.$isActive=function(e){return s.multiple?-1!==u.$activeIndex.indexOf(e):u.$activeIndex===e},r.$getIndex=function(e){var t=u.$matches.length,n=t;if(t){for(n=t;n--&&u.$matches[n].value!==e;);if(!(0>n))return n}},r.$onMouseDown=function(e){if(e.preventDefault(),e.stopPropagation(),l){var t=angular.element(e.target);t.triggerHandler("click")}},r.$onKeyDown=function(e){return/(9|13|38|40)/.test(e.keyCode)?(e.preventDefault(),e.stopPropagation(),s.multiple&&9===e.keyCode?r.hide():s.multiple||13!==e.keyCode&&9!==e.keyCode?void(s.multiple||(38===e.keyCode&&u.$activeIndex>0?u.$activeIndex--:38===e.keyCode&&u.$activeIndex<0?u.$activeIndex=u.$matches.length-1:40===e.keyCode&&u.$activeIndex<u.$matches.length-1?u.$activeIndex++:angular.isUndefined(u.$activeIndex)&&(u.$activeIndex=0),u.$digest())):r.select(u.$activeIndex)):void 0};var c=r.show;r.show=function(){c(),s.multiple&&r.$element.addClass("select-multiple"),i(function(){r.$element.on(l?"touchstart":"mousedown",r.$onMouseDown),s.keyboard&&t.on("keydown",r.$onKeyDown)},0,!1)};var d=r.hide;return r.hide=function(){s.multiple||n.$modelValue||(u.$activeIndex=-1),r.$element.off(l?"touchstart":"mousedown",r.$onMouseDown),s.keyboard&&t.off("keydown",r.$onKeyDown),d(!0)},r}var s=(angular.element(t.document.body),/(ip(a|o)d|iphone|android)/gi.test(t.navigator.userAgent)),l="createTouch"in t.document&&s;return r.defaults=e,r}]}).directive("bsSelect",["$window","$parse","$q","$select","$parseOptions",function(e,t,n,a,o){var i=a.defaults;return{restrict:"EAC",require:"ngModel",link:function(e,t,n,r){var s={scope:e,placeholder:i.placeholder};angular.forEach(["template","templateUrl","controller","controllerAs","placement","container","delay","trigger","keyboard","html","animation","placeholder","allNoneButtons","maxLength","maxLengthHtml","allText","noneText","iconCheckmark","autoClose","id","sort","caretHtml","prefixClass","prefixEvent"],function(e){angular.isDefined(n[e])&&(s[e]=n[e])});var l=/^(false|0|)$/i;angular.forEach(["html","container","allNoneButtons","sort"],function(e){angular.isDefined(n[e])&&l.test(n[e])&&(s[e]=!1)});var u=t.attr("data-multiple");if(angular.isDefined(u)&&(s.multiple=l.test(u)?!1:u),"select"===t[0].nodeName.toLowerCase()){var c=t;c.css("display","none"),t=angular.element('<button type="button" class="btn btn-default"></button>'),c.after(t)}var d=o(n.bsOptions),f=a(t,r,s),p=d.$match[7].replace(/\|.+/,"").trim();e.$watchCollection(p,function(t,n){d.valuesFn(e,r).then(function(e){f.update(e),r.$render()})}),e.$watch(n.ngModel,function(e,t){f.$updateActiveIndex(),r.$render()},!0),r.$render=function(){var e,n;s.multiple&&angular.isArray(r.$modelValue)?(e=r.$modelValue.map(function(e){return n=f.$getIndex(e),angular.isDefined(n)?f.$scope.$matches[n].label:!1}).filter(angular.isDefined),e=e.length>(s.maxLength||i.maxLength)?e.length+" "+(s.maxLengthHtml||i.maxLengthHtml):e.join(", ")):(n=f.$getIndex(r.$modelValue),e=angular.isDefined(n)?f.$scope.$matches[n].label:!1),t.html((e?e:s.placeholder)+(s.caretHtml?s.caretHtml:i.caretHtml))},s.multiple&&(r.$isEmpty=function(e){return!e||0===e.length}),e.$on("$destroy",function(){f&&f.destroy(),s=null,f=null})}}}]),angular.module("mgcrea.ngStrap.timepicker",["mgcrea.ngStrap.helpers.dateParser","mgcrea.ngStrap.helpers.dateFormatter","mgcrea.ngStrap.tooltip"]).provider("$timepicker",function(){var e=this.defaults={animation:"am-fade",prefixClass:"timepicker",placement:"bottom-left",templateUrl:"timepicker/timepicker.tpl.html",trigger:"focus",container:!1,keyboard:!0,html:!1,delay:0,useNative:!0,timeType:"date",timeFormat:"shortTime",timezone:null,modelTimeFormat:null,autoclose:!1,minTime:-(1/0),maxTime:+(1/0),length:5,hourStep:1,minuteStep:5,secondStep:5,roundDisplay:!1,iconUp:"glyphicon glyphicon-chevron-up",iconDown:"glyphicon glyphicon-chevron-down",arrowBehavior:"pager"};this.$get=["$window","$document","$rootScope","$sce","$dateFormatter","$tooltip","$timeout",function(t,n,a,o,i,r,s){function l(t,n,a){function o(e){var t=6e4*g.minuteStep;return new Date(Math.floor(e.getTime()/t)*t)}function l(e,n){var a=e+n;if(t[0].createTextRange){var o=t[0].createTextRange();o.collapse(!0),o.moveStart("character",e),o.moveEnd("character",a),o.select()}else t[0].setSelectionRange?t[0].setSelectionRange(e,a):angular.isUndefined(t[0].selectionStart)&&(t[0].selectionStart=e,t[0].selectionEnd=a)}function d(){t[0].focus()}var f=r(t,angular.extend({},e,a)),p=a.scope,g=f.$options,m=f.$scope,$=g.lang,h=function(e,t,n){return i.formatDate(e,t,$,n)},v=0,w=g.roundDisplay?o(new Date):new Date,y=n.$dateValue||w,b={hour:y.getHours(),meridian:y.getHours()<12,minute:y.getMinutes(),second:y.getSeconds(),millisecond:y.getMilliseconds()},D=i.getDatetimeFormat(g.timeFormat,$),k=i.hoursFormat(D),S=i.timeSeparator(D),x=i.minutesFormat(D),T=i.secondsFormat(D),C=i.showSeconds(D),M=i.showAM(D);m.$iconUp=g.iconUp,m.$iconDown=g.iconDown,m.$select=function(e,t){f.select(e,t)},m.$moveIndex=function(e,t){f.$moveIndex(e,t)},m.$switchMeridian=function(e){f.switchMeridian(e)},f.update=function(e){angular.isDate(e)&&!isNaN(e.getTime())?(f.$date=e,angular.extend(b,{hour:e.getHours(),minute:e.getMinutes(),second:e.getSeconds(),millisecond:e.getMilliseconds()}),f.$build()):f.$isBuilt||f.$build()},f.select=function(e,t,a){(!n.$dateValue||isNaN(n.$dateValue.getTime()))&&(n.$dateValue=new Date(1970,0,1)),angular.isDate(e)||(e=new Date(e)),0===t?n.$dateValue.setHours(e.getHours()):1===t?n.$dateValue.setMinutes(e.getMinutes()):2===t&&n.$dateValue.setSeconds(e.getSeconds()),n.$setViewValue(angular.copy(n.$dateValue)),n.$render(),g.autoclose&&!a&&s(function(){f.hide(!0)})},f.switchMeridian=function(e){if(n.$dateValue&&!isNaN(n.$dateValue.getTime())){var t=(e||n.$dateValue).getHours();n.$dateValue.setHours(12>t?t+12:t-12),n.$setViewValue(angular.copy(n.$dateValue)),n.$render()}},f.$build=function(){var e,t,n=m.midIndex=parseInt(g.length/2,10),a=[];for(e=0;e<g.length;e++)t=new Date(1970,0,1,b.hour-(n-e)*g.hourStep),a.push({date:t,label:h(t,k),selected:f.$date&&f.$isSelected(t,0),disabled:f.$isDisabled(t,0)});var o,i=[];for(e=0;e<g.length;e++)o=new Date(1970,0,1,0,b.minute-(n-e)*g.minuteStep),i.push({date:o,label:h(o,x),selected:f.$date&&f.$isSelected(o,1),disabled:f.$isDisabled(o,1)});var r,s=[];for(e=0;e<g.length;e++)r=new Date(1970,0,1,0,0,b.second-(n-e)*g.secondStep),s.push({date:r,label:h(r,T),selected:f.$date&&f.$isSelected(r,2),disabled:f.$isDisabled(r,2)});var l=[];for(e=0;e<g.length;e++)l.push(C?[a[e],i[e],s[e]]:[a[e],i[e]]);m.rows=l,m.showSeconds=C,m.showAM=M,m.isAM=(f.$date||a[n].date).getHours()<12,m.timeSeparator=S,f.$isBuilt=!0},f.$isSelected=function(e,t){return f.$date?0===t?e.getHours()===f.$date.getHours():1===t?e.getMinutes()===f.$date.getMinutes():2===t?e.getSeconds()===f.$date.getSeconds():void 0:!1},f.$isDisabled=function(e,t){var n;return 0===t?n=e.getTime()+6e4*b.minute+1e3*b.second:1===t?n=e.getTime()+36e5*b.hour+1e3*b.second:2===t&&(n=e.getTime()+36e5*b.hour+6e4*b.minute),n<1*g.minTime||n>1*g.maxTime},m.$arrowAction=function(e,t){"picker"===g.arrowBehavior?f.$setTimeByStep(e,t):f.$moveIndex(e,t)},f.$setTimeByStep=function(e,t){var n=new Date(f.$date||y),a=n.getHours(),o=n.getMinutes(),i=n.getSeconds();0===t?n.setHours(a-parseInt(g.hourStep,10)*e):1===t?n.setMinutes(o-parseInt(g.minuteStep,10)*e):2===t&&n.setSeconds(i-parseInt(g.secondStep,10)*e),f.select(n,t,!0)},f.$moveIndex=function(e,t){var n;0===t?(n=new Date(1970,0,1,b.hour+e*g.length,b.minute,b.second),angular.extend(b,{hour:n.getHours()})):1===t?(n=new Date(1970,0,1,b.hour,b.minute+e*g.length*g.minuteStep,b.second),angular.extend(b,{minute:n.getMinutes()})):2===t&&(n=new Date(1970,0,1,b.hour,b.minute,b.second+e*g.length*g.secondStep),angular.extend(b,{second:n.getSeconds()})),f.$build()},f.$onMouseDown=function(e){if("input"!==e.target.nodeName.toLowerCase()&&e.preventDefault(),e.stopPropagation(),c){var t=angular.element(e.target);"button"!==t[0].nodeName.toLowerCase()&&(t=t.parent()),t.triggerHandler("click")}},f.$onKeyDown=function(e){if(/(38|37|39|40|13)/.test(e.keyCode)&&!e.shiftKey&&!e.altKey){if(e.preventDefault(),e.stopPropagation(),13===e.keyCode)return void f.hide(!0);var t=new Date(f.$date),n=t.getHours(),a=h(t,k).length,o=t.getMinutes(),i=h(t,x).length,r=t.getSeconds(),s=h(t,T).length,u=1,c=/(37|39)/.test(e.keyCode),d=2+1*C+1*M;c&&(37===e.keyCode?v=1>v?d-1:v-1:39===e.keyCode&&(v=d-1>v?v+1:0));var m=[0,a],$=0;38===e.keyCode&&($=-1),40===e.keyCode&&($=1);var w=2===v&&C,y=2===v&&!C||3===v&&C;0===v?(t.setHours(n+$*parseInt(g.hourStep,10)),a=h(t,k).length,m=[0,a]):1===v?(t.setMinutes(o+$*parseInt(g.minuteStep,10)),i=h(t,x).length,m=[a+u,i]):w?(t.setSeconds(r+$*parseInt(g.secondStep,10)),s=h(t,T).length,m=[a+u+i+u,s]):y&&(c||f.switchMeridian(),m=[a+u+i+u+(s+u)*C,2]),f.select(t,v,!0),l(m[0],m[1]),p.$digest()}};var E=f.init;f.init=function(){return u&&g.useNative?(t.prop("type","time"),void t.css("-webkit-appearance","textfield")):(c&&(t.prop("type","text"),t.attr("readonly","true"),t.on("click",d)),void E())};var A=f.destroy;f.destroy=function(){u&&g.useNative&&t.off("click",d),A()};var F=f.show;f.show=function(){!c&&t.attr("readonly")||t.attr("disabled")||(F(),s(function(){f.$element&&f.$element.on(c?"touchstart":"mousedown",f.$onMouseDown),g.keyboard&&t&&t.on("keydown",f.$onKeyDown)},0,!1))};var V=f.hide;return f.hide=function(e){f.$isShown&&(f.$element&&f.$element.off(c?"touchstart":"mousedown",f.$onMouseDown),g.keyboard&&t&&t.off("keydown",f.$onKeyDown),V(e))},f}var u=/(ip(a|o)d|iphone|android)/gi.test(t.navigator.userAgent),c="createTouch"in t.document&&u;return e.lang||(e.lang=i.getDefaultLocale()),l.defaults=e,l}]}).directive("bsTimepicker",["$window","$parse","$q","$dateFormatter","$dateParser","$timepicker",function(e,t,a,o,i,r){var s=r.defaults,l=/(ip(a|o)d|iphone|android)/gi.test(e.navigator.userAgent);return{restrict:"EAC",require:"ngModel",link:function(e,t,a,u){function c(e){if(angular.isDate(e)){var t=isNaN(f.minTime)||new Date(e.getTime()).setFullYear(1970,0,1)>=f.minTime,n=isNaN(f.maxTime)||new Date(e.getTime()).setFullYear(1970,0,1)<=f.maxTime,a=t&&n;u.$setValidity("date",a),u.$setValidity("min",t),u.$setValidity("max",n),a&&(u.$dateValue=e)}}function d(){return!u.$dateValue||isNaN(u.$dateValue.getTime())?"":$(u.$dateValue,f.timeFormat)}var f={scope:e};angular.forEach(["template","templateUrl","controller","controllerAs","placement","container","delay","trigger","keyboard","html","animation","autoclose","timeType","timeFormat","timezone","modelTimeFormat","useNative","hourStep","minuteStep","secondStep","length","arrowBehavior","iconUp","iconDown","roundDisplay","id","prefixClass","prefixEvent"],function(e){angular.isDefined(a[e])&&(f[e]=a[e])});var p=/^(false|0|)$/i;angular.forEach(["html","container","autoclose","useNative","roundDisplay"],function(e){angular.isDefined(a[e])&&p.test(a[e])&&(f[e]=!1)}),a.bsShow&&e.$watch(a.bsShow,function(e,t){g&&angular.isDefined(e)&&(angular.isString(e)&&(e=!!e.match(/true|,?(timepicker),?/i)),e===!0?g.show():g.hide())}),l&&(f.useNative||s.useNative)&&(f.timeFormat="HH:mm");var g=r(t,u,f);f=g.$options;var m=f.lang,$=function(e,t,n){return o.formatDate(e,t,m,n)},h=i({format:f.timeFormat,lang:m});angular.forEach(["minTime","maxTime"],function(e){angular.isDefined(a[e])&&a.$observe(e,function(t){g.$options[e]=h.getTimeForAttribute(e,t),!isNaN(g.$options[e])&&g.$build(),c(u.$dateValue)})}),e.$watch(a.ngModel,function(e,t){g.update(u.$dateValue)},!0),u.$parsers.unshift(function(e){var t;if(!e)return u.$setValidity("date",!0),null;var a=angular.isDate(e)?e:h.parse(e,u.$dateValue);return!a||isNaN(a.getTime())?(u.$setValidity("date",!1),n):(c(a),"string"===f.timeType?(t=h.timezoneOffsetAdjust(a,f.timezone,!0),$(t,f.modelTimeFormat||f.timeFormat)):(t=h.timezoneOffsetAdjust(u.$dateValue,f.timezone,!0),"number"===f.timeType?t.getTime():"unix"===f.timeType?t.getTime()/1e3:"iso"===f.timeType?t.toISOString():new Date(t)))}),u.$formatters.push(function(e){var t;return t=angular.isUndefined(e)||null===e?0/0:angular.isDate(e)?e:"string"===f.timeType?h.parse(e,null,f.modelTimeFormat):new Date("unix"===f.timeType?1e3*e:e),u.$dateValue=h.timezoneOffsetAdjust(t,f.timezone),d()}),u.$render=function(){t.val(d())},e.$on("$destroy",function(){g&&g.destroy(),f=null,g=null})}}}]),angular.module("mgcrea.ngStrap.tab",[]).provider("$tab",function(){var e=this.defaults={animation:"am-fade",template:"tab/tab.tpl.html",navClass:"nav-tabs",activeClass:"active"},t=this.controller=function(t,n,a){var o=this;o.$options=angular.copy(e),angular.forEach(["animation","navClass","activeClass"],function(e){angular.isDefined(a[e])&&(o.$options[e]=a[e])}),t.$navClass=o.$options.navClass,t.$activeClass=o.$options.activeClass,o.$panes=t.$panes=[],o.$activePaneChangeListeners=o.$viewChangeListeners=[],o.$push=function(e){angular.isUndefined(o.$panes.$active)&&t.$setActive(e.name||0),o.$panes.push(e)},o.$remove=function(e){var t,n=o.$panes.indexOf(e),a=o.$panes.$active;t=angular.isString(a)?o.$panes.map(function(e){return e.name}).indexOf(a):o.$panes.$active,o.$panes.splice(n,1),t>n?t--:n===t&&t===o.$panes.length&&t--,t>=0&&t<o.$panes.length?o.$setActive(o.$panes[t].name||t):o.$setActive()},o.$setActive=t.$setActive=function(e){o.$panes.$active=e,o.$activePaneChangeListeners.forEach(function(e){e()})},o.$isActive=t.$isActive=function(e,t){return o.$panes.$active===e.name||o.$panes.$active===t}};this.$get=function(){var n={};return n.defaults=e,n.controller=t,n}}).directive("bsTabs",["$window","$animate","$tab","$parse",function(e,t,n,a){var o=n.defaults;return{require:["?ngModel","bsTabs"],transclude:!0,scope:!0,controller:["$scope","$element","$attrs",n.controller],templateUrl:function(e,t){return t.template||o.template},link:function(e,t,n,o){var i=o[0],r=o[1];if(i&&(r.$activePaneChangeListeners.push(function(){i.$setViewValue(r.$panes.$active)}),i.$formatters.push(function(e){return r.$setActive(e),e})),n.bsActivePane){var s=a(n.bsActivePane);r.$activePaneChangeListeners.push(function(){s.assign(e,r.$panes.$active)}),e.$watch(n.bsActivePane,function(e,t){r.$setActive(e)},!0)}}}}]).directive("bsPane",["$window","$animate","$sce",function(e,t,n){return{require:["^?ngModel","^bsTabs"],scope:!0,link:function(e,a,o,i){function r(){var n=s.$panes.indexOf(e);t[s.$isActive(e,n)?"addClass":"removeClass"](a,s.$options.activeClass)}var s=(i[0],i[1]);a.addClass("tab-pane"),o.$observe("title",function(t,a){e.title=n.trustAsHtml(t)}),e.name=o.name,s.$options.animation&&a.addClass(s.$options.animation),o.$observe("disabled",function(t,n){e.disabled=e.$eval(t)}),s.$push(e),e.$on("$destroy",function(){s.$remove(e)}),s.$activePaneChangeListeners.push(function(){r()}),r()}}}]),angular.module("mgcrea.ngStrap.typeahead",["mgcrea.ngStrap.tooltip","mgcrea.ngStrap.helpers.parseOptions"]).provider("$typeahead",function(){var e=this.defaults={animation:"am-fade",prefixClass:"typeahead",prefixEvent:"$typeahead",placement:"bottom-left",templateUrl:"typeahead/typeahead.tpl.html",trigger:"focus",container:!1,keyboard:!0,html:!1,delay:0,minLength:1,filter:"bsAsyncFilter",limit:6,autoSelect:!1,comparator:"",trimValue:!0};this.$get=["$window","$rootScope","$tooltip","$$rAF","$timeout",function(t,n,a,o,i){
function r(t,n,r){var l={},u=angular.extend({},e,r);l=a(t,u);var c=r.scope,d=l.$scope;d.$resetMatches=function(){d.$matches=[],d.$activeIndex=u.autoSelect?0:-1},d.$resetMatches(),d.$activate=function(e){d.$$postDigest(function(){l.activate(e)})},d.$select=function(e,t){d.$$postDigest(function(){l.select(e)})},d.$isVisible=function(){return l.$isVisible()},l.update=function(e){d.$matches=e,d.$activeIndex>=e.length&&(d.$activeIndex=u.autoSelect?0:-1),s(d),o(l.$applyPlacement)},l.activate=function(e){d.$activeIndex=e},l.select=function(e){if(-1!==e){var t=d.$matches[e].value;n.$setViewValue(t),n.$render(),d.$resetMatches(),c&&c.$digest(),d.$emit(u.prefixEvent+".select",t,e,l)}},l.$isVisible=function(){return u.minLength&&n?d.$matches.length&&angular.isString(n.$viewValue)&&n.$viewValue.length>=u.minLength:!!d.$matches.length},l.$getIndex=function(e){var t=d.$matches.length,n=t;if(t){for(n=t;n--&&d.$matches[n].value!==e;);if(!(0>n))return n}},l.$onMouseDown=function(e){e.preventDefault(),e.stopPropagation()},l.$onKeyDown=function(e){/(38|40|13)/.test(e.keyCode)&&(!l.$isVisible()||13===e.keyCode&&-1===d.$activeIndex||(e.preventDefault(),e.stopPropagation()),13===e.keyCode&&d.$matches.length?l.select(d.$activeIndex):38===e.keyCode&&d.$activeIndex>0?d.$activeIndex--:40===e.keyCode&&d.$activeIndex<d.$matches.length-1?d.$activeIndex++:angular.isUndefined(d.$activeIndex)&&(d.$activeIndex=0),d.$digest())};var f=l.show;l.show=function(){f(),i(function(){l.$element&&l.$element.on("mousedown",l.$onMouseDown),u.keyboard&&t&&t.on("keydown",l.$onKeyDown)},0,!1)};var p=l.hide;return l.hide=function(){l.$element&&l.$element.off("mousedown",l.$onMouseDown),u.keyboard&&t&&t.off("keydown",l.$onKeyDown),u.autoSelect||l.activate(-1),p()},l}function s(e){e.$$phase||e.$root&&e.$root.$$phase||e.$digest()}return angular.element(t.document.body),r.defaults=e,r}]}).filter("bsAsyncFilter",["$filter",function(e){return function(t,n,a){return t&&angular.isFunction(t.then)?t.then(function(t){return e("filter")(t,n,a)}):e("filter")(t,n,a)}}]).directive("bsTypeahead",["$window","$parse","$q","$typeahead","$parseOptions",function(e,t,n,a,o){var i=a.defaults;return{restrict:"EAC",require:"ngModel",link:function(e,t,n,r){var s={scope:e};angular.forEach(["template","templateUrl","controller","controllerAs","placement","container","delay","trigger","keyboard","html","animation","filter","limit","minLength","watchOptions","selectMode","autoSelect","comparator","id","prefixEvent","prefixClass"],function(e){angular.isDefined(n[e])&&(s[e]=n[e])});var l=/^(false|0|)$/i;angular.forEach(["html","container","trimValue"],function(e){angular.isDefined(n[e])&&l.test(n[e])&&(s[e]=!1)}),t.attr("autocomplete","false");var u=s.filter||i.filter,c=s.limit||i.limit,d=s.comparator||i.comparator,f=n.bsOptions;u&&(f+=" | "+u+":$viewValue"),d&&(f+=":"+d),c&&(f+=" | limitTo:"+c);var p=o(f),g=a(t,r,s);if(s.watchOptions){var m=p.$match[7].replace(/\|.+/,"").replace(/\(.*\)/g,"").trim();e.$watchCollection(m,function(t,n){p.valuesFn(e,r).then(function(e){g.update(e),r.$render()})})}e.$watch(n.ngModel,function(t,n){e.$modelValue=t,p.valuesFn(e,r).then(function(e){if(s.selectMode&&!e.length&&t.length>0)return void r.$setViewValue(r.$viewValue.substring(0,r.$viewValue.length-1));e.length>c&&(e=e.slice(0,c));var n=g.$isVisible();n&&g.update(e),(1!==e.length||e[0].value!==t)&&(!n&&g.update(e),r.$render())})}),r.$formatters.push(function(e){var t=p.displayValue(e);return t?t:e&&"object"!=typeof e?e:""}),r.$render=function(){if(r.$isEmpty(r.$viewValue))return t.val("");var e=g.$getIndex(r.$modelValue),n=angular.isDefined(e)?g.$scope.$matches[e].label:r.$viewValue;n=angular.isObject(n)?p.displayValue(n):n;var a=n?n.toString().replace(/<(?:.|\n)*?>/gm,""):"";t.val(s.trimValue===!1?a:a.trim())},e.$on("$destroy",function(){g&&g.destroy(),s=null,g=null})}}}]),angular.module("mgcrea.ngStrap.tooltip",["mgcrea.ngStrap.core","mgcrea.ngStrap.helpers.dimensions"]).provider("$tooltip",function(){var e=this.defaults={animation:"am-fade",customClass:"",prefixClass:"tooltip",prefixEvent:"tooltip",container:!1,target:!1,placement:"top",templateUrl:"tooltip/tooltip.tpl.html",template:"",contentTemplate:!1,trigger:"hover focus",keyboard:!1,html:!1,show:!1,title:"",type:"",delay:0,autoClose:!1,bsEnabled:!0,viewport:{selector:"body",padding:0}};this.$get=["$window","$rootScope","$bsCompiler","$q","$templateCache","$http","$animate","$sce","dimensions","$$rAF","$timeout",function(n,a,o,i,r,s,l,u,c,d,f){function p(i,r){function s(){P.$emit(V.prefixEvent+".show",F)}function p(){if(P.$emit(V.prefixEvent+".hide",F),R===j){if(z&&"focus"===V.trigger)return i[0].blur();A()}}function v(){var e=V.trigger.split(" ");angular.forEach(e,function(e){"click"===e?i.on("click",F.toggle):"manual"!==e&&(i.on("hover"===e?"mouseenter":"focus",F.enter),i.on("hover"===e?"mouseleave":"blur",F.leave),"button"===I&&"hover"!==e&&i.on($?"touchstart":"mousedown",F.$onFocusElementMouseDown))})}function w(){for(var e=V.trigger.split(" "),t=e.length;t--;){var n=e[t];"click"===n?i.off("click",F.toggle):"manual"!==n&&(i.off("hover"===n?"mouseenter":"focus",F.enter),i.off("hover"===n?"mouseleave":"blur",F.leave),"button"===I&&"hover"!==n&&i.off($?"touchstart":"mousedown",F.$onFocusElementMouseDown))}}function y(){"focus"!==V.trigger?R.on("keyup",F.$onKeyUp):i.on("keyup",F.$onFocusKeyUp)}function b(){"focus"!==V.trigger?R.off("keyup",F.$onKeyUp):i.off("keyup",F.$onFocusKeyUp)}function D(){f(function(){R.on("click",S),h.on("click",F.hide),K=!0},0,!1)}function k(){K&&(R.off("click",S),h.off("click",F.hide),K=!1)}function S(e){e.stopPropagation()}function x(e){e=e||V.target||i;var a=e[0],o="BODY"===a.tagName,r=a.getBoundingClientRect(),s={};for(var l in r)s[l]=r[l];null===s.width&&(s=angular.extend({},s,{width:r.right-r.left,height:r.bottom-r.top}));var u=o?{top:0,left:0}:c.offset(a),d={scroll:o?t.documentElement.scrollTop||t.body.scrollTop:e.prop("scrollTop")||0},f=o?{width:t.documentElement.clientWidth,height:n.innerHeight}:null;return angular.extend({},s,d,f,u)}function T(e,t,n,a){var o,i=e.split("-");switch(i[0]){case"right":o={top:t.top+t.height/2-a/2,left:t.left+t.width};break;case"bottom":o={top:t.top+t.height,left:t.left+t.width/2-n/2};break;case"left":o={top:t.top+t.height/2-a/2,left:t.left-n};break;default:o={top:t.top-a,left:t.left+t.width/2-n/2}}if(!i[1])return o;if("top"===i[0]||"bottom"===i[0])switch(i[1]){case"left":o.left=t.left;break;case"right":o.left=t.left+t.width-n}else if("left"===i[0]||"right"===i[0])switch(i[1]){case"top":o.top=t.top-a;break;case"bottom":o.top=t.top+t.height}return o}function C(e,t){var n=R[0],a=n.offsetWidth,o=n.offsetHeight,i=parseInt(c.css(n,"margin-top"),10),r=parseInt(c.css(n,"margin-left"),10);isNaN(i)&&(i=0),isNaN(r)&&(r=0),e.top=e.top+i,e.left=e.left+r,c.setOffset(n,angular.extend({using:function(e){R.css({top:Math.round(e.top)+"px",left:Math.round(e.left)+"px",right:""})}},e),0);var s=n.offsetWidth,l=n.offsetHeight;if("top"===t&&l!==o&&(e.top=e.top+o-l),!/top-left|top-right|bottom-left|bottom-right/.test(t)){var u=M(t,e,s,l);if(u.left?e.left+=u.left:e.top+=u.top,c.setOffset(n,e),/top|right|bottom|left/.test(t)){var d=/top|bottom/.test(t),f=d?2*u.left-a+s:2*u.top-o+l,p=d?"offsetWidth":"offsetHeight";E(f,n[p],d)}}}function M(e,t,n,a){var o={top:0,left:0};if(!F.$viewport)return o;var i=V.viewport&&V.viewport.padding||0,r=x(F.$viewport);if(/right|left/.test(e)){var s=t.top-i-r.scroll,l=t.top+i-r.scroll+a;s<r.top?o.top=r.top-s:l>r.top+r.height&&(o.top=r.top+r.height-l)}else{var u=t.left-i,c=t.left+i+n;u<r.left?o.left=r.left-u:c>r.right&&(o.left=r.left+r.width-c)}return o}function E(e,t,n){var a=m(".tooltip-arrow, .arrow",R[0]);a.css(n?"left":"top",50*(1-e/t)+"%").css(n?"top":"left","")}function A(){clearTimeout(H),F.$isShown&&null!==R&&(V.autoClose&&k(),V.keyboard&&b()),Y&&(Y.$destroy(),Y=null),R&&(R.remove(),R=F.$element=null)}var F={},V=F.$options=angular.extend({},e,r),O=F.$promise=o.compile(V),P=F.$scope=V.scope&&V.scope.$new()||a.$new(),I=i[0].nodeName.toLowerCase();if(V.delay&&angular.isString(V.delay)){var N=V.delay.split(",").map(parseFloat);V.delay=N.length>1?{show:N[0],hide:N[1]}:N[0]}F.$id=V.id||i.attr("id")||"",V.title&&(P.title=u.trustAsHtml(V.title)),P.$setEnabled=function(e){P.$$postDigest(function(){F.setEnabled(e)})},P.$hide=function(){P.$$postDigest(function(){F.hide()})},P.$show=function(){P.$$postDigest(function(){F.show()})},P.$toggle=function(){P.$$postDigest(function(){F.toggle()})},F.$isShown=P.$isShown=!1;var H,L,U,R,q,Y;O.then(function(e){U=e,F.init()}),F.init=function(){V.delay&&angular.isNumber(V.delay)&&(V.delay={show:V.delay,hide:V.delay}),"self"===V.container?q=i:angular.isElement(V.container)?q=V.container:V.container&&(q=m(V.container)),v(),V.target&&(V.target=angular.isElement(V.target)?V.target:m(V.target)),V.show&&P.$$postDigest(function(){"focus"===V.trigger?i[0].focus():F.show()})},F.destroy=function(){w(),A(),P.$destroy()},F.enter=function(){return clearTimeout(H),L="in",V.delay&&V.delay.show?void(H=setTimeout(function(){"in"===L&&F.show()},V.delay.show)):F.show()},F.show=function(){if(V.bsEnabled&&!F.$isShown){P.$emit(V.prefixEvent+".show.before",F);var e,t;V.container?(e=q,t=q[0].lastChild?angular.element(q[0].lastChild):null):(e=null,t=i),R&&A(),Y=F.$scope.$new(),R=F.$element=U.link(Y,function(e,t){}),R.css({top:"-9999px",left:"-9999px",right:"auto",display:"block",visibility:"hidden"}),V.animation&&R.addClass(V.animation),V.type&&R.addClass(V.prefixClass+"-"+V.type),V.customClass&&R.addClass(V.customClass),t?t.after(R):e.prepend(R),F.$isShown=P.$isShown=!0,g(P),F.$applyPlacement(),angular.version.minor<=2?l.enter(R,e,t,s):l.enter(R,e,t).then(s),g(P),d(function(){R&&R.css({visibility:"visible"})}),V.keyboard&&("focus"!==V.trigger&&F.focus(),y()),V.autoClose&&D()}},F.leave=function(){return clearTimeout(H),L="out",V.delay&&V.delay.hide?void(H=setTimeout(function(){"out"===L&&F.hide()},V.delay.hide)):F.hide()};var z,j;F.hide=function(e){F.$isShown&&(P.$emit(V.prefixEvent+".hide.before",F),z=e,j=R,angular.version.minor<=2?l.leave(R,p):l.leave(R).then(p),F.$isShown=P.$isShown=!1,g(P),V.keyboard&&null!==R&&b(),V.autoClose&&null!==R&&k())},F.toggle=function(){F.$isShown?F.leave():F.enter()},F.focus=function(){R[0].focus()},F.setEnabled=function(e){V.bsEnabled=e},F.setViewport=function(e){V.viewport=e},F.$applyPlacement=function(){if(R){var t=V.placement,n=/\s?auto?\s?/i,a=n.test(t);a&&(t=t.replace(n,"")||e.placement),R.addClass(V.placement);var o=x(),i=R.prop("offsetWidth"),r=R.prop("offsetHeight");if(F.$viewport=V.viewport&&m(V.viewport.selector||V.viewport),a){var s=t,l=x(F.$viewport);s.indexOf("bottom")>=0&&o.bottom+r>l.bottom?t=s.replace("bottom","top"):s.indexOf("top")>=0&&o.top-r<l.top&&(t=s.replace("top","bottom")),("right"===s||"bottom-left"===s||"top-left"===s)&&o.right+i>l.width?t="right"===s?"left":t.replace("left","right"):("left"===s||"bottom-right"===s||"top-right"===s)&&o.left-i<l.left&&(t="left"===s?"right":t.replace("right","left")),R.removeClass(s).addClass(t)}var u=T(t,o,i,r);C(u,t)}},F.$onKeyUp=function(e){27===e.which&&F.$isShown&&(F.hide(),e.stopPropagation())},F.$onFocusKeyUp=function(e){27===e.which&&(i[0].blur(),e.stopPropagation())},F.$onFocusElementMouseDown=function(e){e.preventDefault(),e.stopPropagation(),F.$isShown?i[0].blur():i[0].focus()};var K=!1;return F}function g(e){e.$$phase||e.$root&&e.$root.$$phase||e.$digest()}function m(e,n){return angular.element((n||t).querySelectorAll(e))}var $=(String.prototype.trim,"createTouch"in n.document),h=angular.element(n.document);return p}]}).directive("bsTooltip",["$window","$location","$sce","$tooltip","$$rAF",function(e,t,n,a,o){return{restrict:"EAC",scope:!0,link:function(e,t,i,r){var s={scope:e};angular.forEach(["template","templateUrl","controller","controllerAs","contentTemplate","placement","container","delay","trigger","html","animation","backdropAnimation","type","customClass","id"],function(e){angular.isDefined(i[e])&&(s[e]=i[e])});var l=/^(false|0|)$/i;angular.forEach(["html","container"],function(e){angular.isDefined(i[e])&&l.test(i[e])&&(s[e]=!1)});var u=t.attr("data-target");angular.isDefined(u)&&(s.target=l.test(u)?!1:u),e.hasOwnProperty("title")||(e.title=""),i.$observe("title",function(t){if(angular.isDefined(t)||!e.hasOwnProperty("title")){var a=e.title;e.title=n.trustAsHtml(t),angular.isDefined(a)&&o(function(){c&&c.$applyPlacement()})}}),i.bsTooltip&&e.$watch(i.bsTooltip,function(t,n){angular.isObject(t)?angular.extend(e,t):e.title=t,angular.isDefined(n)&&o(function(){c&&c.$applyPlacement()})},!0),i.bsShow&&e.$watch(i.bsShow,function(e,t){c&&angular.isDefined(e)&&(angular.isString(e)&&(e=!!e.match(/true|,?(tooltip),?/i)),e===!0?c.show():c.hide())}),i.bsEnabled&&e.$watch(i.bsEnabled,function(e,t){c&&angular.isDefined(e)&&(angular.isString(e)&&(e=!!e.match(/true|1|,?(tooltip),?/i)),c.setEnabled(e===!1?!1:!0))}),i.viewport&&e.$watch(i.viewport,function(e){c&&angular.isDefined(e)&&c.setViewport(e)});var c=a(t,s);e.$on("$destroy",function(){c&&c.destroy(),s=null,c=null})}}}])}(window,document);
!function(t,e,n){"use strict";angular.module("mgcrea.ngStrap.alert").run(["$templateCache",function(t){t.put("alert/alert.tpl.html",'<div class="alert" ng-class="[type ? \'alert-\' + type : null]"><button type="button" class="close" ng-if="dismissable" ng-click="$hide()">&times;</button> <strong ng-bind="title"></strong>&nbsp;<span ng-bind-html="content"></span></div>')}]),angular.module("mgcrea.ngStrap.aside").run(["$templateCache",function(t){t.put("aside/aside.tpl.html",'<div class="aside" tabindex="-1" role="dialog"><div class="aside-dialog"><div class="aside-content"><div class="aside-header" ng-show="title"><button type="button" class="close" ng-click="$hide()">&times;</button><h4 class="aside-title" ng-bind="title"></h4></div><div class="aside-body" ng-bind="content"></div><div class="aside-footer"><button type="button" class="btn btn-default" ng-click="$hide()">Close</button></div></div></div></div>')}]),angular.module("mgcrea.ngStrap.datepicker").run(["$templateCache",function(t){t.put("datepicker/datepicker.tpl.html",'<div class="dropdown-menu datepicker" ng-class="\'datepicker-mode-\' + $mode" style="max-width: 320px"><table style="table-layout: fixed; height: 100%; width: 100%"><thead><tr class="text-center"><th><button tabindex="-1" type="button" class="btn btn-default pull-left" ng-click="$selectPane(-1)"><i class="{{$iconLeft}}"></i></button></th><th colspan="{{ rows[0].length - 2 }}"><button tabindex="-1" type="button" class="btn btn-default btn-block text-strong" ng-click="$toggleMode()"><strong style="text-transform: capitalize" ng-bind="title"></strong></button></th><th><button tabindex="-1" type="button" class="btn btn-default pull-right" ng-click="$selectPane(+1)"><i class="{{$iconRight}}"></i></button></th></tr><tr ng-show="showLabels" ng-bind-html="labels"></tr></thead><tbody><tr ng-repeat="(i, row) in rows" height="{{ 100 / rows.length }}%"><td class="text-center" ng-repeat="(j, el) in row"><button tabindex="-1" type="button" class="btn btn-default" style="width: 100%" ng-class="{\'btn-primary\': el.selected, \'btn-info btn-today\': el.isToday && !el.selected}" ng-click="$select(el.date)" ng-disabled="el.disabled"><span ng-class="{\'text-muted\': el.muted}" ng-bind="el.label"></span></button></td></tr></tbody></table></div>')}]),angular.module("mgcrea.ngStrap.dropdown").run(["$templateCache",function(t){t.put("dropdown/dropdown.tpl.html",'<ul tabindex="-1" class="dropdown-menu" role="menu"><li role="presentation" ng-class="{divider: item.divider}" ng-repeat="item in content"><a role="menuitem" tabindex="-1" ng-href="{{item.href}}" ng-if="!item.divider && item.href" target="{{item.target || \'\'}}" ng-bind="item.text"></a> <a role="menuitem" tabindex="-1" href="javascript:void(0)" ng-if="!item.divider && item.click" ng-click="$eval(item.click);$hide()" ng-bind="item.text"></a></li></ul>')}]),angular.module("mgcrea.ngStrap.modal").run(["$templateCache",function(t){t.put("modal/modal.tpl.html",'<div class="modal" tabindex="-1" role="dialog" aria-hidden="true"><div class="modal-dialog"><div class="modal-content"><div class="modal-header" ng-show="title"><button type="button" class="close" aria-label="Close" ng-click="$hide()"><span aria-hidden="true">&times;</span></button><h4 class="modal-title" ng-bind="title"></h4></div><div class="modal-body" ng-bind="content"></div><div class="modal-footer"><button type="button" class="btn btn-default" ng-click="$hide()">Close</button></div></div></div></div>')}]),angular.module("mgcrea.ngStrap.popover").run(["$templateCache",function(t){t.put("popover/popover.tpl.html",'<div class="popover"><div class="arrow"></div><h3 class="popover-title" ng-bind="title" ng-show="title"></h3><div class="popover-content" ng-bind="content"></div></div>')}]),angular.module("mgcrea.ngStrap.select").run(["$templateCache",function(t){t.put("select/select.tpl.html",'<ul tabindex="-1" class="select dropdown-menu" ng-show="$isVisible()" role="select"><li ng-if="$showAllNoneButtons"><div class="btn-group" style="margin-bottom: 5px; margin-left: 5px"><button type="button" class="btn btn-default btn-xs" ng-click="$selectAll()">{{$allText}}</button> <button type="button" class="btn btn-default btn-xs" ng-click="$selectNone()">{{$noneText}}</button></div></li><li role="presentation" ng-repeat="match in $matches" ng-class="{active: $isActive($index)}"><a style="cursor: default" role="menuitem" tabindex="-1" ng-click="$select($index, $event)"><i class="{{$iconCheckmark}} pull-right" ng-if="$isMultiple && $isActive($index)"></i> <span ng-bind="match.label"></span></a></li></ul>')}]),angular.module("mgcrea.ngStrap.timepicker").run(["$templateCache",function(t){t.put("timepicker/timepicker.tpl.html",'<div class="dropdown-menu timepicker" style="min-width: 0px;width: auto"><table height="100%"><thead><tr class="text-center"><th><button tabindex="-1" type="button" class="btn btn-default pull-left" ng-click="$arrowAction(-1, 0)"><i class="{{ $iconUp }}"></i></button></th><th>&nbsp;</th><th><button tabindex="-1" type="button" class="btn btn-default pull-left" ng-click="$arrowAction(-1, 1)"><i class="{{ $iconUp }}"></i></button></th><th>&nbsp;</th><th><button ng-if="showSeconds" tabindex="-1" type="button" class="btn btn-default pull-left" ng-click="$arrowAction(-1, 2)"><i class="{{ $iconUp }}"></i></button></th></tr></thead><tbody><tr ng-repeat="(i, row) in rows"><td class="text-center"><button tabindex="-1" style="width: 100%" type="button" class="btn btn-default" ng-class="{\'btn-primary\': row[0].selected}" ng-click="$select(row[0].date, 0)" ng-disabled="row[0].disabled"><span ng-class="{\'text-muted\': row[0].muted}" ng-bind="row[0].label"></span></button></td><td><span ng-bind="i == midIndex ? timeSeparator : \' \'"></span></td><td class="text-center"><button tabindex="-1" ng-if="row[1].date" style="width: 100%" type="button" class="btn btn-default" ng-class="{\'btn-primary\': row[1].selected}" ng-click="$select(row[1].date, 1)" ng-disabled="row[1].disabled"><span ng-class="{\'text-muted\': row[1].muted}" ng-bind="row[1].label"></span></button></td><td><span ng-bind="i == midIndex ? timeSeparator : \' \'"></span></td><td class="text-center"><button tabindex="-1" ng-if="showSeconds && row[2].date" style="width: 100%" type="button" class="btn btn-default" ng-class="{\'btn-primary\': row[2].selected}" ng-click="$select(row[2].date, 2)" ng-disabled="row[2].disabled"><span ng-class="{\'text-muted\': row[2].muted}" ng-bind="row[2].label"></span></button></td><td ng-if="showAM">&nbsp;</td><td ng-if="showAM"><button tabindex="-1" ng-show="i == midIndex - !isAM * 1" style="width: 100%" type="button" ng-class="{\'btn-primary\': !!isAM}" class="btn btn-default" ng-click="$switchMeridian()" ng-disabled="el.disabled">AM</button> <button tabindex="-1" ng-show="i == midIndex + 1 - !isAM * 1" style="width: 100%" type="button" ng-class="{\'btn-primary\': !isAM}" class="btn btn-default" ng-click="$switchMeridian()" ng-disabled="el.disabled">PM</button></td></tr></tbody><tfoot><tr class="text-center"><th><button tabindex="-1" type="button" class="btn btn-default pull-left" ng-click="$arrowAction(1, 0)"><i class="{{ $iconDown }}"></i></button></th><th>&nbsp;</th><th><button tabindex="-1" type="button" class="btn btn-default pull-left" ng-click="$arrowAction(1, 1)"><i class="{{ $iconDown }}"></i></button></th><th>&nbsp;</th><th><button ng-if="showSeconds" tabindex="-1" type="button" class="btn btn-default pull-left" ng-click="$arrowAction(1, 2)"><i class="{{ $iconDown }}"></i></button></th></tr></tfoot></table></div>')}]),angular.module("mgcrea.ngStrap.tab").run(["$templateCache",function(t){t.put("tab/tab.tpl.html",'<ul class="nav" ng-class="$navClass" role="tablist"><li role="presentation" ng-repeat="$pane in $panes track by $index" ng-class="[ $isActive($pane, $index) ? $activeClass : \'\', $pane.disabled ? \'disabled\' : \'\' ]"><a role="tab" data-toggle="tab" ng-click="!$pane.disabled && $setActive($pane.name || $index)" data-index="{{ $index }}" ng-bind-html="$pane.title" aria-controls="$pane.title"></a></li></ul><div ng-transclude class="tab-content"></div>')}]),angular.module("mgcrea.ngStrap.typeahead").run(["$templateCache",function(t){t.put("typeahead/typeahead.tpl.html",'<ul tabindex="-1" class="typeahead dropdown-menu" ng-show="$isVisible()" role="select"><li role="presentation" ng-repeat="match in $matches" ng-class="{active: $index == $activeIndex}"><a role="menuitem" tabindex="-1" ng-click="$select($index, $event)" ng-bind="match.label"></a></li></ul>')}]),angular.module("mgcrea.ngStrap.tooltip").run(["$templateCache",function(t){t.put("tooltip/tooltip.tpl.html",'<div class="tooltip in" ng-show="title"><div class="tooltip-arrow"></div><div class="tooltip-inner" ng-bind="title"></div></div>')}])}(window,document);
!function(t){"use strict";"function"==typeof define&&define.amd?define(t):"undefined"!=typeof module&&"undefined"!=typeof module.exports?module.exports=t():"undefined"!=typeof Package?Sortable=t():window.Sortable=t()}(function(){"use strict";function t(t,e){this.el=t,this.options=e=v({},e),t[Y]=this;var i={group:Math.random(),sort:!0,disabled:!1,store:null,handle:null,scroll:!0,scrollSensitivity:30,scrollSpeed:10,draggable:/[uo]l/i.test(t.nodeName)?"li":">*",ghostClass:"sortable-ghost",ignore:"a, img",filter:null,animation:0,setData:function(t,e){t.setData("Text",e.textContent)},dropBubble:!1,dragoverBubble:!1,dataIdAttr:"data-id",delay:0};for(var o in i)!(o in e)&&(e[o]=i[o]);var a=e.group;a&&"object"==typeof a||(a=e.group={name:a}),["pull","put"].forEach(function(t){t in a||(a[t]=!0)}),e.groups=" "+a.name+(a.put.join?" "+a.put.join(" "):"")+" ";for(var s in this)"_"===s.charAt(0)&&(this[s]=n(this,this[s]));r(t,"mousedown",this._onTapStart),r(t,"touchstart",this._onTapStart),r(t,"dragover",this),r(t,"dragenter",this),H.push(this._onDragOver),e.store&&this.sort(e.store.get(this))}function e(t){D&&D.state!==t&&(l(D,"display",t?"none":""),!t&&D.state&&b.insertBefore(D,m),D.state=t)}function n(t,e){var n=k.call(arguments,2);return e.bind?e.bind.apply(e,[t].concat(n)):function(){return e.apply(t,n.concat(k.call(arguments)))}}function i(t,e,n){if(t){n=n||X,e=e.split(".");var i=e.shift().toUpperCase(),o=new RegExp("\\s("+e.join("|")+")\\s","g");do if(">*"===i&&t.parentNode===n||(""===i||t.nodeName.toUpperCase()==i)&&(!e.length||((" "+t.className+" ").match(o)||[]).length==e.length))return t;while(t!==n&&(t=t.parentNode))}return null}function o(t){t.dataTransfer.dropEffect="move",t.preventDefault()}function r(t,e,n){t.addEventListener(e,n,!1)}function a(t,e,n){t.removeEventListener(e,n,!1)}function s(t,e,n){if(t)if(t.classList)t.classList[n?"add":"remove"](e);else{var i=(" "+t.className+" ").replace(O," ").replace(" "+e+" "," ");t.className=(i+(n?" "+e:"")).replace(O," ")}}function l(t,e,n){var i=t&&t.style;if(i){if(void 0===n)return X.defaultView&&X.defaultView.getComputedStyle?n=X.defaultView.getComputedStyle(t,""):t.currentStyle&&(n=t.currentStyle),void 0===e?n:n[e];e in i||(e="-webkit-"+e),i[e]=n+("string"==typeof n?"":"px")}}function d(t,e,n){if(t){var i=t.getElementsByTagName(e),o=0,r=i.length;if(n)for(;r>o;o++)n(i[o],o);return i}return[]}function u(t){t.draggable=!1}function c(){U=!1}function h(t,e){var n=t.lastElementChild,i=n.getBoundingClientRect();return e.clientY-(i.top+i.height)>5&&n}function f(t){for(var e=t.tagName+t.className+t.src+t.href+t.textContent,n=e.length,i=0;n--;)i+=e.charCodeAt(n);return i.toString(36)}function p(t){for(var e=0;t&&(t=t.previousElementSibling);)"TEMPLATE"!==t.nodeName.toUpperCase()&&e++;return e}function g(t,e){var n,i;return function(){void 0===n&&(n=arguments,i=this,setTimeout(function(){1===n.length?t.call(i,n[0]):t.apply(i,n),n=void 0},e))}}function v(t,e){if(t&&e)for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var m,_,D,b,y,S,w,T,C,x,E,N,B,A,I={},O=/\s+/g,Y="Sortable"+(new Date).getTime(),R=window,X=R.document,M=R.parseInt,L=!!("draggable"in X.createElement("div")),U=!1,P=function(t,e,n,i,o,r,a){var s=X.createEvent("Event"),l=(t||e[Y]).options,d="on"+n.charAt(0).toUpperCase()+n.substr(1);s.initEvent(n,!0,!0),s.item=i||e,s.from=o||e,s.clone=D,s.oldIndex=r,s.newIndex=a,l[d]&&l[d].call(t,s),e.dispatchEvent(s)},W=Math.abs,k=[].slice,H=[],j=g(function(t,e,n){if(n&&e.scroll){var i,o,r,a,s=e.scrollSensitivity,l=e.scrollSpeed,d=t.clientX,u=t.clientY,c=window.innerWidth,h=window.innerHeight;if(w!==n&&(S=e.scroll,w=n,S===!0)){S=n;do if(S.offsetWidth<S.scrollWidth||S.offsetHeight<S.scrollHeight)break;while(S=S.parentNode)}S&&(i=S,o=S.getBoundingClientRect(),r=(W(o.right-d)<=s)-(W(o.left-d)<=s),a=(W(o.bottom-u)<=s)-(W(o.top-u)<=s)),r||a||(r=(s>=c-d)-(s>=d),a=(s>=h-u)-(s>=u),(r||a)&&(i=R)),(I.vx!==r||I.vy!==a||I.el!==i)&&(I.el=i,I.vx=r,I.vy=a,clearInterval(I.pid),i&&(I.pid=setInterval(function(){i===R?R.scrollTo(R.pageXOffset+r*l,R.pageYOffset+a*l):(a&&(i.scrollTop+=a*l),r&&(i.scrollLeft+=r*l))},24)))}},30);return t.prototype={constructor:t,_onTapStart:function(t){var e=this,n=this.el,o=this.options,r=t.type,a=t.touches&&t.touches[0],s=(a||t).target,l=s,d=o.filter;if(!("mousedown"===r&&0!==t.button||o.disabled)&&(s=i(s,o.draggable,n))){if(x=p(s),"function"==typeof d){if(d.call(this,t,s,this))return P(e,l,"filter",s,n,x),void t.preventDefault()}else if(d&&(d=d.split(",").some(function(t){return t=i(l,t.trim(),n),t?(P(e,t,"filter",s,n,x),!0):void 0})))return void t.preventDefault();(!o.handle||i(l,o.handle,n))&&this._prepareDragStart(t,a,s)}},_prepareDragStart:function(t,e,n){var i,o=this,a=o.el,s=o.options,l=a.ownerDocument;n&&!m&&n.parentNode===a&&(B=t,b=a,m=n,y=m.nextSibling,N=s.group,i=function(){o._disableDelayedDrag(),m.draggable=!0,s.ignore.split(",").forEach(function(t){d(m,t.trim(),u)}),o._triggerDragStart(e)},r(l,"mouseup",o._onDrop),r(l,"touchend",o._onDrop),r(l,"touchcancel",o._onDrop),s.delay?(r(l,"mousemove",o._disableDelayedDrag),r(l,"touchmove",o._disableDelayedDrag),o._dragStartTimer=setTimeout(i,s.delay)):i())},_disableDelayedDrag:function(){var t=this.el.ownerDocument;clearTimeout(this._dragStartTimer),a(t,"mousemove",this._disableDelayedDrag),a(t,"touchmove",this._disableDelayedDrag)},_triggerDragStart:function(t){t?(B={target:m,clientX:t.clientX,clientY:t.clientY},this._onDragStart(B,"touch")):L?(r(m,"dragend",this),r(b,"dragstart",this._onDragStart)):this._onDragStart(B,!0);try{X.selection?X.selection.empty():window.getSelection().removeAllRanges()}catch(e){}},_dragStarted:function(){b&&m&&(s(m,this.options.ghostClass,!0),t.active=this,P(this,b,"start",m,b,x))},_emulateDragOver:function(){if(A){l(_,"display","none");var t=X.elementFromPoint(A.clientX,A.clientY),e=t,n=" "+this.options.group.name,i=H.length;if(e)do{if(e[Y]&&e[Y].options.groups.indexOf(n)>-1){for(;i--;)H[i]({clientX:A.clientX,clientY:A.clientY,target:t,rootEl:e});break}t=e}while(e=e.parentNode);l(_,"display","")}},_onTouchMove:function(t){if(B){var e=t.touches?t.touches[0]:t,n=e.clientX-B.clientX,i=e.clientY-B.clientY,o=t.touches?"translate3d("+n+"px,"+i+"px,0)":"translate("+n+"px,"+i+"px)";A=e,l(_,"webkitTransform",o),l(_,"mozTransform",o),l(_,"msTransform",o),l(_,"transform",o),t.preventDefault()}},_onDragStart:function(t,e){var n=t.dataTransfer,i=this.options;if(this._offUpEvents(),"clone"==N.pull&&(D=m.cloneNode(!0),l(D,"display","none"),b.insertBefore(D,m)),e){var o,a=m.getBoundingClientRect(),s=l(m);_=m.cloneNode(!0),l(_,"top",a.top-M(s.marginTop,10)),l(_,"left",a.left-M(s.marginLeft,10)),l(_,"width",a.width),l(_,"height",a.height),l(_,"opacity","0.8"),l(_,"position","fixed"),l(_,"zIndex","100000"),b.appendChild(_),o=_.getBoundingClientRect(),l(_,"width",2*a.width-o.width),l(_,"height",2*a.height-o.height),"touch"===e?(r(X,"touchmove",this._onTouchMove),r(X,"touchend",this._onDrop),r(X,"touchcancel",this._onDrop)):(r(X,"mousemove",this._onTouchMove),r(X,"mouseup",this._onDrop)),this._loopId=setInterval(this._emulateDragOver,150)}else n&&(n.effectAllowed="move",i.setData&&i.setData.call(this,n,m)),r(X,"drop",this);setTimeout(this._dragStarted,0)},_onDragOver:function(t){var n,o,r,a=this.el,s=this.options,d=s.group,u=d.put,f=N===d,p=s.sort;if(void 0!==t.preventDefault&&(t.preventDefault(),!s.dragoverBubble&&t.stopPropagation()),N&&!s.disabled&&(f?p||(r=!b.contains(m)):N.pull&&u&&(N.name===d.name||u.indexOf&&~u.indexOf(N.name)))&&(void 0===t.rootEl||t.rootEl===this.el)){if(j(t,s,this.el),U)return;if(n=i(t.target,s.draggable,a),o=m.getBoundingClientRect(),r)return e(!0),void(D||y?b.insertBefore(m,D||y):p||b.appendChild(m));if(0===a.children.length||a.children[0]===_||a===t.target&&(n=h(a,t))){if(n){if(n.animated)return;v=n.getBoundingClientRect()}e(f),a.appendChild(m),this._animate(o,m),n&&this._animate(v,n)}else if(n&&!n.animated&&n!==m&&void 0!==n.parentNode[Y]){T!==n&&(T=n,C=l(n));var g,v=n.getBoundingClientRect(),S=v.right-v.left,w=v.bottom-v.top,x=/left|right|inline/.test(C.cssFloat+C.display),E=n.offsetWidth>m.offsetWidth,B=n.offsetHeight>m.offsetHeight,A=(x?(t.clientX-v.left)/S:(t.clientY-v.top)/w)>.5,I=n.nextElementSibling;U=!0,setTimeout(c,30),e(f),g=x?n.previousElementSibling===m&&!E||A&&E:I!==m&&!B||A&&B,g&&!I?a.appendChild(m):n.parentNode.insertBefore(m,g?I:n),this._animate(o,m),this._animate(v,n)}}},_animate:function(t,e){var n=this.options.animation;if(n){var i=e.getBoundingClientRect();l(e,"transition","none"),l(e,"transform","translate3d("+(t.left-i.left)+"px,"+(t.top-i.top)+"px,0)"),e.offsetWidth,l(e,"transition","all "+n+"ms"),l(e,"transform","translate3d(0,0,0)"),clearTimeout(e.animated),e.animated=setTimeout(function(){l(e,"transition",""),l(e,"transform",""),e.animated=!1},n)}},_offUpEvents:function(){var t=this.el.ownerDocument;a(X,"touchmove",this._onTouchMove),a(t,"mouseup",this._onDrop),a(t,"touchend",this._onDrop),a(t,"touchcancel",this._onDrop)},_onDrop:function(e){var n=this.el,i=this.options;clearInterval(this._loopId),clearInterval(I.pid),clearTimeout(this.dragStartTimer),a(X,"drop",this),a(X,"mousemove",this._onTouchMove),a(n,"dragstart",this._onDragStart),this._offUpEvents(),e&&(e.preventDefault(),!i.dropBubble&&e.stopPropagation(),_&&_.parentNode.removeChild(_),m&&(a(m,"dragend",this),u(m),s(m,this.options.ghostClass,!1),b!==m.parentNode?(E=p(m),P(null,m.parentNode,"sort",m,b,x,E),P(this,b,"sort",m,b,x,E),P(null,m.parentNode,"add",m,b,x,E),P(this,b,"remove",m,b,x,E)):(D&&D.parentNode.removeChild(D),m.nextSibling!==y&&(E=p(m),P(this,b,"update",m,b,x,E),P(this,b,"sort",m,b,x,E))),t.active&&P(this,b,"end",m,b,x,E)),b=m=_=y=D=S=w=B=A=T=C=N=t.active=null,this.save())},handleEvent:function(t){var e=t.type;"dragover"===e||"dragenter"===e?m&&(this._onDragOver(t),o(t)):("drop"===e||"dragend"===e)&&this._onDrop(t)},toArray:function(){for(var t,e=[],n=this.el.children,o=0,r=n.length,a=this.options;r>o;o++)t=n[o],i(t,a.draggable,this.el)&&e.push(t.getAttribute(a.dataIdAttr)||f(t));return e},sort:function(t){var e={},n=this.el;this.toArray().forEach(function(t,o){var r=n.children[o];i(r,this.options.draggable,n)&&(e[t]=r)},this),t.forEach(function(t){e[t]&&(n.removeChild(e[t]),n.appendChild(e[t]))})},save:function(){var t=this.options.store;t&&t.set(this)},closest:function(t,e){return i(t,e||this.options.draggable,this.el)},option:function(t,e){var n=this.options;return void 0===e?n[t]:void(n[t]=e)},destroy:function(){var t=this.el;t[Y]=null,a(t,"mousedown",this._onTapStart),a(t,"touchstart",this._onTapStart),a(t,"dragover",this),a(t,"dragenter",this),Array.prototype.forEach.call(t.querySelectorAll("[draggable]"),function(t){t.removeAttribute("draggable")}),H.splice(H.indexOf(this._onDragOver),1),this._onDrop(),this.el=t=null}},t.utils={on:r,off:a,css:l,find:d,bind:n,is:function(t,e){return!!i(t,e,t)},extend:v,throttle:g,closest:i,toggleClass:s,index:p},t.version="1.2.0",t.create=function(e,n){return new t(e,n)},t});
!function(n){"use strict";window.angular&&window.Sortable?n(angular,Sortable):"function"==typeof define&&define.amd&&define(["angular","./Sortable"],n)}(function(n,e){"use strict";n.module("ng-sortable",[]).constant("version","0.3.7").directive("ngSortable",["$parse",function(t){function o(e){var o=n.element(e).scope(),i=[].filter.call(e.childNodes,function(n){return 8===n.nodeType&&-1!==n.nodeValue.indexOf("ngRepeat:")})[0];if(!i)return null;i=i.nodeValue.match(/ngRepeat:\s*(?:\(.*?,\s*)?([^\s)]+)[\s)]+in\s+([^\s|]+)/);var r=t(i[1]),a=t(i[2]);return{item:function(e){return r(n.element(e).scope())},items:function(){return a(o)}}}var i,r;return{restrict:"AC",link:function(t,a,l){function c(n,e){var t="on"+n.type.charAt(0).toUpperCase()+n.type.substr(1);p[t]&&p[t]({model:e||m&&m.item(n.item),models:m&&m.items(),oldIndex:n.oldIndex,newIndex:n.newIndex})}function d(e){if(m){var a=e.oldIndex,l=e.newIndex,c=m.items();if(s!==e.from){var d=o(e.from),u=d.items();a=u.indexOf(d.item(e.item)),i=u[a],e.clone?(e.from.removeChild(e.clone),i=n.copy(i)):u.splice(a,1),c.splice(l,0,i),e.from.insertBefore(e.item,r)}else c.splice(l,0,c.splice(a,1)[0]);t.$apply()}}var u,s=a[0],f=l.ngSortable,p=t.$eval(f)||{},m=o(s);u=e.create(s,Object.keys(p).reduce(function(n,e){return n[e]=n[e]||p[e],n},{onStart:function(n){r=n.item.nextSibling,c(n),t.$apply()},onEnd:function(n){c(n,i),t.$apply()},onAdd:function(n){d(n),c(n,i),t.$apply()},onUpdate:function(n){d(n),c(n)},onRemove:function(n){c(n,i)},onSort:function(n){c(n)}})),a.on("$destroy",function(){u.destroy(),u=null,r=null}),f&&!/{|}/.test(f)&&n.forEach(["sort","disabled","draggable","handle","animation","onStart","onEnd","onAdd","onUpdate","onRemove","onSort"],function(n){t.$watch(f+"."+n,function(e){void 0!==e&&(p[n]=e,/^on[A-Z]/.test(n)||u.option(n,e))})})}}}])});
!function(){"use strict";angular.module("taskmastrApp",["ngTouch","ngAnimate","mgcrea.ngStrap.datepicker","ng-sortable","taskmastrControllers","taskmastrDirectives"])}();
!function(){"use strict";var e=angular.module("taskmastrControllers",[]);e.config(["$locationProvider",function(e){e.html5Mode(!0)}]),e.controller("UserController",["$http","$scope","$log","$location",function(e,r,t,s){e.get("/session-data").success(function(e){e&&(r.user.username=e.username,r.user.key=e.key,r.user.todos=e.todos,r.user.current=_.find(r.user.todos,_.matchesProperty("current",!0))?_.find(r.user.todos,_.matchesProperty("current",!0)):{list:"List 1",current:!0,items:[]},e.hasOwnProperty("key")&&(r.user.key=e.key),r.user.darkmode=e.hasOwnProperty("darkmode")?e.darkmode:!1)}).error(function(e,r){t.log("Get fail"),t.log(r)}),r.sortableOptions={handle:".sort",sort:!0,animation:150,ghostClass:"ghost",scroll:!0,scrollSensitivity:30,scrollSpeed:10,onUpdate:function(e){var t,s=e.model.item,o=e.model.complete;r.user.current.items.every(function(e,r){return e.complete===!0&&e.item!=s?(t=r,!1):!0});var n;e.newIndex>t&&!o?(n=r.user.current.items.splice(e.newIndex,1),r.user.current.items.splice(t,0,n[0])):e.newIndex<t&&o&&(n=r.user.current.items.splice(e.newIndex,1),r.user.current.items.splice(t-1,0,n[0]))}};var o=0,n=s.search().reset;n&&(r.resetForm=!0,r.resetToken=s.search().token),r.lookup=function(s,o,n){e.post("/users/login",{username:s,key:o,rememberMe:n}).success(function(e){e?(r.user.todos=e.todos,r.user.current=_.find(r.user.todos,_.matchesProperty("current",!0))?_.find(r.user.todos,_.matchesProperty("current",!0)):{list:"List 1",current:!0,items:[]},e.hasOwnProperty("key")&&(r.user.key=e.key),r.user.darkmode=e.hasOwnProperty("darkmode")?e.darkmode:!1):(r.confirmPassword=!0,r.invalidPassword=!1)}).error(function(e,s){t.log(s),401===s&&(r.invalidPassword=!0,r.confirmPassword=!1)})},r.setToken=function(s){e.post("users/forgot",{username:s}).success(function(e){t.log(e),r.emailSent=!0}).error(function(e,s){t.log(s),r.emailSent=!1})},r.resetPassword=function(o,n){e.post("/users/reset",{token:o,newKey:n}).success(function(e){e&&(r.user.todos=e.todos,r.user.current=_.find(r.user.todos,_.matchesProperty("current",!0))?_.find(r.user.todos,_.matchesProperty("current",!0)):{list:"List 1",current:!0,items:[]},e.hasOwnProperty("key")&&(r.user.key=e.key),r.user.darkmode=e.hasOwnProperty("darkmode")?e.darkmode:!1,s.path("/"))}).error(function(e,s){r.resetFail=!0,t.log(s)})},r.addUser=function(s,o,n){e.post("/users/create",{username:s,key:o,rememberMe:n}).success(function(e){r.user.todos=e.todos?e.todos:[{list:"List 1",current:!0,items:[]}],r.user.current=_.find(r.user.todos,_.matchesProperty("current",!0))?_.find(r.user.todos,_.matchesProperty("current",!0)):{list:"List 1",current:!0,items:[]},e.hasOwnProperty("key")&&(r.user.key=e.key),r.user.darkmode=e.hasOwnProperty("darkmode")?e.darkmode:!1,r.write(s)}).error(function(e,r){t.log("Error connecting to db!"),t.log(r)})},r.create=function(e,t){e.unshift(e===r.user.todos?{list:t,current:!1,items:[]}:{item:t,complete:!1})},r.write=function(s){var o=new Date;r.user.dateModified=o.toISOString(),_.set(r.user.todos,_.find(r.user.todos,_.matchesProperty("current",!0)),r.user.current),r.saveButton=!1,e.post("/users/write",{user:{username:r.user.username,todos:r.user.todos,darkmode:r.user.darkmode,dateModified:o}}).success(function(e){t.log("Writing data... OK")}).error(function(e,r){t.log("Error writing data!"),t.log(r)})},r.logout=function(){e.get("/users/logout").success(function(e){window.location.href="/"}).error(function(e,r){t.log("Error logging out! "),t.log(r)})},r.$watch("user.todos",function(e,t){e!==t&&(o>=2&&(r.saveButton=!0),o+=1)},!0),r.$watch("user.darkmode",function(e,t){e!==t&&(o>=2&&(r.saveButton=!0),o+=1)},!0),r.setCurrent=function(e){_.set(r.user.todos,_.find(r.user.todos,_.matchesProperty("current",!0)),r.user.current),_.set(_.find(r.user.todos,_.matchesProperty("current",!0)),"current",!1),r.user.current=r.user.todos[e],_.set(r.user.todos[e],"current",!0)}}])}();
!function(){function e(){return $(window).width()>768?!0:!1}var t,n=angular.module("taskmastrDirectives",[]);n.directive("complete",function(){return{restrict:"A",scope:{complete:"=",completeIndex:"="},link:function(e,t,n){t.bind("click",function(){e.$apply(function(){var t=e.complete,n=t.length,o=t.splice(e.completeIndex,1);_.each(t,function(e,t){return e.complete===!0?(n=t,!1):void 0}),t.splice(n,0,o[0])})})}}}),n.directive("save",function(){return{restrict:"A",scope:!1,link:function(e,t,n){t.bind("click",function(){e.write(e.user.username),t.removeClass("toggled")})}}}),n.directive("checkButton",function(){return{restrict:"A",scope:!1,link:function(e,t,n){t.bind("click",function(){t.siblings(".check").click()})}}}),n.directive("createTodo",function(){return{restrict:"A",scope:!1,link:function(e,t,n){t.bind("keydown",function(e){var n=e.which;13===n&&(t.siblings(".submit").click(),t.val(""))})}}}),n.directive("todoButton",function(){return{restrict:"A",scope:{todoButton:"=",todoModel:"="},link:function(e,t,n){t.bind("click",function(t){e.$apply(function(){e.todoModel&&(e.$parent.create(e.todoButton,e.todoModel),e.todoModel="")})}),t.bind("mousedown",function(e){t.siblings("input:text").val()?($(this).removeClass("fa-arrow-down"),$(this).addClass("fa-smile-o")):($(this).removeClass("fa-arrow-down"),$(this).addClass("fa-meh-o"))}),t.bind("mouseup",function(e){$(this).removeClass("fa-smile-o").removeClass("fa-meh-o"),$(this).addClass("fa-arrow-down")})}}}),n.directive("inputKey",function(){return{restrict:"A",scope:!1,link:function(e,t,n){t.bind("keydown",function(e){var t=e.which;13===t&&("key"===n.inputKey&&$("#key-button").click(),"confirm"===n.inputKey&&$("#confirm-button").click())})}}}),n.directive("loginForm",function(){return{restrict:"A",scope:!1,link:function(e,t,n){t.bind("submit",function(t){e.$apply(function(){var t=e.user.username,n=e.user.key,o=e.user.confirm,i=e.rememberMe;e.confirmPassword||e.lookup(t,n,i),e.confirmPassword&&!e.userForm.confirm.$error.pattern&&e.addUser(t,o,i)})}),$("#user-form .submit").on({mousedown:function(t){$(this).removeClass("fa-arrow-right"),$(this).addClass(e.userForm.$invalid?"fa-meh-o":"fa-smile-o")},mouseup:function(e){$(this).removeClass("fa-smile-o").removeClass("fa-meh-o"),$(this).addClass("fa-arrow-right")},click:function(t){return e.$apply(function(){e.formAttempt=!0}),e.forgot?(e.setToken(e.user.username),!1):void(e.userForm.$invalid&&t.preventDefault())}})}}}),n.directive("resetForm",function(){return{restrict:"A",scope:!1,link:function(e,t,n){t.bind("submit",function(t){e.$apply(function(t){var n=e.resetToken,o=e.user.newKey;e.resetForm.confirmReset.$error.pattern||e.resetPassword(n,o)})}),$("#user-form .submit").on({mousedown:function(t){$(this).removeClass("fa-arrow-right"),$(this).addClass(e.userForm.$invalid?"fa-meh-o":"fa-smile-o")},mouseup:function(e){$(this).removeClass("fa-smile-o").removeClass("fa-meh-o"),$(this).addClass("fa-arrow-right")},click:function(t){e.$apply(function(){e.formAttempt=!0}),e.resetForm.$invalid&&t.preventDefault()}})}}}),n.directive("deleteButton",function(){return{restrict:"A",scope:{deleteButton:"=",deleteIndex:"="},link:function(e,n,o){n.bind("click",function(o){e.$apply(function(){var o=n.parents("tr");o.hasClass("deleting")?(clearTimeout(t),n.removeClass("fa-undo").addClass("fa-trash-o"),o.removeClass("deleting")):(n.removeClass("fa-trash-o").addClass("fa-undo"),o.addClass("deleting"),t=setTimeout(function(){var t=e.deleteIndex,i=e.deleteButton,s=i.length,r=i.splice(t,1);r[0].current&&1===s?(i.splice(0,1,r[0]),n.removeClass("fa-undo").addClass("fa-trash-o"),o.removeClass("deleting")):r[0].current&&t===s-1?e.$parent.setCurrent(0):r[0].current&&e.$parent.setCurrent(t),e.$apply()},5e3))})})}}}),n.directive("tipsButton",function(){return{restrict:"A",scope:!1,link:function(e,t,n){t.bind("click",function(e){$("#tips-button").hasClass("toggled")?$(".fine-print").velocity("slideUp",{duration:250,complete:function(){$("#tips-button").removeClass("toggled")}}):$(".fine-print").velocity("slideDown",{duration:250,complete:function(){$("#tips-button").addClass("toggled")}})})}}}),n.directive("menuToggle",function(){return{restrict:"A",scope:!1,link:function(t,n,o){n.bind("click",function(t){$("#menu").hasClass("toggled")?($("#content").removeClass("menued"),n.removeClass("toggled"),n.find(".fa-times").removeClass("fa-times").addClass("fa-bars"),$("#menu").removeClass("toggled"),e()&&$("#create-todo").focus()):($("#content").addClass("menued"),n.addClass("toggled"),n.find(".fa-bars").removeClass("fa-bars").addClass("fa-times"),$("#menu").addClass("toggled"),e()&&$("#create-list").focus())})}}})}();
function windowWidth(){return $(window).width()>768?!0:!1}function keyModal(){windowWidth()&&$("#user").focus()}function renameItem(){$("table tbody").on("dblclick",".name",function(){$(this).hide(),$(this).siblings(".rename").show().select()}),$("table tbody").on("click",".fa-pencil",function(){var t=$(this).parents("tr").find("span.name"),n=$(this).parents("tr").find(".rename");t.hide(),n.show().select()});var t=function(t){$(".rename").val()&&(t.siblings(".name").show(),t.hide())};$("table tbody").on({keydown:function(n){var o=n.which;13===o&&t($(this))},blur:function(){t($(this))}},".rename")}function shortcut(t,n,o){var e={};e[t]=!1,e[n]=!1,$(document).keydown(function(i){i.which in e&&(e[i.which]=!0,e[t]&&e[n]&&($(o).click(),e[t]=!1,e[n]=!1))}),$(document).keyup(function(t){t.which in e&&(e[t.which]=!1)})}function todoHover(){tap||($("#content table tbody").on("mouseenter",'tr:not(".complete"):not(".deleting")',function(){$(this).stop().velocity({backgroundColor:"#00B0FF",backgroundColorAlpha:1},{duration:0})}),$("#content table tbody").on("mouseleave","tr",function(){$(this).velocity({backgroundColorAlpha:0},{duration:500})}))}var tap="ontouchstart"in document.documentElement;$(keyModal),$(renameItem),$(shortcut(91,40,"#save-button.toggled")),$(shortcut(91,39,'#icon-menu:not(".toggled")')),$(shortcut(91,37,"#icon-menu.toggled")),$(shortcut(91,38,"#dark-mode")),$(todoHover);
//# sourceMappingURL=data:application/json;base64,